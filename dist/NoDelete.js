function O(e){window.enmity.plugins.registerPlugin(e)}const T={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function M(...e){return window.enmity.modules.bulk(...e)}function x(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function G(e){return window.enmity.patcher.create(e)}var H="NoDelete",Y="1.3.8",j='Basic "Message Logger"',z=[{name:"Marek (modified by spin)",id:"308440976723148800"}],W="#ff0069",X="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/NoDelete.js",a={name:H,version:Y,description:j,authors:z,color:W,sourceUrl:X};const p=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const R=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const D=window.enmity.modules.common.Storage,w=window.enmity.modules.common.Toasts,$=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const N=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const q=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const U=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function J(e,t,i){return window.enmity.settings.getBoolean(e,t,i)}const B=e=>{let t=0;for(let i in e)t++;return t},K=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[B(t)]=`${t[B(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function Q(){try{let e=await D.getItem("device_list");if(e)return JSON.parse(e);let t=(await N.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=K(t);await D.setItem("device_list",i);let m=await D.getItem("device_list");return JSON.parse(m)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function Z(e,t){let i=await Q();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${R.DCDDeviceManager.systemVersion}
> **Device:** ${i[R.DCDDeviceManager.device]}`}function d(e){return window.enmity.assets.getIDByName(e)}const u={Debug:d("debug"),Retry:d("ic_message_retry"),Failed:d("Small"),Cancel:d("ic_megaphone_nsfw_16px"),Delete:d("ic_message_delete"),Copy:d("toast_copy_link"),Open:d("ic_leave_stage"),Clipboard:d("pending-alert"),Debug_Command:{Sent:d("ic_application_command_24px"),Clock:d("clock")},Settings:{Toasts:{Context:d("toast_image_saved"),Settings:d("ic_selection_checked_24px")},Debug:d("ic_rulebook_16px")}},V=e=>{w.open({content:`Copied ${e} to clipboard.`,source:u.Clipboard})},{native:b}=window.enmity;function ee(){b.reload()}b.version,b.build,b.device,b.version;async function te({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`;let i=(await(await N.get(t)).text).match(/[0-9].[0-9].[0-9]/g);!i||(i=i[0].replaceAll('"',""),i!=e.version?ne(t,i,e):oe(e.name,e.version))}const ne=(e,t,i)=>{$.show({title:"Update found",body:`A newer version is available for ${i.name}.
Would you like to install version ${t} now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ie(e,t,i)})},oe=(e,t)=>{console.log(`[${e}] is on the latest version (${t})`),w.open({content:`${e} is on the latest version (${t})`,source:u.Delete})};async function ie(e,t,i){window.enmity.plugins.installPlugin(pluginUrl,({data:m})=>{console.log(`${i.name} Update Error`,m),m=="installed-plugin"||m=="overriden-plugin"?$.show({title:`Updated ${i.name}`,body:`Successfully updated to version ${i.version}. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Later",onConfirm:()=>{ee()}}):$.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{$.close()},onCancel:()=>{Router.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error`)}})})}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const ae=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const se=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const y=o.Text;o.TextInput,o.TouchableHighlight;const E=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const v=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const P=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const s=o.FormRow,k=o.FormSection;o.FormSelect,o.FormSubLabel;const re=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const C=window.enmity.modules.common.Components.General.Animated,[F,le]=M(T.byProps("transitionToGuild"),T.byProps("setString"));var me=({manifest:e})=>{const t=U.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:p.ThemeColorMap.HEADER_PRIMARY,fontFamily:p.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:p.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new C.Value(1)).current,m=()=>{C.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},r=()=>{C.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},f=()=>{F.openURL("https://spin.rip/")},h={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(v,{style:t.container},n.createElement(E,{onPress:f,onPressIn:m,onPressOut:r},n.createElement(C.View,{style:[h]},n.createElement(ae,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(v,{style:t.text_container},n.createElement(E,{onPress:()=>{F.openURL(e.sourceUrl)}},n.createElement(y,{style:[t.main_text,t.header]},e.name," ")),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(y,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(E,{onPress:()=>{F.openURL("https://spin.rip/")}},n.createElement(y,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:p.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(y,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(E,{onPress:()=>{F.openURL("https://github.com/acquitelol/")}},n.createElement(y,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:p.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(v,null,n.createElement(E,{style:{flexDirection:"row"},onPress:()=>{le.setString(`**${e.name}** v${e.version}`),V("plugin name and version")}},n.createElement(y,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(y,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:p.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[ce,de]=M(T.byProps("transitionToGuild"),T.byProps("setString"));var ue=({manifest:e,settings:t,hasToasts:i,section:m})=>{const r=U.createThemedStyleSheet({icon:{color:p.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:p.ThemeColorMap.TEXT_MUTED}}),[f,h]=n.useState(),[S,A]=n.useState();return n.createElement(n.Fragment,null,n.createElement(se,{onTouchStart:l=>{h(l.nativeEvent.pageX),A(l.nativeEvent.pageY)},onTouchEnd:l=>{f-l.nativeEvent.pageX<-100&&S-l.nativeEvent.pageY<40&&S-l.nativeEvent.pageY>-40&&q.pop()}},n.createElement(me,{manifest:e}),m,n.createElement(k,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(s,{label:"Initialization Toasts",leading:n.createElement(s.Icon,{style:r.icon,source:u.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(re,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),w.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} Initialization Toasts.`,source:u.Settings.Toasts.Settings})}})}),n.createElement(P,null)),n.createElement(s,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(s.Icon,{style:r.icon,source:u.Settings.Debug}),trailing:s.Arrow,onPress:async function(){de.setString(await Z(e.name,e.version)),V("plugin debug information")}}),n.createElement(P,null),n.createElement(s,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(s.Icon,{style:r.icon,source:u.Delete}),trailing:s.Arrow,onPress:async function(){await D.removeItem("device_list"),w.open({content:"Cleared device list storage.",source:u.Settings.Toasts.Settings})}})),n.createElement(k,{title:"Source"},n.createElement(s,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(s.Icon,{style:r.icon,source:u.Copy}),trailing:s.Arrow,onPress:()=>{te({manifest:e})}}),n.createElement(P,null),n.createElement(s,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(s.Icon,{style:r.icon,source:u.Open}),trailing:s.Arrow,onPress:()=>{ce.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(s,{label:`Plugin Version: ${e.version}`})))};const I=G("NoDelete"),ge={...a,patches:[],onStart(){let e=0,t=3;const i=()=>{let m=J(a.name,`${a.name}-toastEnable`,!1);try{e++;const r=x("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),f=x("getMessage","getMessages"),h=x("getChannel","getDMFromUserId");console.log(`${a.name} delayed start attempt ${e}/${t}.`),m&&w.open({content:`[${a.name}] start attempt ${e}/${t}.`,source:u.Debug});for(const l of["MESSAGE_UPDATE","MESSAGE_DELETE"])try{r.dispatch({type:l,message:{}})}catch(c){console.log(`[${a.name} Dispatch Error]`,c)}const S=r._actionHandlers._orderedActionHandlers.MESSAGE_DELETE.find(l=>l.name==="MessageStore"),A=r._actionHandlers._orderedActionHandlers.MESSAGE_UPDATE.find(l=>l.name==="MessageStore");I.before(S,"actionHandler",(l,c)=>{const g=f.getMessage(c[0].channelId,c[0].id);if(c[0]={},!(g!=null&&g.editedTimestamp)||(g==null?void 0:g.editedTimestamp._isValid)){const _={type:"MESSAGE_UPDATE",message:{...g,edited_timestamp:"invalid_timestamp",content:g.content+" `[deleted]`",guild_id:h.getChannel(g.channel_id).guild_id},log_edit:!1};r.dispatch(_)}}),I.before(A,"actionHandler",(l,c)=>{var g,_;try{if(c[0].log_edit==!1)return;const L=f.getMessage(c[0].message.channel_id,c[0].message.id);if(!((_=(g=c[0])==null?void 0:g.message)!=null&&_.content))return;try{if(!c[0].edited_timestamp._isValid)return}catch{}c[0].message.content=L.content+" `[edited]`\n"+c[0].message.content;return}catch(L){console.log(`[${a.name} Error]`,L)}}),console.log(`${a.name} delayed start successful.`),m&&w.open({content:`[${a.name}] start successful.`,source:u.Delete})}catch(r){console.log(`[${a.name} Plugin Error]`,r),e<t?(console.warn(`${a.name} failed to start. Trying again in ${e}0s.`),m&&w.open({content:`[${a.name}] failed to start trying again in ${e}0s.`,source:u.Failed}),setTimeout(i,e*1e4)):(console.error(`${a.name} failed to start. Giving up.`),w.open({content:`${a.name} failed to start. Giving up.`,source:u.Failed}))}};setTimeout(()=>{i()},300)},onStop(){I.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(ue,{manifest:a,settings:e,hasToasts:!1,section:[]})}};O(ge);

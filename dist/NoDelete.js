function p(e,o,n){window.enmity.settings.set(e,o,n)}function L(e,o,n){return window.enmity.settings.get(e,o,n)}function D(e,o,n){return window.enmity.settings.getBoolean(e,o,n)}const{components:s}=window.enmity;s.Alert;const me=s.Button;s.FlatList;const W=s.Image;s.ImageBackground,s.KeyboardAvoidingView,s.Modal,s.Pressable,s.RefreshControl;const X=s.ScrollView;s.SectionList,s.StatusBar,s.StyleSheet,s.Switch;const w=s.Text;s.TextInput,s.TouchableHighlight;const $=s.TouchableOpacity;s.TouchableWithoutFeedback,s.Touchable;const E=s.View;s.VirtualizedList,s.Form,s.FormArrow,s.FormCTA,s.FormCTAButton,s.FormCardSection,s.FormCheckbox;const S=s.FormDivider;s.FormHint,s.FormIcon;const de=s.FormInput;s.FormLabel,s.FormRadio;const c=s.FormRow,B=s.FormSection;s.FormSelect,s.FormSubLabel;const M=s.FormSwitch;s.FormTernaryCheckBox,s.FormText,s.FormTextColors,s.FormTextSizes;function ge(e){window.enmity.plugins.registerPlugin(e)}const x={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,o)=>window.enmity.modules.filters.byName(e,o),byTypeName:(e,o)=>window.enmity.modules.filters.byTypeName(e,o),byDisplayName:(e,o)=>window.enmity.modules.filters.byDisplayName(e,o)};function Y(...e){return window.enmity.modules.bulk(...e)}function R(...e){return window.enmity.modules.getByProps(...e)}function ue(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const _=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const U=window.enmity.modules.common.Native,t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const b=window.enmity.modules.common.Storage,h=window.enmity.modules.common.Toasts,C=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const J=window.enmity.modules.common.REST;window.enmity.modules.common.Settings;const he=window.enmity.modules.common.Users,T=window.enmity.modules.common.Navigation,_e=window.enmity.modules.common.NavigationNative,K=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const P=window.enmity.modules.common.StyleSheet,fe=window.enmity.modules.common.ColorMap;window.enmity.modules.common.Components,window.enmity.modules.common.Locale;const ye=window.enmity.modules.common.Profiles;window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function we(e){return window.enmity.patcher.create(e)}const q=K.createStackNavigator(),{ThemeColorMap:I}=fe;var Q=({name:e="Page",component:o=E,close_button:n={name:"Close",functionality:()=>{T.pop()}}}={})=>{const a=P.createThemedStyleSheet({container:{backgroundColor:I.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:I.BACKGROUND_MOBILE_PRIMARY,color:I.TEXT_NORMAL},header:{backgroundColor:I.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:I.HEADER_PRIMARY},close:{color:I.HEADER_PRIMARY}});return t.createElement(_e.NavigationContainer,null,t.createElement(q.Navigator,{initialRouteName:e,style:a.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:a.cardStyle,headerStyle:a.header,headerTitleContainerStyle:a.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(q.Screen,{name:e,component:o,options:{headerTitleStyle:{color:"white"},headerLeft:()=>t.createElement(me,{color:a.close.color,title:n.name,onPress:n.functionality}),...K.TransitionPresets.ModalSlideFromBottomIOS}})))};const Z=e=>{let o=0;for(let n in e)o++;return o};function u(e){return window.enmity.assets.getIDByName(e)}const m={Debug:u("debug"),Retry:u("ic_message_retry"),Failed:u("Small"),Cancel:u("ic_megaphone_nsfw_16px"),Add:u("add_white"),Delete:u("ic_message_delete"),Clear:u("ic_clear_all_24px"),Pencil:u("ic_pencil_24px"),Success:u("ic_selection_checked_24px"),Copy:u("toast_copy_link"),Open:u("ic_leave_stage"),Clipboard:u("pending-alert"),Initial:u("coffee"),Debug_Command:{Sent:u("ic_application_command_24px"),Clock:u("clock")},Settings:{Toasts:{Context:u("toast_image_saved"),Settings:u("ic_selection_checked_24px")},Self:u("friends_toast_icon"),Share:u("share"),Robot:u("ic_robot_24px"),Commands:u("ic_profile_badge_bot_commands"),Debug:u("ic_rulebook_16px")}},A=e=>{h.open({content:`Copied ${e} to clipboard.`,source:m.Clipboard})},be=e=>{let o=e.split(`
`).map(n=>{if(n!="")return`"${n.replaceAll(":",'":"').replace(" ","")}",`});return o[0]=`{${o[0]}`,o[Z(o)]=`${o[Z(o)]}}`,o=o.join(""),o=o.replaceAll("undefined",""),o=o.split("").reverse().join("").replace(",","").split("").reverse().join(""),o};async function Ee(){try{let e=await b.getItem("device_list");if(e)return JSON.parse(e);let o=(await J.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,n=be(o);await b.setItem("device_list",n);let a=await b.getItem("device_list");return JSON.parse(a)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function pe(e,o,n){let a=await Ee();return`**[${e}] Debug Information**
> **Plugin Version:** ${o}
> **Plugin Build:** ${n.split("-")[1]}
> **Discord Build:** ${U.InfoDictionaryManager.Version} (${U.InfoDictionaryManager.Build})
> **Software Version:** ${U.DCDDeviceManager.systemVersion}
> **Device:** ${a[U.DCDDeviceManager.device]}`}const{native:F}=window.enmity;function Se(){F.reload()}F.version,F.build,F.device,F.version;const ve=R("transitionToGuild");async function De({manifest:e}){const o=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,n=await(await J.get(o)).text;let a=n.match(/\d\.\d\.\d+/g),l=n.match(/patch\-\d\.\d\.\d+/g);return!a||!l?te(e.name,e.version):(a=a[0],l=l[0],a!=e.version?ee(o,a,l.split("-")[1],e,!1):l!=e.build?ee(o,a,l.split("-")[1],e,!0):te(e.name,e.version))}const ee=(e,o,n,a,l)=>{const g=l?n:o;C.show({title:"Update found",body:`A newer ${l?"build":"version"} is available for ${a.name}. ${l?`
The version will remain at ${o}, but the build will update to ${n}.`:""}
Would you like to install ${l?`build \`${n}\``:`version \`${o}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>$e(e,g,a,l)})},te=(e,o)=>{console.log(`[${e}] Plugin is on the latest version, which is ${o}`),h.open({content:`${e} is on latest version (${o})`,source:m.Success})};async function $e(e,o,n,a){window.enmity.plugins.installPlugin(e,({data:l})=>{l=="installed_plugin"||l=="overridden_plugin"?C.show({title:`Updated ${n.name}`,body:`Successfully updated to ${a?"build":"version"} \`${o}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{Se()}}):C.show({title:"Error",body:`Something went wrong while updating ${n.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{ve.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${n.name}%20Update%20Error%3A%20${a?`b${o}`:`v${o}`}`)}})})}const k=window.enmity.modules.common.Components.General.Animated,[V,Le]=Y(x.byProps("transitionToGuild"),x.byProps("setString"));var xe=({manifest:e})=>{const o=P.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25,fontFamily:_.Fonts.DISPLAY_NORMAL},header:{color:_.ThemeColorMap.HEADER_PRIMARY,fontFamily:_.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:_.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),n=t.useRef(new k.Value(1)).current,a=()=>{k.spring(n,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},l=()=>{k.spring(n,{toValue:1,duration:250,useNativeDriver:!0}).start()},g=()=>{V.openURL("https://spin.rip/")},v={transform:[{scale:n}]};return t.createElement(t.Fragment,null,t.createElement(E,{style:o.container},t.createElement($,{onPress:g,onPressIn:a,onPressOut:l},t.createElement(k.View,{style:[v]},t.createElement(W,{style:[o.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),t.createElement(E,{style:o.text_container},t.createElement($,{onPress:()=>{V.openURL(e.sourceUrl)}},t.createElement(w,{style:[o.main_text,o.header]},e.name," ")),t.createElement(E,{style:{flexDirection:"row"}},t.createElement(w,{style:[o.main_text,o.sub_header]},"A plugin by"),t.createElement($,{onPress:()=>{V.openURL("https://spin.rip/")}},t.createElement(w,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:_.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),t.createElement(E,{style:{flexDirection:"row"}},t.createElement(w,{style:[o.main_text,o.sub_header]},"Settings page by"),t.createElement($,{onPress:()=>{V.openURL("https://github.com/acquitelol/")}},t.createElement(w,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:_.Fonts.DISPLAY_BOLD}]},"Rosie<3"))),t.createElement(E,null,t.createElement($,{style:{flexDirection:"row"},onPress:()=>{Le.setString(`**${e.name}** v${e.version}`),A("plugin name and version")}},t.createElement(w,{style:[o.main_text,o.sub_header]},"Version:"),t.createElement(w,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:_.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[Ce,oe]=Y(x.byProps("transitionToGuild"),x.byProps("setString"));var Te=({manifest:e,settings:o,hasToasts:n,children:a,commands:l})=>{const g=P.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:_.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:_.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[v,N]=t.useState(),[r,y]=t.useState();return t.createElement(t.Fragment,null,t.createElement(X,{onTouchStart:i=>{N(i.nativeEvent.pageX),y(i.nativeEvent.pageY)},onTouchEnd:i=>{v-i.nativeEvent.pageX<-100&&r-i.nativeEvent.pageY<40&&r-i.nativeEvent.pageY>-40&&T.pop()}},t.createElement(xe,{manifest:e}),a,l&&t.createElement(B,{title:"Plugin Commands"},l.map(i=>t.createElement(c,{label:`/${i.name}`,subLabel:i.description,leading:t.createElement(c.Icon,{style:g.icon,source:m.Settings.Commands}),trailing:c.Arrow,onPress:function(){oe.setString(`/${i.name}`),A(`the command ${i.name}`)}}))),t.createElement(B,{title:"Utility"},n&&t.createElement(t.Fragment,null,t.createElement(c,{label:"Initialization Toasts",leading:t.createElement(c.Icon,{style:g.icon,source:m.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:t.createElement(M,{value:o.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{o.toggle(`${e.name}-toastEnable`,!1),h.open({content:`Successfully ${o.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:m.Success})}})}),t.createElement(S,null)),t.createElement(c,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:t.createElement(c.Icon,{style:g.icon,source:m.Settings.Debug}),trailing:c.Arrow,onPress:async function(){oe.setString(await pe(e.name,e.version,e.build)),A("plugin debug information")}}),t.createElement(S,null),t.createElement(c,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:t.createElement(c.Icon,{style:g.icon,source:m.Delete}),trailing:c.Arrow,onPress:async function(){await b.removeItem("device_list"),h.open({content:"Cleared device list storage.",source:m.Success})}})),t.createElement(B,{title:"Source"},t.createElement(c,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:t.createElement(c.Icon,{style:g.icon,source:m.Copy}),trailing:c.Arrow,onPress:()=>{De({manifest:e})}}),t.createElement(S,null),t.createElement(c,{label:"Source",subLabel:`View ${e.name} source code`,leading:t.createElement(c.Icon,{style:g.icon,source:m.Open}),trailing:c.Arrow,onPress:()=>{Ce.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),t.createElement(c,{style:g.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};async function ne(e,o,n,a){const l={type:e,author:{...o,avatar:o.avatar?`https://cdn.discordapp.com/avatars/${o.id}/${o.avatar}.${o.avatar?.startsWith("a_")?"gif":"png"}?size=1024`:"https://cdn.discordapp.com/embed/avatars/0.png"},context:n,content:a.edited?[new Date(a.time).toLocaleString(),a.original,a.edited]:[new Date(a.time).toLocaleString(),a.original]};let g=await b.getItem("NoDeleteLogs");g=JSON.parse(g),l!==g[g.length-1]&&(g.push(l),await b.setItem("NoDeleteLogs",JSON.stringify(g)))}var Ie="NoDelete",Ne="3.5.13",Be="patch-1.0.11",Me='Somewhat basic "Message Logger"',Pe=[{name:"Marek (modified by spin)",id:"308440976723148800"}],Fe="#ff0069",Re="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/NoDelete.js",f={name:Ie,version:Ne,build:Be,description:Me,authors:Pe,color:Fe,sourceUrl:Re},ae;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(ae||(ae={}));var O;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(O||(O={}));var H;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(H||(H={}));var le;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(le||(le={}));var re;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(re||(re={}));var se;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(se||(se={}));const[Ue,Ae]=Y(x.byProps("setString"),x.byProps("fetchProfile")),ke=ue("StaticSearchBarContainer");var ie=()=>{const e=P.createThemedStyleSheet({main_text:{opacity:.975,letterSpacing:.25},item_container:{display:"flex",flexDirection:"row",alignItems:"center",paddingTop:4,paddingBottom:4,width:"100%"},author_name:{color:_.ThemeColorMap.HEADER_PRIMARY,fontFamily:_.Fonts.DISPLAY_BOLD,fontSize:18,letterSpacing:.25,paddingBottom:4},log_header:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",maxWidth:"95%"},log_sub_header:{display:"flex",flexDirection:"row",alignItems:"center",maxWidth:"50%"},log_time:{color:_.ThemeColorMap.TEXT_MUTED,opacity:.99,fontSize:13,paddingLeft:4},log_type:{color:_.ThemeColorMap.TEXT_MUTED,opacity:.45,fontSize:16,marginLeft:"auto"},avatar_container:{alignSelf:"start",justifySelf:"start"},author_avatar:{width:40,height:40,borderRadius:100},old_message:{color:_.ThemeColorMap.TEXT_MUTED,opacity:.89,fontSize:16},message_content:{color:_.ThemeColorMap.TEXT_NORMAL,opacity:.985,fontSize:16},main_container:{paddingLeft:8,paddingRight:4,paddingTop:2,paddingBottom:16,width:"95%"},text_container:{display:"flex",flexDirection:"column",paddingBottom:4,paddingLeft:8,width:"95%"}}),o=(r,y)=>r.length>y?r.substring(0,y)+"...":r,n=()=>{b.setItem("NoDeleteLogs","[]"),b.getItem("NoDeleteLogs").then(r=>{r=="[]"?C.show({title:"Logs Cleared",body:"NoDelete message logs have been cleared",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>T.pop()}):C.show({title:"Error clearing logs",body:"NoDelete logs could not be cleared. Try again or report this issues to spin.",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>T.pop()})})},a=L("_nodelete","maxLogs","1000"),[l,g]=t.useState([]),[v,N]=t.useState([]);t.useEffect(()=>{b.getItem("NoDeleteLogs").then(r=>{let y=JSON.parse(r);g(y.reverse())})},[]);for(let r=0;r<l.length;r++)l[r].author.id==null&&(l[r]={type:l[r].type,author:{username:l[r].author,id:l[r].id,avatar:l[r].avatar,bot:"unknown"},context:{guild:"unknown",channel:"unknown",message:"unknown"},content:l[r].content},r==l.length-1&&g(l));return l.length>parseInt(a)&&(D("_nodelete","autoClear",!1)==!1?C.show({title:`Logs have exceeded ${o(a,12)}`,body:`NoDelete logs have exceeded your limit of ${o(a,12)}${parseInt(a)>1e3?`
You may experience performance issues or a laggy log page UI. Clear your logs to fix this issue.`:""}`,confirmText:"Clear logs",cancelText:"Close",onConfirm:()=>n()}):(n(),b.getItem("NoDeleteLogs").then(r=>{r==="[]"?h.open({content:`Auto-cleared ${o(l.length,10)} logs.`,source:m.Success}):h.open({content:"NoDelete logs could not be cleared. Try again or report this issues to spin.",source:m.Failed})}))),t.createElement(t.Fragment,null,t.createElement(ke,{placeholder:"Search Logs",onChangeText:r=>N(r)}),t.createElement(c,{label:"Clear all NoDelete message logs",trailing:c.Arrow,onPress:()=>n()}),t.createElement(S,null),t.createElement(X,null,t.createElement(E,{style:e.main_container},l.filter(r=>JSON.stringify(r).includes(v)).map(r=>t.createElement(t.Fragment,null,t.createElement(E,{style:e.item_container},t.createElement($,{onPress:()=>{Ae.fetchProfile(r.author.id).then(()=>{ye.showUserProfile({userId:r.author.id})}).catch(y=>{h.open({content:"Error while fetching user. Check logs for more info.",source:m.Failed}),console.log("[NoDelete User Fetch Error]",y)})},style:e.avatar_container},t.createElement(W,{style:e.author_avatar,source:{uri:r.author.avatar}})),t.createElement($,{onPress:()=>{Ue.setString(`${r.author.username} (\`${r.author.id}\`):
>>> ${r.content.join(`
`)}`),A("log content")},style:e.text_container},t.createElement(E,{style:e.log_header},t.createElement(E,{style:e.log_sub_header},t.createElement(w,{style:[e.main_text,e.author_name]},r.author.username),t.createElement(w,{style:[e.main_text,e.log_time]},r.content[0])),t.createElement(w,{style:[e.main_text,e.log_type]},r.type==="edit"?t.createElement(c.Icon,{source:m.Pencil}):t.createElement(c.Icon,{source:m.Delete}))),t.createElement(E,null,r.content.length==3?t.createElement(t.Fragment,null,t.createElement(w,{style:e.old_message},r.content[1]),t.createElement(w,{style:e.message_content},r.content[2])):t.createElement(w,{style:e.message_content},r.content[1])))),t.createElement(S,null))))))};function Ve(e,o,n,a){window.enmity.clyde.sendReply(e,o,n,a)}const Ge={id:"logs-command",name:"logs",displayName:"logs",description:"Open the NoDelete message logs page",displayDescription:"Open the NoDelete message logs page",type:O.Chat,inputType:H.BuiltInText,execute:async function(e,o){try{T.push(Q,{component:ie,name:"NoDelete Message Logs"})}catch(n){console.log("[ NoDelete Error ]",n),Ve(o?.channel.id??"0","An error occured while trying to open NoDelete message logs. Check debug logs for more info.")}}},ce=[Ge];let z;const j=we(f.name),Ye={...f,patches:[],onStart(){b.getItem("NoDeleteLogs").then(a=>{a==null&&b.setItem("NoDeleteLogs","[]")}).catch(a=>{console.log(`[${f.name} Storage Error]`,a)});let e=0;const o=3,n=()=>{const a=D(f.name,`${f.name}-toastEnable`,!1);try{e++;const l=R("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),g=R("getMessage","getMessages"),v=R("getChannel","getDMFromUserId");console.log(`${f.name} delayed start attempt ${e}/${o}.`),a&&h.open({content:`[${f.name}] start attempt ${e}/${o}.`,source:m.Debug});for(const y of["MESSAGE_UPDATE","MESSAGE_DELETE"])try{l.dispatch({type:y,message:{}})}catch(i){console.log(`[${f.name} Dispatch Error]`,i)}const N=l._actionHandlers._orderedActionHandlers?.MESSAGE_DELETE.find(y=>y.name==="MessageStore"),r=l._actionHandlers._orderedActionHandlers?.MESSAGE_UPDATE.find(y=>y.name==="MessageStore");j.before(N,"actionHandler",(y,i)=>{const d=g.getMessage(i[0].channelId,i[0].id);if(!(!d?.author?.id||!d?.author?.username||!d?.content&&d?.attachments?.length==0&&d?.embeds?.length==0)&&!(D("_nodelete","_logBots",!1)===!1&&d?.author?.bot)&&!(D("_nodelete","_logSelf",!1)===!1&&d?.author?.id==z)){if(D("_nodelete","_storageLog",!1)==!1&&(i[0]={}),!d?.editedTimestamp||d?.editedTimestamp._isValid){const G={type:"MESSAGE_UPDATE",message:{...d,edited_timestamp:"invalid_timestamp",content:d?.content+" `[deleted]`",guild_id:v.getChannel(d?.channel_id)?.guild_id},log_edit:!1};l.dispatch(G)}ne("delete",{username:`${d?.author?.username}#${d?.author?.discriminator}`,id:d?.author?.id,avatar:d?.author?.avatar,bot:d?.author?.bot},{guild:v.getChannel(d?.channel_id)?.guild_id,channel:d?.channel_id,message:d?.id},{time:d?.timestamp,original:d?.content?.replace("`[deleted]`","").trim()})}}),j.before(r,"actionHandler",(y,i)=>{try{const d=g.getMessage(i[0].message.channel_id,i[0].message.id);if(!d?.content||!i[0]?.message?.content||!i[0]?.message?.content&&i[0]?.message?.attachments?.length==0&&i[0]?.message?.embeds?.length==0||i[0]?.message?.embeds?.[0]?.type==="link"||i[0].log_edit==!1||D("_nodelete","_logBots",!1)===!1&&i[0]?.message?.author?.bot||D("_nodelete","_logSelf",!1)===!1&&i[0]?.message?.author?.id==z)return;try{if(!i[0].edited_timestamp._isValid)return}catch{}const G=i[0].message.content;D("_nodelete","_storageLog",!1)==!1&&(i[0].message.content=d?.content+" `[edited]`\n"+i[0]?.message?.content),ne("edit",{username:`${i[0]?.message?.author?.username}#${i[0]?.message?.author?.discriminator}`,id:i[0]?.message?.author?.id,avatar:i[0]?.message?.author?.avatar,bot:i[0]?.message?.author?.bot},{guild:i[0].message.guild_id,channel:i[0].message.channel_id,message:i[0].message.id},{time:i[0]?.message?.edited_timestamp,original:d?.content?.replace(/\`\[edited\]\`/gim,"")?.replace("`[deleted]`","").trim(),edited:`${G?.replace(/\`\[edited\]\`/gim,"")?.replace("`[deleted]`","").trim()}`})}catch(d){console.log(`[${f.name} Error]`,d)}}),console.log(`${f.name} delayed start successful.`),a&&h.open({content:`[${f.name}] start successful.`,source:m.Success})}catch(l){console.log(`[${f.name} Plugin Error]`,l),e<o?(console.warn(`${f.name} failed to start. Trying again in ${e}0s.`),a&&h.open({content:`[${f.name}] failed to start trying again in ${e}0s.`,source:m.Failed}),setTimeout(n,e*1e4)):(console.error(`${f.name} failed to start. Giving up.`),h.open({content:`${f.name} failed to start. Giving up.`,source:m.Failed}))}};setTimeout(()=>{z=he.getCurrentUser().id,n()},300),this.commands=ce},onStop(){j.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){const o=P.createThemedStyleSheet({icon:{color:_.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:_.ThemeColorMap.TEXT_MUTED}});return t.createElement(Te,{manifest:f,settings:e,hasToasts:!1,commands:ce},t.createElement(B,{title:"Message Logs"},t.createElement(c,{label:"View Message Logs",subLabel:"Tap on an item to copy to clipboard",leading:t.createElement(c.Icon,{style:o.icon,source:m.Settings.Debug}),onPress:()=>{T.push(Q,{component:ie,name:"NoDelete Message Logs"})}})),t.createElement(S,null),t.createElement(B,{title:"Plugin Settings"},t.createElement(c,{label:"Log bot messages",subLabel:"Whether or not bot message events should be logged",leading:t.createElement(c.Icon,{source:m.Settings.Robot}),trailing:t.createElement(M,{value:e.getBoolean("_nodelete_logBots",!1),onValueChange:()=>{try{e.toggle("_nodelete_logBots",!1),e.getBoolean("_nodelete_logBots",!1)?p("_nodelete","_logBots",!0):p("_nodelete","_logBots",!1),h.open({content:`Log self-events has been set to: ${L("_nodelete","_logBots",!1)}.`,source:m.Success})}catch(n){console.log("[ NoDelete Toggle Error ]",n),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}),t.createElement(S,null),t.createElement(c,{label:"Log my own messages",subLabel:"Whether or not your own edits and deleted messages will be logged",leading:t.createElement(c.Icon,{source:m.Settings.Self}),trailing:t.createElement(M,{value:e.getBoolean("_nodelete_logSelf",!1),onValueChange:()=>{try{e.toggle("_nodelete_logSelf",!1),e.getBoolean("_nodelete_logSelf",!1)?p("_nodelete","_logSelf",!0):p("_nodelete","_logSelf",!1),h.open({content:`Log self-events has been set to: ${L("_nodelete","_logSelf",!1)}.`,source:m.Success})}catch(n){console.log("[ NoDelete Toggle Error ]",n),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}),t.createElement(S,null),t.createElement(c,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",leading:t.createElement(c.Icon,{source:m.Pencil}),trailing:t.createElement(M,{value:e.getBoolean("_nodelete",!1),onValueChange:()=>{try{e.toggle("_nodelete",!1),e.getBoolean("_nodelete",!1)?p("_nodelete","_storageLog",!0):p("_nodelete","_storageLog",!1),h.open({content:`Storage-only log has been set to: ${L("_nodelete","_storageLog",!1)}.`,source:m.Success})}catch(n){console.log("[ NoDelete Toggle Error ]",n),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}),t.createElement(S,null),t.createElement(de,{value:L("_nodelete","maxLogs","1000"),onChange:n=>/^\d+$/.test(n)?p("_nodelete","maxLogs",n.trim()):p("_nodelete","maxLogs","1000"),title:"Max Logs to Store"}),t.createElement(c,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",leading:t.createElement(c.Icon,{source:m.Clear}),trailing:t.createElement(M,{value:e.getBoolean("_nodelete_autoClear",!1),onValueChange:()=>{try{e.toggle("_nodelete_autoClear",!1),e.getBoolean("_nodelete_autoClear",!1)?p("_nodelete","autoClear",!0):p("_nodelete","autoClear",!1),h.open({content:`Logs auto-clearing has been set to: ${L("_nodelete","autoClear",!1)}.`,source:m.Success})}catch(n){console.log("[ NoDelete Toggle Error ]",n),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})})))}};ge(Ye);

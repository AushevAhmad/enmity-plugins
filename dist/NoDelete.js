const{components:a}=window.enmity;a.Alert;const Me=a.Button;a.FlatList;const ye=a.Image;a.ImageBackground,a.KeyboardAvoidingView,a.Modal,a.Pressable,a.RefreshControl;const fe=a.ScrollView;a.SectionList,a.StatusBar,a.StyleSheet,a.Switch;const v=a.Text;a.TextInput,a.TouchableHighlight;const T=a.TouchableOpacity;a.TouchableWithoutFeedback,a.Touchable;const p=a.View;a.VirtualizedList,a.Form,a.FormArrow,a.FormCTA,a.FormCTAButton,a.FormCardSection,a.FormCheckbox;const D=a.FormDivider;a.FormHint,a.FormIcon;const Pe=a.FormInput;a.FormLabel,a.FormRadio;const s=a.FormRow,k=a.FormSection;a.FormSelect,a.FormSubLabel;const z=a.FormSwitch;a.FormTernaryCheckBox,a.FormText,a.FormTextColors,a.FormTextSizes;function Be(e){window.enmity.plugins.registerPlugin(e)}const C={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,n)=>window.enmity.modules.filters.byName(e,n),byTypeName:(e,n)=>window.enmity.modules.filters.byTypeName(e,n),byDisplayName:(e,n)=>window.enmity.modules.filters.byDisplayName(e,n)};function q(...e){return window.enmity.modules.bulk(...e)}function j(...e){return window.enmity.modules.getByProps(...e)}function Fe(...e){return window.enmity.modules.getByName(...e)}function Re(...e){return window.enmity.modules.getByKeyword(...e)}window.enmity.modules.common;function Ue(e){return window.enmity.patcher.create(e)}var Ae="NoDelete",ke="2.4.9",Ve="patch-1.0.10",Ge='Somewhat basic "Message Logger"',Ye=[{name:"Marek (modified by spin)",id:"308440976723148800"}],Oe="#ff0069",He="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/NoDelete.js",y={name:Ae,version:ke,build:Ve,description:Ge,authors:Ye,color:Oe,sourceUrl:He};const f=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const W=window.enmity.modules.common.Native,t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const b=window.enmity.modules.common.Storage,h=window.enmity.modules.common.Toasts,N=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const we=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const I=window.enmity.modules.common.Navigation,ze=window.enmity.modules.common.NavigationNative,_e=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const V=window.enmity.modules.common.StyleSheet,je=window.enmity.modules.common.ColorMap;window.enmity.modules.common.Components,window.enmity.modules.common.Locale;const We=window.enmity.modules.common.Profiles;window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function $(e,n,o){window.enmity.settings.set(e,n,o)}function G(e,n,o){return window.enmity.settings.get(e,n,o)}function Y(e,n,o){return window.enmity.settings.getBoolean(e,n,o)}const Ee=e=>{let n=0;for(let o in e)n++;return n},Xe=e=>{let n=e.split(`
`).map(o=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}",`});return n[0]=`{${n[0]}`,n[Ee(n)]=`${n[Ee(n)]}}`,n=n.join(""),n=n.replaceAll("undefined",""),n=n.split("").reverse().join("").replace(",","").split("").reverse().join(""),n};async function Ke(){try{let e=await b.getItem("device_list");if(e)return JSON.parse(e);let n=(await we.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=Xe(n);await b.setItem("device_list",o);let l=await b.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function Je(e,n,o){let l=await Ke();return`**[${e}] Debug Information**
> **Plugin Version:** ${n}
> **Plugin Build:** ${o.split("-")[1]}
> **Discord Build:** ${W.InfoDictionaryManager.Version} (${W.InfoDictionaryManager.Build})
> **Software Version:** ${W.DCDDeviceManager.systemVersion}
> **Device:** ${l[W.DCDDeviceManager.device]}`}function u(e){return window.enmity.assets.getIDByName(e)}const c={Debug:u("debug"),Retry:u("ic_message_retry"),Failed:u("Small"),Cancel:u("ic_megaphone_nsfw_16px"),Add:u("add_white"),Delete:u("ic_message_delete"),Clear:u("ic_clear_all_24px"),Pencil:u("ic_pencil_24px"),Copy:u("toast_copy_link"),Open:u("ic_leave_stage"),Clipboard:u("pending-alert"),Debug_Command:{Sent:u("ic_application_command_24px"),Clock:u("clock")},Settings:{Toasts:{Context:u("toast_image_saved"),Settings:u("ic_selection_checked_24px")},Self:u("friends_toast_icon"),Share:u("share"),Commands:u("ic_profile_badge_bot_commands"),Debug:u("ic_rulebook_16px")}},X=e=>{h.open({content:`Copied ${e} to clipboard.`,source:c.Clipboard})},{native:O}=window.enmity;function qe(){O.reload()}O.version,O.build,O.device,O.version;const Qe=j("transitionToGuild");async function Ze({manifest:e}){const n=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,o=await(await we.get(n)).text;let l=o.match(/\d\.\d\.\d+/g),r=o.match(/patch\-\d\.\d\.\d+/g);return!l||!r?be(e.name,e.version):(l=l[0],r=r[0],l!=e.version?ve(n,l,r.split("-")[1],e,!1):r!=e.build?ve(n,l,r.split("-")[1],e,!0):be(e.name,e.version))}const ve=(e,n,o,l,r)=>{const d=r?o:n;N.show({title:"Update found",body:`A newer ${r?"build":"version"} is available for ${l.name}. ${r?`
The version will remain at ${n}, but the build will update to ${o}.`:""}
Would you like to install ${r?`build \`${o}\``:`version \`${n}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>et(e,d,l,r)})},be=(e,n)=>{console.log(`[${e}] Plugin is on the latest version, which is ${n}`),h.open({content:`${e} is on latest version (${n})`,source:c.Settings.Toasts.Settings})};async function et(e,n,o,l){window.enmity.plugins.installPlugin(e,({data:r})=>{r=="installed_plugin"||r=="overridden_plugin"?N.show({title:`Updated ${o.name}`,body:`Successfully updated to ${l?"build":"version"} \`${n}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{qe()}}):N.show({title:"Error",body:`Something went wrong while updating ${o.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{Qe.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${o.name}%20Update%20Error%3A%20${l?`b${n}`:`v${n}`}`)}})})}const K=window.enmity.modules.common.Components.General.Animated,[J,tt]=q(C.byProps("transitionToGuild"),C.byProps("setString"));var nt=({manifest:e})=>{const n=V.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:f.ThemeColorMap.HEADER_PRIMARY,fontFamily:f.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:f.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),o=t.useRef(new K.Value(1)).current,l=()=>{K.spring(o,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},r=()=>{K.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start()},d=()=>{J.openURL("https://spin.rip/")},w={transform:[{scale:o}]};return t.createElement(t.Fragment,null,t.createElement(p,{style:n.container},t.createElement(T,{onPress:d,onPressIn:l,onPressOut:r},t.createElement(K.View,{style:[w]},t.createElement(ye,{style:[n.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),t.createElement(p,{style:n.text_container},t.createElement(T,{onPress:()=>{J.openURL(e.sourceUrl)}},t.createElement(v,{style:[n.main_text,n.header]},e.name," ")),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(v,{style:[n.main_text,n.sub_header]},"A plugin by"),t.createElement(T,{onPress:()=>{J.openURL("https://spin.rip/")}},t.createElement(v,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:f.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(v,{style:[n.main_text,n.sub_header]},"Settings page by"),t.createElement(T,{onPress:()=>{J.openURL("https://github.com/acquitelol/")}},t.createElement(v,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:f.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),t.createElement(p,null,t.createElement(T,{style:{flexDirection:"row"},onPress:()=>{tt.setString(`**${e.name}** v${e.version}`),X("plugin name and version")}},t.createElement(v,{style:[n.main_text,n.sub_header]},"Version:"),t.createElement(v,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:f.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[ot,pe]=q(C.byProps("transitionToGuild"),C.byProps("setString"));var lt=({manifest:e,settings:n,hasToasts:o,section:l,commands:r})=>{const d=V.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:f.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:f.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[w,_]=t.useState(),[i,S]=t.useState();return t.createElement(t.Fragment,null,t.createElement(fe,{onTouchStart:E=>{_(E.nativeEvent.pageX),S(E.nativeEvent.pageY)},onTouchEnd:E=>{w-E.nativeEvent.pageX<-100&&i-E.nativeEvent.pageY<40&&i-E.nativeEvent.pageY>-40&&I.pop()}},t.createElement(nt,{manifest:e}),l,r&&t.createElement(k,{title:"Plugin Commands"},r.map(E=>t.createElement(s,{label:`/${E.name}`,subLabel:E.description,leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Commands}),trailing:s.Arrow,onPress:function(){pe.setString(`/${E.name}`),X(`the command ${E.name}`)}}))),t.createElement(k,{title:"Utility"},o&&t.createElement(t.Fragment,null,t.createElement(s,{label:"Initialization Toasts",leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:t.createElement(z,{value:n.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{n.toggle(`${e.name}-toastEnable`,!1),h.open({content:`Successfully ${n.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:c.Settings.Toasts.Settings})}})}),t.createElement(D,null)),t.createElement(s,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Debug}),trailing:s.Arrow,onPress:async function(){pe.setString(await Je(e.name,e.version,e.build)),X("plugin debug information")}}),t.createElement(D,null),t.createElement(s,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:t.createElement(s.Icon,{style:d.icon,source:c.Delete}),trailing:s.Arrow,onPress:async function(){await b.removeItem("device_list"),h.open({content:"Cleared device list storage.",source:c.Settings.Toasts.Settings})}})),t.createElement(k,{title:"Source"},t.createElement(s,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Copy}),trailing:s.Arrow,onPress:()=>{Ze({manifest:e})}}),t.createElement(D,null),t.createElement(s,{label:"Source",subLabel:`View ${e.name} source code`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Open}),trailing:s.Arrow,onPress:()=>{ot.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),t.createElement(s,{style:d.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const Se=_e.createStackNavigator(),{ThemeColorMap:M}=je;var De=({name:e="Page",component:n=p,close_button:o={name:"Close",functionality:()=>{I.pop()}}}={})=>{const l=V.createThemedStyleSheet({container:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:M.BACKGROUND_MOBILE_PRIMARY,color:M.TEXT_NORMAL},header:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:M.HEADER_PRIMARY},close:{color:M.HEADER_PRIMARY}});return t.createElement(ze.NavigationContainer,null,t.createElement(Se.Navigator,{initialRouteName:e,style:l.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:l.cardStyle,headerStyle:l.header,headerTitleContainerStyle:l.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(Se.Screen,{name:e,component:n,options:{headerTitleStyle:{color:"white"},headerLeft:()=>t.createElement(Me,{color:l.close.color,title:o.name,onPress:o.functionality}),..._e.TransitionPresets.ModalSlideFromBottomIOS}})))};const[at,rt]=q(C.byProps("setString"),C.byProps("fetchProfile")),it=Fe("StaticSearchBarContainer");var $e=()=>{const e=V.createThemedStyleSheet({main_text:{opacity:.975,letterSpacing:.25},item_container:{display:"flex",flexDirection:"row",alignItems:"center",paddingTop:4,paddingBottom:4,width:"100%"},author_name:{color:f.ThemeColorMap.HEADER_PRIMARY,fontFamily:f.Fonts.DISPLAY_BOLD,fontSize:18,letterSpacing:.25,paddingBottom:4},log_header:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",maxWidth:"95%"},log_sub_header:{display:"flex",flexDirection:"row",alignItems:"center",maxWidth:"50%"},log_time:{color:f.ThemeColorMap.TEXT_MUTED,opacity:.99,fontSize:13,paddingLeft:4},log_type:{color:f.ThemeColorMap.TEXT_MUTED,opacity:.45,fontSize:16,marginLeft:"auto"},avatar_container:{alignSelf:"start",justifySelf:"start"},author_avatar:{width:40,height:40,borderRadius:100},old_message:{color:f.ThemeColorMap.TEXT_MUTED,opacity:.89,fontSize:16},message_content:{color:f.ThemeColorMap.TEXT_NORMAL,opacity:.985,fontSize:16},main_container:{paddingLeft:8,paddingRight:4,paddingTop:2,paddingBottom:16,width:"95%"},text_container:{display:"flex",flexDirection:"column",paddingBottom:4,paddingLeft:8,width:"95%"}}),n=(i,S)=>i.length>S?i.substring(0,S)+"...":i,o=()=>{b.setItem("NoDeleteLogs","[]"),b.getItem("NoDeleteLogs").then(i=>{i=="[]"?N.show({title:"Logs Cleared",body:"NoDelete message logs have been cleared",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>I.pop()}):N.show({title:"Error clearing logs",body:"NoDelete logs could not be cleared. Try again or report this issues to spin.",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>I.pop()})})},l=G("_nodelete","maxLogs","1000"),[r,d]=t.useState([]),[w,_]=t.useState([]);return t.useEffect(()=>{b.getItem("NoDeleteLogs").then(i=>{let S=JSON.parse(i);d(S.reverse())})},[]),r.length>parseInt(l)&&(Y("_nodelete","autoClear",!1)==!1?N.show({title:`Logs have exceeded ${n(l,12)}`,body:`NoDelete logs have exceeded your limit of ${n(l,12)}${parseInt(l)>1e3?`
You may experience performance issues or a laggy log page UI. Clear your logs to fix this issue.`:""}`,confirmText:"Clear logs",cancelText:"Close",onConfirm:()=>o()}):(o(),b.getItem("NoDeleteLogs").then(i=>{i==="[]"?h.open({content:`Auto-cleared ${n(r.length,10)} logs.`,source:c.Settings.Toasts.Settings}):h.open({content:"NoDelete logs could not be cleared. Try again or report this issues to spin.",source:c.Failed})}))),t.createElement(t.Fragment,null,t.createElement(it,{placeholder:"Search Logs",onChangeText:i=>_(i)}),t.createElement(s,{label:"Clear all NoDelete message logs",trailing:s.Arrow,onPress:()=>o()}),t.createElement(D,null),t.createElement(fe,null,t.createElement(p,{style:e.main_container},r.filter(i=>JSON.stringify(i).includes(w)).map(i=>t.createElement(t.Fragment,null,t.createElement(p,{style:e.item_container},t.createElement(T,{onPress:()=>{rt.fetchProfile(i.id).then(()=>{We.showUserProfile({userId:i.id})}).catch(S=>{h.open({content:"Error while fetching user. Check logs for more info.",source:c.Failed}),console.log("[NoDelete User Fetch Error]",S)})},style:e.avatar_container},t.createElement(ye,{style:e.author_avatar,source:{uri:i.avatar}})),t.createElement(T,{onPress:()=>{at.setString(`${i.author} (\`${i.id}\`):
>>> ${i.content.join(`
`)}`),X("log content")},style:e.text_container},t.createElement(p,{style:e.log_header},t.createElement(p,{style:e.log_sub_header},t.createElement(v,{style:[e.main_text,e.author_name]},i.author),t.createElement(v,{style:[e.main_text,e.log_time]},i.content[0])),t.createElement(v,{style:[e.main_text,e.log_type]},i.type==="edit"?t.createElement(s.Icon,{source:c.Pencil}):t.createElement(s.Icon,{source:c.Delete}))),t.createElement(p,null,i.content.length==3?t.createElement(t.Fragment,null,t.createElement(v,{style:e.old_message},i.content[1]),t.createElement(v,{style:e.message_content},i.content[2])):t.createElement(v,{style:e.message_content},i.content[1])))),t.createElement(D,null))))))},Le;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Le||(Le={}));var Q;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(Q||(Q={}));var Z;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(Z||(Z={}));var Te;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(Te||(Te={}));var xe;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(xe||(xe={}));var Ce;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Ce||(Ce={}));function st(e,n,o,l){window.enmity.clyde.sendReply(e,n,o,l)}const ct={id:"logs-command",name:"logs",displayName:"logs",description:"Open the NoDelete message logs page",displayDescription:"Open the NoDelete message logs page",type:Q.Chat,inputType:Z.BuiltInText,execute:async function(e,n){var o;try{I.push(De,{component:$e,name:"NoDelete Message Logs"})}catch(l){console.log("[ NoDelete Error ]",l),st((o=n==null?void 0:n.channel.id)!=null?o:"0","An error occured while trying to open NoDelete message logs. Check debug logs for more info.")}}},Ne=[ct];async function Ie(e,n,o,l,r){var d;if(n.split("#").pop()=="undefined"||o=="undefined"||l=="undefined"||r.original==null||Y("_nodelete","_logSelf",!1)===!1&&o==((d=Re("getCurrentUser").getCurrentUser())==null?void 0:d.id))return;const w={type:e,author:n,id:o,avatar:l?`https://cdn.discordapp.com/avatars/${o}/${l}.${l!=null&&l.startsWith("a_")?"gif":"png"}?size=1024`:"https://cdn.discordapp.com/embed/avatars/0.png",content:r.edited?[new Date(r.time).toLocaleString(),r.original,r.edited]:[new Date(r.time).toLocaleString(),r.original]};let _=await b.getItem("NoDeleteLogs");_=JSON.parse(_),w!==_[_.length-1]&&(_.push(w),await b.setItem("NoDeleteLogs",JSON.stringify(_)))}const ee=Ue("NoDelete"),mt={...y,patches:[],onStart(){b.getItem("NoDeleteLogs").then(l=>{l==null&&b.setItem("NoDeleteLogs","[]")}).catch(l=>{console.log(`[${y.name} Storage Error]`,l)});let e=0,n=3;const o=()=>{var l,r;let d=Y(y.name,`${y.name}-toastEnable`,!1);try{e++;const w=j("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),_=j("getMessage","getMessages"),i=j("getChannel","getDMFromUserId");console.log(`${y.name} delayed start attempt ${e}/${n}.`),d&&h.open({content:`[${y.name}] start attempt ${e}/${n}.`,source:c.Debug});for(const L of["MESSAGE_UPDATE","MESSAGE_DELETE"])try{w.dispatch({type:L,message:{}})}catch(g){console.log(`[${y.name} Dispatch Error]`,g)}const S=(l=w._actionHandlers._orderedActionHandlers)==null?void 0:l.MESSAGE_DELETE.find(L=>L.name==="MessageStore"),E=(r=w._actionHandlers._orderedActionHandlers)==null?void 0:r.MESSAGE_UPDATE.find(L=>L.name==="MessageStore");ee.before(S,"actionHandler",(L,g)=>{var P,B,F,R,U,A;const m=_.getMessage(g[0].channelId,g[0].id);if(Y("_nodelete","_storageLog",!1)==!1&&(g[0]={}),!(m!=null&&m.editedTimestamp)||(m==null?void 0:m.editedTimestamp._isValid)){const H={type:"MESSAGE_UPDATE",message:{...m,edited_timestamp:"invalid_timestamp",content:(m==null?void 0:m.content)+" `[deleted]`",guild_id:(P=i.getChannel(m==null?void 0:m.channel_id))==null?void 0:P.guild_id},log_edit:!1};w.dispatch(H)}Ie("delete",`${(B=m==null?void 0:m.author)==null?void 0:B.username}#${(F=m==null?void 0:m.author)==null?void 0:F.discriminator}`,(R=m==null?void 0:m.author)==null?void 0:R.id,(U=m==null?void 0:m.author)==null?void 0:U.avatar,{time:m==null?void 0:m.timestamp,original:(A=m==null?void 0:m.content)==null?void 0:A.replace("`[deleted]`","").trim()})}),ee.before(E,"actionHandler",(L,g)=>{var P,B,F,R,U,A,m,H,te,ne,oe,le,ae,re,ie,se,ce,me,de,ge,ue;try{if(g[0].log_edit==!1)return;const x=_.getMessage(g[0].message.channel_id,g[0].message.id);if(!((B=(P=g[0])==null?void 0:P.message)!=null&&B.content))return;try{if(!g[0].edited_timestamp._isValid)return}catch{}const he=g[0].message.content;Y("_nodelete","_storageLog",!1)==!1&&(g[0].message.content=(x==null?void 0:x.content)+" `[edited]`\n"+((R=(F=g[0])==null?void 0:F.message)==null?void 0:R.content)),Ie("edit",`${(m=(A=(U=g[0])==null?void 0:U.message)==null?void 0:A.author)==null?void 0:m.username}#${(ne=(te=(H=g[0])==null?void 0:H.message)==null?void 0:te.author)==null?void 0:ne.discriminator}`,(ae=(le=(oe=g[0])==null?void 0:oe.message)==null?void 0:le.author)==null?void 0:ae.id,(se=(ie=(re=g[0])==null?void 0:re.message)==null?void 0:ie.author)==null?void 0:se.avatar,{time:(me=(ce=g[0])==null?void 0:ce.message)==null?void 0:me.edited_timestamp,original:(ge=(de=x==null?void 0:x.content)==null?void 0:de.replace(/\`\[edited\]\`/gim,""))==null?void 0:ge.replace("`[deleted]`","").trim(),edited:`${(ue=he==null?void 0:he.replace(/\`\[edited\]\`/gim,""))==null?void 0:ue.replace("`[deleted]`","").trim()}`});return}catch(x){console.log(`[${y.name} Error]`,x)}}),console.log(`${y.name} delayed start successful.`),d&&h.open({content:`[${y.name}] start successful.`,source:c.Settings.Toasts.Settings})}catch(w){console.log(`[${y.name} Plugin Error]`,w),e<n?(console.warn(`${y.name} failed to start. Trying again in ${e}0s.`),d&&h.open({content:`[${y.name}] failed to start trying again in ${e}0s.`,source:c.Failed}),setTimeout(o,e*1e4)):(console.error(`${y.name} failed to start. Giving up.`),h.open({content:`${y.name} failed to start. Giving up.`,source:c.Failed}))}};setTimeout(()=>{o()},300),this.commands=Ne},onStop(){ee.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){const n=V.createThemedStyleSheet({icon:{color:f.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:f.ThemeColorMap.TEXT_MUTED}});return t.createElement(lt,{manifest:y,settings:e,hasToasts:!1,section:t.createElement(t.Fragment,null,t.createElement(k,{title:"Message Logs"},t.createElement(s,{label:"View Message Logs",subLabel:"Tap on an item to copy to clipboard",leading:t.createElement(s.Icon,{style:n.icon,source:c.Settings.Debug}),onPress:()=>{I.push(De,{component:$e,name:"NoDelete Message Logs"})}})),t.createElement(D,null),t.createElement(k,{title:"Plugin Settings"},t.createElement(s,{label:"Log my own messages",subLabel:"Whether or not your own edits and deleted messages will be logged",leading:t.createElement(s.Icon,{source:c.Settings.Self}),trailing:t.createElement(z,{value:e.getBoolean("_nodelete_logSelf",!1),onValueChange:()=>{try{e.toggle("_nodelete_logSelf",!1),e.getBoolean("_nodelete_logSelf",!1)?$("_nodelete","_logSelf",!0):$("_nodelete","_logSelf",!1),h.open({content:`Log self-events has been set to: ${G("_nodelete","_logSelf",!1)}.`,source:c.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:c.Failed})}}})}),t.createElement(D,null),t.createElement(s,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",leading:t.createElement(s.Icon,{source:c.Pencil}),trailing:t.createElement(z,{value:e.getBoolean("_nodelete",!1),onValueChange:()=>{try{e.toggle("_nodelete",!1),e.getBoolean("_nodelete",!1)?$("_nodelete","_storageLog",!0):$("_nodelete","_storageLog",!1),h.open({content:`Storage-only log has been set to: ${G("_nodelete","_storageLog",!1)}.`,source:c.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:c.Failed})}}})}),t.createElement(D,null),t.createElement(Pe,{value:G("_nodelete","maxLogs","1000"),onChange:o=>/^\d+$/.test(o)?$("_nodelete","maxLogs",o.trim()):$("_nodelete","maxLogs","1000"),title:"Max Logs to Store"}),t.createElement(s,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",leading:t.createElement(s.Icon,{source:c.Clear}),trailing:t.createElement(z,{value:e.getBoolean("_nodelete_autoClear",!1),onValueChange:()=>{try{e.toggle("_nodelete_autoClear",!1),e.getBoolean("_nodelete_autoClear",!1)?$("_nodelete","autoClear",!0):$("_nodelete","autoClear",!1),h.open({content:`Logs auto-clearing has been set to: ${G("_nodelete","autoClear",!1)}.`,source:c.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:c.Failed})}}})}))),commands:Ne})}};Be(mt);

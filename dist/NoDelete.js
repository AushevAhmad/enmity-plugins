const{components:a}=window.enmity;a.Alert;const Me=a.Button;a.FlatList;const we=a.Image;a.ImageBackground,a.KeyboardAvoidingView,a.Modal,a.Pressable,a.RefreshControl;const ye=a.ScrollView;a.SectionList,a.StatusBar,a.StyleSheet,a.Switch;const E=a.Text;a.TextInput,a.TouchableHighlight;const L=a.TouchableOpacity;a.TouchableWithoutFeedback,a.Touchable;const p=a.View;a.VirtualizedList,a.Form,a.FormArrow,a.FormCTA,a.FormCTAButton,a.FormCardSection,a.FormCheckbox;const D=a.FormDivider;a.FormHint,a.FormIcon;const Pe=a.FormInput;a.FormLabel,a.FormRadio;const s=a.FormRow,k=a.FormSection;a.FormSelect,a.FormSubLabel;const K=a.FormSwitch;a.FormTernaryCheckBox,a.FormText,a.FormTextColors,a.FormTextSizes;function Be(e){window.enmity.plugins.registerPlugin(e)}const T={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,n)=>window.enmity.modules.filters.byName(e,n),byTypeName:(e,n)=>window.enmity.modules.filters.byTypeName(e,n),byDisplayName:(e,n)=>window.enmity.modules.filters.byDisplayName(e,n)};function q(...e){return window.enmity.modules.bulk(...e)}function O(...e){return window.enmity.modules.getByProps(...e)}function Fe(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;function Re(e){return window.enmity.patcher.create(e)}var Ue="NoDelete",Ae="2.3.9",ke="patch-1.0.8",Ve='Somewhat basic "Message Logger"',Ge=[{name:"Marek (modified by spin)",id:"308440976723148800"}],Ye="#ff0069",Oe="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/NoDelete.js",w={name:Ue,version:Ae,build:ke,description:Ve,authors:Ge,color:Ye,sourceUrl:Oe};const y=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const H=window.enmity.modules.common.Native,t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const v=window.enmity.modules.common.Storage,f=window.enmity.modules.common.Toasts,C=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const fe=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const N=window.enmity.modules.common.Navigation,He=window.enmity.modules.common.NavigationNative,_e=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const V=window.enmity.modules.common.StyleSheet,ze=window.enmity.modules.common.ColorMap;window.enmity.modules.common.Components,window.enmity.modules.common.Locale;const je=window.enmity.modules.common.Profiles;window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function I(e,n,o){window.enmity.settings.set(e,n,o)}function z(e,n,o){return window.enmity.settings.get(e,n,o)}function j(e,n,o){return window.enmity.settings.getBoolean(e,n,o)}const Ee=e=>{let n=0;for(let o in e)n++;return n},Xe=e=>{let n=e.split(`
`).map(o=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}",`});return n[0]=`{${n[0]}`,n[Ee(n)]=`${n[Ee(n)]}}`,n=n.join(""),n=n.replaceAll("undefined",""),n=n.split("").reverse().join("").replace(",","").split("").reverse().join(""),n};async function We(){try{let e=await v.getItem("device_list");if(e)return JSON.parse(e);let n=(await fe.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=Xe(n);await v.setItem("device_list",o);let l=await v.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function Je(e,n,o){let l=await We();return`**[${e}] Debug Information**
> **Plugin Version:** ${n}
> **Plugin Build:** ${o.split("-")[1]}
> **Discord Build:** ${H.InfoDictionaryManager.Version} (${H.InfoDictionaryManager.Build})
> **Software Version:** ${H.DCDDeviceManager.systemVersion}
> **Device:** ${l[H.DCDDeviceManager.device]}`}function h(e){return window.enmity.assets.getIDByName(e)}const c={Debug:h("debug"),Retry:h("ic_message_retry"),Failed:h("Small"),Cancel:h("ic_megaphone_nsfw_16px"),Add:h("add_white"),Delete:h("ic_message_delete"),Clear:h("ic_clear_all_24px"),Pencil:h("ic_pencil_24px"),Copy:h("toast_copy_link"),Open:h("ic_leave_stage"),Clipboard:h("pending-alert"),Debug_Command:{Sent:h("ic_application_command_24px"),Clock:h("clock")},Settings:{Toasts:{Context:h("toast_image_saved"),Settings:h("ic_selection_checked_24px")},Share:h("share"),Commands:h("ic_profile_badge_bot_commands"),Debug:h("ic_rulebook_16px")}},X=e=>{f.open({content:`Copied ${e} to clipboard.`,source:c.Clipboard})},{native:G}=window.enmity;function Ke(){G.reload()}G.version,G.build,G.device,G.version;const qe=O("transitionToGuild");async function Qe({manifest:e}){const n=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,o=await(await fe.get(n)).text;let l=o.match(/\d\.\d\.\d+/g),r=o.match(/patch\-\d\.\d\.\d+/g);return!l||!r?pe(e.name,e.version):(l=l[0],r=r[0],l!=e.version?ve(n,l,r.split("-")[1],e,!1):r!=e.build?ve(n,l,r.split("-")[1],e,!0):pe(e.name,e.version))}const ve=(e,n,o,l,r)=>{const d=r?o:n;C.show({title:"Update found",body:`A newer ${r?"build":"version"} is available for ${l.name}. ${r?`
The version will remain at ${n}, but the build will update to ${o}.`:""}
Would you like to install ${r?`build \`${o}\``:`version \`${n}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>Ze(e,d,l,r)})},pe=(e,n)=>{console.log(`[${e}] Plugin is on the latest version, which is ${n}`),f.open({content:`${e} is on latest version (${n})`,source:c.Settings.Toasts.Settings})};async function Ze(e,n,o,l){window.enmity.plugins.installPlugin(e,({data:r})=>{r=="installed_plugin"||r=="overridden_plugin"?C.show({title:`Updated ${o.name}`,body:`Successfully updated to ${l?"build":"version"} \`${n}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{Ke()}}):C.show({title:"Error",body:`Something went wrong while updating ${o.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{qe.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${o.name}%20Update%20Error%3A%20${l?`b${n}`:`v${n}`}`)}})})}const W=window.enmity.modules.common.Components.General.Animated,[J,et]=q(T.byProps("transitionToGuild"),T.byProps("setString"));var tt=({manifest:e})=>{const n=V.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:y.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),o=t.useRef(new W.Value(1)).current,l=()=>{W.spring(o,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},r=()=>{W.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start()},d=()=>{J.openURL("https://spin.rip/")},u={transform:[{scale:o}]};return t.createElement(t.Fragment,null,t.createElement(p,{style:n.container},t.createElement(L,{onPress:d,onPressIn:l,onPressOut:r},t.createElement(W.View,{style:[u]},t.createElement(we,{style:[n.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),t.createElement(p,{style:n.text_container},t.createElement(L,{onPress:()=>{J.openURL(e.sourceUrl)}},t.createElement(E,{style:[n.main_text,n.header]},e.name," ")),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(E,{style:[n.main_text,n.sub_header]},"A plugin by"),t.createElement(L,{onPress:()=>{J.openURL("https://spin.rip/")}},t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(E,{style:[n.main_text,n.sub_header]},"Settings page by"),t.createElement(L,{onPress:()=>{J.openURL("https://github.com/acquitelol/")}},t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),t.createElement(p,null,t.createElement(L,{style:{flexDirection:"row"},onPress:()=>{et.setString(`**${e.name}** v${e.version}`),X("plugin name and version")}},t.createElement(E,{style:[n.main_text,n.sub_header]},"Version:"),t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[nt,be]=q(T.byProps("transitionToGuild"),T.byProps("setString"));var ot=({manifest:e,settings:n,hasToasts:o,section:l,commands:r})=>{const d=V.createThemedStyleSheet({icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[u,$]=t.useState(),[i,b]=t.useState();return t.createElement(t.Fragment,null,t.createElement(ye,{onTouchStart:_=>{$(_.nativeEvent.pageX),b(_.nativeEvent.pageY)},onTouchEnd:_=>{u-_.nativeEvent.pageX<-100&&i-_.nativeEvent.pageY<40&&i-_.nativeEvent.pageY>-40&&N.pop()}},t.createElement(tt,{manifest:e}),l,r&&t.createElement(k,{title:"Plugin Commands"},r.map(_=>t.createElement(s,{label:`/${_.name}`,subLabel:_.description,leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Commands}),trailing:s.Arrow,onPress:function(){be.setString(`/${_.name}`),X(`the command ${_.name}`)}}))),t.createElement(k,{title:"Utility"},o&&t.createElement(t.Fragment,null,t.createElement(s,{label:"Initialization Toasts",leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:t.createElement(K,{value:n.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{n.toggle(`${e.name}-toastEnable`,!1),f.open({content:`Successfully ${n.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:c.Settings.Toasts.Settings})}})}),t.createElement(D,null)),t.createElement(s,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Settings.Debug}),trailing:s.Arrow,onPress:async function(){be.setString(await Je(e.name,e.version,e.build)),X("plugin debug information")}}),t.createElement(D,null),t.createElement(s,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:t.createElement(s.Icon,{style:d.icon,source:c.Delete}),trailing:s.Arrow,onPress:async function(){await v.removeItem("device_list"),f.open({content:"Cleared device list storage.",source:c.Settings.Toasts.Settings})}})),t.createElement(k,{title:"Source"},t.createElement(s,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Copy}),trailing:s.Arrow,onPress:()=>{Qe({manifest:e})}}),t.createElement(D,null),t.createElement(s,{label:"Source",subLabel:`View ${e.name} source code`,leading:t.createElement(s.Icon,{style:d.icon,source:c.Open}),trailing:s.Arrow,onPress:()=>{nt.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),t.createElement(s,{label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const Se=_e.createStackNavigator(),{ThemeColorMap:M}=ze;var De=({name:e="Page",component:n=p,close_button:o={name:"Close",functionality:()=>{N.pop()}}}={})=>{const l=V.createThemedStyleSheet({container:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:M.BACKGROUND_MOBILE_PRIMARY,color:M.TEXT_NORMAL},header:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:M.HEADER_PRIMARY},close:{color:M.HEADER_PRIMARY}});return t.createElement(He.NavigationContainer,null,t.createElement(Se.Navigator,{initialRouteName:e,style:l.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:l.cardStyle,headerStyle:l.header,headerTitleContainerStyle:l.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(Se.Screen,{name:e,component:n,options:{headerTitleStyle:{color:"white"},headerLeft:()=>t.createElement(Me,{color:l.close.color,title:o.name,onPress:o.functionality}),..._e.TransitionPresets.ModalSlideFromBottomIOS}})))};const[lt,at]=q(T.byProps("setString"),T.byProps("fetchProfile")),rt=Fe("StaticSearchBarContainer");var $e=()=>{const e=V.createThemedStyleSheet({main_text:{opacity:.975,letterSpacing:.25},item_container:{display:"flex",flexDirection:"row",alignItems:"center",paddingTop:4,paddingBottom:4,width:"100%"},author_name:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:18,letterSpacing:.25,paddingBottom:4},log_header:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",maxWidth:"95%"},log_sub_header:{display:"flex",flexDirection:"row",alignItems:"center",maxWidth:"50%"},log_time:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.99,fontSize:13,paddingLeft:4},log_type:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.985,fontSize:16,marginLeft:"auto"},author_avatar:{width:40,height:40,borderRadius:100,justifySelf:"start",alignSelf:"start"},old_message:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.89,fontSize:17},message_content:{color:y.ThemeColorMap.TEXT_NORMAL,opacity:.985,fontSize:17},main_container:{paddingLeft:8,paddingRight:4,paddingTop:2,paddingBottom:16,width:"95%"},text_container:{display:"flex",flexDirection:"column",paddingBottom:4,paddingLeft:8,width:"95%"}}),n=(i,b)=>i.length>b?i.substring(0,b)+"...":i,o=()=>{v.setItem("NoDeleteLogs","[]"),v.getItem("NoDeleteLogs").then(i=>{i=="[]"?C.show({title:"Logs Cleared",body:"NoDelete message logs have been cleared",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>N.pop()}):C.show({title:"Error clearing logs",body:"NoDelete logs could not be cleared. Try again or report this issues to spin.",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>N.pop()})})},l=z("_nodelete","maxLogs","1000"),[r,d]=t.useState([]),[u,$]=t.useState([]);return t.useEffect(()=>{v.getItem("NoDeleteLogs").then(i=>{let b=JSON.parse(i);d(b.reverse())})},[]),r.length>parseInt(l)&&(j("_nodelete","autoClear",!1)==!1?C.show({title:`Logs have exceeded ${n(l,12)}`,body:`NoDelete logs have exceeded your limit of ${n(l,12)}${parseInt(l)>1e3?`
You may experience performance issues or a laggy log page UI. Clear your logs to fix this issue.`:""}`,confirmText:"Clear logs",cancelText:"Close",onConfirm:()=>o()}):(o(),v.getItem("NoDeleteLogs").then(i=>{i==="[]"?f.open({content:`Auto-cleared ${n(r.length,10)} logs.`,source:c.Settings.Toasts.Settings}):f.open({content:"NoDelete logs could not be cleared. Try again or report this issues to spin.",source:c.Failed})}))),t.createElement(t.Fragment,null,t.createElement(rt,{placeholder:"Search Logs",onChangeText:i=>$(i)}),t.createElement(s,{label:"Clear all NoDelete message logs",trailing:s.Arrow,onPress:()=>o()}),t.createElement(D,null),t.createElement(ye,null,t.createElement(p,{style:e.main_container},r.filter(i=>JSON.stringify(i).includes(u)).map(i=>t.createElement(t.Fragment,null,t.createElement(p,{style:e.item_container},t.createElement(we,{style:[e.author_avatar],source:{uri:i.avatar}}),t.createElement(L,{onPress:()=>{lt.setString(`${i.author} (\`${i.id}\`): ${i.content.join(`
`)}`),X("log content")},onLongPress:()=>{at.fetchProfile(i.id).then(()=>{je.showUserProfile({userId:i.id})}).catch(b=>{f.open({content:"Error while fetching user. Check logs for more info.",source:c.Failed}),console.log("[NoDelete User Fetch Error]",b)})},style:e.text_container},t.createElement(p,{style:e.log_header},t.createElement(p,{style:e.log_sub_header},t.createElement(E,{style:[e.main_text,e.author_name]},i.author),t.createElement(E,{style:[e.main_text,e.log_time]},i.content[0])),t.createElement(E,{style:[e.main_text,e.log_type]},i.type==="edit"?t.createElement(s.Icon,{source:c.Pencil}):t.createElement(s.Icon,{source:c.Delete}))),t.createElement(p,null,i.content.length==3?t.createElement(t.Fragment,null,t.createElement(E,{style:e.old_message},i.content[1]),t.createElement(E,{style:e.message_content},i.content[2])):t.createElement(E,{style:e.message_content},i.content[1])))),t.createElement(D,null))))))},xe;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(xe||(xe={}));var Q;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(Q||(Q={}));var Z;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(Z||(Z={}));var Le;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(Le||(Le={}));var Te;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(Te||(Te={}));var Ce;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Ce||(Ce={}));function it(e,n,o,l){window.enmity.clyde.sendReply(e,n,o,l)}const st={id:"logs-command",name:"logs",displayName:"logs",description:"Open the NoDelete message logs page",displayDescription:"Open the NoDelete message logs page",type:Q.Chat,inputType:Z.BuiltInText,execute:async function(e,n){var o;try{N.push(De,{component:$e,name:"NoDelete Message Logs"})}catch(l){console.log("[ NoDelete Error ]",l),it((o=n==null?void 0:n.channel.id)!=null?o:"0","An error occured while trying to open NoDelete message logs. Check debug logs for more info.")}}},Ne=[st];async function Ie(e,n,o,l,r){if(n.split("#").pop()=="undefined"||o=="undefined"||l=="undefined"||r.original==null)return;const d={type:e,author:n,id:o,avatar:l?`https://cdn.discordapp.com/avatars/${o}/${l}.${l!=null&&l.startsWith("a_")?"gif":"png"}?size=32`:"https://cdn.discordapp.com/embed/avatars/0.png",content:r.edited?[new Date(r.time).toLocaleString(),r.original,r.edited]:[new Date(r.time).toLocaleString(),r.original]};let u=await v.getItem("NoDeleteLogs");u=JSON.parse(u),d!==u[u.length-1]&&(u.push(d),await v.setItem("NoDeleteLogs",JSON.stringify(u)))}const ee=Re("NoDelete"),ct={...w,patches:[],onStart(){v.getItem("NoDeleteLogs").then(l=>{l==null&&v.setItem("NoDeleteLogs","[]")}).catch(l=>{console.log(`[${w.name} Storage Error]`,l)});let e=0,n=3;const o=()=>{var l,r;let d=j(w.name,`${w.name}-toastEnable`,!1);try{e++;const u=O("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),$=O("getMessage","getMessages"),i=O("getChannel","getDMFromUserId");console.log(`${w.name} delayed start attempt ${e}/${n}.`),d&&f.open({content:`[${w.name}] start attempt ${e}/${n}.`,source:c.Debug});for(const S of["MESSAGE_UPDATE","MESSAGE_DELETE"])try{u.dispatch({type:S,message:{}})}catch(g){console.log(`[${w.name} Dispatch Error]`,g)}const b=(l=u._actionHandlers._orderedActionHandlers)==null?void 0:l.MESSAGE_DELETE.find(S=>S.name==="MessageStore"),_=(r=u._actionHandlers._orderedActionHandlers)==null?void 0:r.MESSAGE_UPDATE.find(S=>S.name==="MessageStore");ee.before(b,"actionHandler",(S,g)=>{var P,B,F,R,U,A;const m=$.getMessage(g[0].channelId,g[0].id);if(j("_nodelete","_storageLog",!1)==!1&&(g[0]={}),!(m!=null&&m.editedTimestamp)||(m==null?void 0:m.editedTimestamp._isValid)){const Y={type:"MESSAGE_UPDATE",message:{...m,edited_timestamp:"invalid_timestamp",content:(m==null?void 0:m.content)+" `[deleted]`",guild_id:(P=i.getChannel(m==null?void 0:m.channel_id))==null?void 0:P.guild_id},log_edit:!1};u.dispatch(Y)}Ie("delete",`${(B=m==null?void 0:m.author)==null?void 0:B.username}#${(F=m==null?void 0:m.author)==null?void 0:F.discriminator}`,(R=m==null?void 0:m.author)==null?void 0:R.id,(U=m==null?void 0:m.author)==null?void 0:U.avatar,{time:m==null?void 0:m.timestamp,original:(A=m==null?void 0:m.content)==null?void 0:A.replace("`[deleted]`","").trim()})}),ee.before(_,"actionHandler",(S,g)=>{var P,B,F,R,U,A,m,Y,te,ne,oe,le,ae,re,ie,se,ce,me,de,ue,ge;try{if(g[0].log_edit==!1)return;const x=$.getMessage(g[0].message.channel_id,g[0].message.id);if(!((B=(P=g[0])==null?void 0:P.message)!=null&&B.content))return;try{if(!g[0].edited_timestamp._isValid)return}catch{}const he=g[0].message.content;j("_nodelete","_storageLog",!1)==!1&&(g[0].message.content=(x==null?void 0:x.content)+" `[edited]`\n"+((R=(F=g[0])==null?void 0:F.message)==null?void 0:R.content)),Ie("edit",`${(m=(A=(U=g[0])==null?void 0:U.message)==null?void 0:A.author)==null?void 0:m.username}#${(ne=(te=(Y=g[0])==null?void 0:Y.message)==null?void 0:te.author)==null?void 0:ne.discriminator}`,(ae=(le=(oe=g[0])==null?void 0:oe.message)==null?void 0:le.author)==null?void 0:ae.id,(se=(ie=(re=g[0])==null?void 0:re.message)==null?void 0:ie.author)==null?void 0:se.avatar,{time:(me=(ce=g[0])==null?void 0:ce.message)==null?void 0:me.edited_timestamp,original:(ue=(de=x==null?void 0:x.content)==null?void 0:de.replace(/\`\[edited\]\`/gim,""))==null?void 0:ue.replace("`[deleted]`","").trim(),edited:`${(ge=he==null?void 0:he.replace(/\`\[edited\]\`/gim,""))==null?void 0:ge.replace("`[deleted]`","").trim()}`});return}catch(x){console.log(`[${w.name} Error]`,x)}}),console.log(`${w.name} delayed start successful.`),d&&f.open({content:`[${w.name}] start successful.`,source:c.Settings.Toasts.Settings})}catch(u){console.log(`[${w.name} Plugin Error]`,u),e<n?(console.warn(`${w.name} failed to start. Trying again in ${e}0s.`),d&&f.open({content:`[${w.name}] failed to start trying again in ${e}0s.`,source:c.Failed}),setTimeout(o,e*1e4)):(console.error(`${w.name} failed to start. Giving up.`),f.open({content:`${w.name} failed to start. Giving up.`,source:c.Failed}))}};setTimeout(()=>{o()},300),this.commands=Ne},onStop(){ee.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){const n=V.createThemedStyleSheet({icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED}});return t.createElement(ot,{manifest:w,settings:e,hasToasts:!1,section:t.createElement(t.Fragment,null,t.createElement(k,{title:"Message Logs"},t.createElement(s,{label:"View Message Logs",subLabel:"Tap on an item to copy to clipboard. Long press an item to view profile",leading:t.createElement(s.Icon,{style:n.icon,source:c.Settings.Debug}),onPress:()=>{N.push(De,{component:$e,name:"NoDelete Message Logs"})}})),t.createElement(D,null),t.createElement(k,{title:"Plugin Settings"},t.createElement(s,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",leading:t.createElement(s.Icon,{source:c.Pencil}),trailing:t.createElement(K,{value:e.getBoolean("_nodelete",!1),onValueChange:()=>{try{e.toggle("_nodelete",!1),e.getBoolean("_nodelete",!1)?I("_nodelete","_storageLog",!0):I("_nodelete","_storageLog",!1),f.open({content:`Storage-only log has been set to: ${z("_nodelete","_storageLog",!1)}.`,source:c.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),f.open({content:"An error has occurred. Check debug logs for more info.",source:c.Failed})}}})}),t.createElement(D,null),t.createElement(Pe,{value:z("_nodelete","maxLogs","1000"),onChange:o=>/^\d+$/.test(o)?I("_nodelete","maxLogs",o.trim()):I("_nodelete","maxLogs","1000"),title:"Max Logs to Store"}),t.createElement(s,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",leading:t.createElement(s.Icon,{source:c.Clear}),trailing:t.createElement(K,{value:e.getBoolean("_nodelete_autoClear",!1),onValueChange:()=>{try{e.toggle("_nodelete_autoClear",!1),e.getBoolean("_nodelete_autoClear",!1)?I("_nodelete","autoClear",!0):I("_nodelete","autoClear",!1),f.open({content:`Logs auto-clearing has been set to: ${z("_nodelete","autoClear",!1)}.`,source:c.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),f.open({content:"An error has occurred. Check debug logs for more info.",source:c.Failed})}}})}))),commands:Ne})}};Be(ct);

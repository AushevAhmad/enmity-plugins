const{components:a}=window.enmity;a.Alert;const Ae=a.Button;a.FlatList;const be=a.Image;a.ImageBackground,a.KeyboardAvoidingView,a.Modal,a.Pressable,a.RefreshControl;const pe=a.ScrollView;a.SectionList,a.StatusBar,a.StyleSheet,a.Switch;const E=a.Text;a.TextInput,a.TouchableHighlight;const T=a.TouchableOpacity;a.TouchableWithoutFeedback,a.Touchable;const p=a.View;a.VirtualizedList,a.Form,a.FormArrow,a.FormCTA,a.FormCTAButton,a.FormCardSection,a.FormCheckbox;const D=a.FormDivider;a.FormHint,a.FormIcon;const ke=a.FormInput;a.FormLabel,a.FormRadio;const c=a.FormRow,G=a.FormSection;a.FormSelect,a.FormSubLabel;const X=a.FormSwitch;a.FormTernaryCheckBox,a.FormText,a.FormTextColors,a.FormTextSizes;function Ve(e){window.enmity.plugins.registerPlugin(e)}const C={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,n)=>window.enmity.modules.filters.byName(e,n),byTypeName:(e,n)=>window.enmity.modules.filters.byTypeName(e,n),byDisplayName:(e,n)=>window.enmity.modules.filters.byDisplayName(e,n)};function Z(...e){return window.enmity.modules.bulk(...e)}function W(...e){return window.enmity.modules.getByProps(...e)}function Ge(...e){return window.enmity.modules.getByName(...e)}function Ye(...e){return window.enmity.modules.getByKeyword(...e)}window.enmity.modules.common;function Oe(e){return window.enmity.patcher.create(e)}var He="NoDelete",ze="2.4.10",je="patch-1.0.10",Xe='Somewhat basic "Message Logger"',We=[{name:"Marek (modified by spin)",id:"308440976723148800"}],Je="#ff0069",Ke="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/NoDelete.js",f={name:He,version:ze,build:je,description:Xe,authors:We,color:Je,sourceUrl:Ke};const y=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const J=window.enmity.modules.common.Native,t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const b=window.enmity.modules.common.Storage,h=window.enmity.modules.common.Toasts,N=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const Se=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const I=window.enmity.modules.common.Navigation,qe=window.enmity.modules.common.NavigationNative,De=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const Y=window.enmity.modules.common.StyleSheet,Qe=window.enmity.modules.common.ColorMap;window.enmity.modules.common.Components,window.enmity.modules.common.Locale;const Ze=window.enmity.modules.common.Profiles;window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function $(e,n,o){window.enmity.settings.set(e,n,o)}function O(e,n,o){return window.enmity.settings.get(e,n,o)}function H(e,n,o){return window.enmity.settings.getBoolean(e,n,o)}const $e=e=>{let n=0;for(let o in e)n++;return n},et=e=>{let n=e.split(`
`).map(o=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}",`});return n[0]=`{${n[0]}`,n[$e(n)]=`${n[$e(n)]}}`,n=n.join(""),n=n.replaceAll("undefined",""),n=n.split("").reverse().join("").replace(",","").split("").reverse().join(""),n};async function tt(){try{let e=await b.getItem("device_list");if(e)return JSON.parse(e);let n=(await Se.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=et(n);await b.setItem("device_list",o);let l=await b.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function nt(e,n,o){let l=await tt();return`**[${e}] Debug Information**
> **Plugin Version:** ${n}
> **Plugin Build:** ${o.split("-")[1]}
> **Discord Build:** ${J.InfoDictionaryManager.Version} (${J.InfoDictionaryManager.Build})
> **Software Version:** ${J.DCDDeviceManager.systemVersion}
> **Device:** ${l[J.DCDDeviceManager.device]}`}function g(e){return window.enmity.assets.getIDByName(e)}const m={Debug:g("debug"),Retry:g("ic_message_retry"),Failed:g("Small"),Cancel:g("ic_megaphone_nsfw_16px"),Add:g("add_white"),Delete:g("ic_message_delete"),Clear:g("ic_clear_all_24px"),Pencil:g("ic_pencil_24px"),Copy:g("toast_copy_link"),Open:g("ic_leave_stage"),Clipboard:g("pending-alert"),Debug_Command:{Sent:g("ic_application_command_24px"),Clock:g("clock")},Settings:{Toasts:{Context:g("toast_image_saved"),Settings:g("ic_selection_checked_24px")},Self:g("friends_toast_icon"),Share:g("share"),Commands:g("ic_profile_badge_bot_commands"),Debug:g("ic_rulebook_16px")}},K=e=>{h.open({content:`Copied ${e} to clipboard.`,source:m.Clipboard})},{native:z}=window.enmity;function ot(){z.reload()}z.version,z.build,z.device,z.version;const lt=W("transitionToGuild");async function at({manifest:e}){const n=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,o=await(await Se.get(n)).text;let l=o.match(/\d\.\d\.\d+/g),i=o.match(/patch\-\d\.\d\.\d+/g);return!l||!i?Te(e.name,e.version):(l=l[0],i=i[0],l!=e.version?Le(n,l,i.split("-")[1],e,!1):i!=e.build?Le(n,l,i.split("-")[1],e,!0):Te(e.name,e.version))}const Le=(e,n,o,l,i)=>{const u=i?o:n;N.show({title:"Update found",body:`A newer ${i?"build":"version"} is available for ${l.name}. ${i?`
The version will remain at ${n}, but the build will update to ${o}.`:""}
Would you like to install ${i?`build \`${o}\``:`version \`${n}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>it(e,u,l,i)})},Te=(e,n)=>{console.log(`[${e}] Plugin is on the latest version, which is ${n}`),h.open({content:`${e} is on latest version (${n})`,source:m.Settings.Toasts.Settings})};async function it(e,n,o,l){window.enmity.plugins.installPlugin(e,({data:i})=>{i=="installed_plugin"||i=="overridden_plugin"?N.show({title:`Updated ${o.name}`,body:`Successfully updated to ${l?"build":"version"} \`${n}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ot()}}):N.show({title:"Error",body:`Something went wrong while updating ${o.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{lt.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${o.name}%20Update%20Error%3A%20${l?`b${n}`:`v${n}`}`)}})})}const q=window.enmity.modules.common.Components.General.Animated,[Q,rt]=Z(C.byProps("transitionToGuild"),C.byProps("setString"));var st=({manifest:e})=>{const n=Y.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:y.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),o=t.useRef(new q.Value(1)).current,l=()=>{q.spring(o,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},i=()=>{q.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start()},u=()=>{Q.openURL("https://spin.rip/")},w={transform:[{scale:o}]};return t.createElement(t.Fragment,null,t.createElement(p,{style:n.container},t.createElement(T,{onPress:u,onPressIn:l,onPressOut:i},t.createElement(q.View,{style:[w]},t.createElement(be,{style:[n.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),t.createElement(p,{style:n.text_container},t.createElement(T,{onPress:()=>{Q.openURL(e.sourceUrl)}},t.createElement(E,{style:[n.main_text,n.header]},e.name," ")),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(E,{style:[n.main_text,n.sub_header]},"A plugin by"),t.createElement(T,{onPress:()=>{Q.openURL("https://spin.rip/")}},t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(E,{style:[n.main_text,n.sub_header]},"Settings page by"),t.createElement(T,{onPress:()=>{Q.openURL("https://github.com/acquitelol/")}},t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),t.createElement(p,null,t.createElement(T,{style:{flexDirection:"row"},onPress:()=>{rt.setString(`**${e.name}** v${e.version}`),K("plugin name and version")}},t.createElement(E,{style:[n.main_text,n.sub_header]},"Version:"),t.createElement(E,{style:[n.main_text,n.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[ct,xe]=Z(C.byProps("transitionToGuild"),C.byProps("setString"));var mt=({manifest:e,settings:n,hasToasts:o,section:l,commands:i})=>{const u=Y.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[w,_]=t.useState(),[r,S]=t.useState();return t.createElement(t.Fragment,null,t.createElement(pe,{onTouchStart:v=>{_(v.nativeEvent.pageX),S(v.nativeEvent.pageY)},onTouchEnd:v=>{w-v.nativeEvent.pageX<-100&&r-v.nativeEvent.pageY<40&&r-v.nativeEvent.pageY>-40&&I.pop()}},t.createElement(st,{manifest:e}),l,i&&t.createElement(G,{title:"Plugin Commands"},i.map(v=>t.createElement(c,{label:`/${v.name}`,subLabel:v.description,leading:t.createElement(c.Icon,{style:u.icon,source:m.Settings.Commands}),trailing:c.Arrow,onPress:function(){xe.setString(`/${v.name}`),K(`the command ${v.name}`)}}))),t.createElement(G,{title:"Utility"},o&&t.createElement(t.Fragment,null,t.createElement(c,{label:"Initialization Toasts",leading:t.createElement(c.Icon,{style:u.icon,source:m.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:t.createElement(X,{value:n.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{n.toggle(`${e.name}-toastEnable`,!1),h.open({content:`Successfully ${n.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:m.Settings.Toasts.Settings})}})}),t.createElement(D,null)),t.createElement(c,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:t.createElement(c.Icon,{style:u.icon,source:m.Settings.Debug}),trailing:c.Arrow,onPress:async function(){xe.setString(await nt(e.name,e.version,e.build)),K("plugin debug information")}}),t.createElement(D,null),t.createElement(c,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:t.createElement(c.Icon,{style:u.icon,source:m.Delete}),trailing:c.Arrow,onPress:async function(){await b.removeItem("device_list"),h.open({content:"Cleared device list storage.",source:m.Settings.Toasts.Settings})}})),t.createElement(G,{title:"Source"},t.createElement(c,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:t.createElement(c.Icon,{style:u.icon,source:m.Copy}),trailing:c.Arrow,onPress:()=>{at({manifest:e})}}),t.createElement(D,null),t.createElement(c,{label:"Source",subLabel:`View ${e.name} source code`,leading:t.createElement(c.Icon,{style:u.icon,source:m.Open}),trailing:c.Arrow,onPress:()=>{ct.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),t.createElement(c,{style:u.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const Ce=De.createStackNavigator(),{ThemeColorMap:M}=Qe;var Ne=({name:e="Page",component:n=p,close_button:o={name:"Close",functionality:()=>{I.pop()}}}={})=>{const l=Y.createThemedStyleSheet({container:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:M.BACKGROUND_MOBILE_PRIMARY,color:M.TEXT_NORMAL},header:{backgroundColor:M.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:M.HEADER_PRIMARY},close:{color:M.HEADER_PRIMARY}});return t.createElement(qe.NavigationContainer,null,t.createElement(Ce.Navigator,{initialRouteName:e,style:l.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:l.cardStyle,headerStyle:l.header,headerTitleContainerStyle:l.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(Ce.Screen,{name:e,component:n,options:{headerTitleStyle:{color:"white"},headerLeft:()=>t.createElement(Ae,{color:l.close.color,title:o.name,onPress:o.functionality}),...De.TransitionPresets.ModalSlideFromBottomIOS}})))};const[dt,ut]=Z(C.byProps("setString"),C.byProps("fetchProfile")),gt=Ge("StaticSearchBarContainer");var Ie=()=>{const e=Y.createThemedStyleSheet({main_text:{opacity:.975,letterSpacing:.25},item_container:{display:"flex",flexDirection:"row",alignItems:"center",paddingTop:4,paddingBottom:4,width:"100%"},author_name:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:18,letterSpacing:.25,paddingBottom:4},log_header:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",maxWidth:"95%"},log_sub_header:{display:"flex",flexDirection:"row",alignItems:"center",maxWidth:"50%"},log_time:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.99,fontSize:13,paddingLeft:4},log_type:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.45,fontSize:16,marginLeft:"auto"},avatar_container:{alignSelf:"start",justifySelf:"start"},author_avatar:{width:40,height:40,borderRadius:100},old_message:{color:y.ThemeColorMap.TEXT_MUTED,opacity:.89,fontSize:16},message_content:{color:y.ThemeColorMap.TEXT_NORMAL,opacity:.985,fontSize:16},main_container:{paddingLeft:8,paddingRight:4,paddingTop:2,paddingBottom:16,width:"95%"},text_container:{display:"flex",flexDirection:"column",paddingBottom:4,paddingLeft:8,width:"95%"}}),n=(r,S)=>r.length>S?r.substring(0,S)+"...":r,o=()=>{b.setItem("NoDeleteLogs","[]"),b.getItem("NoDeleteLogs").then(r=>{r=="[]"?N.show({title:"Logs Cleared",body:"NoDelete message logs have been cleared",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>I.pop()}):N.show({title:"Error clearing logs",body:"NoDelete logs could not be cleared. Try again or report this issues to spin.",confirmText:"Close logs",cancelText:"Cancel",onConfirm:()=>I.pop()})})},l=O("_nodelete","maxLogs","1000"),[i,u]=t.useState([]),[w,_]=t.useState([]);return t.useEffect(()=>{b.getItem("NoDeleteLogs").then(r=>{let S=JSON.parse(r);u(S.reverse())})},[]),i.length>parseInt(l)&&(H("_nodelete","autoClear",!1)==!1?N.show({title:`Logs have exceeded ${n(l,12)}`,body:`NoDelete logs have exceeded your limit of ${n(l,12)}${parseInt(l)>1e3?`
You may experience performance issues or a laggy log page UI. Clear your logs to fix this issue.`:""}`,confirmText:"Clear logs",cancelText:"Close",onConfirm:()=>o()}):(o(),b.getItem("NoDeleteLogs").then(r=>{r==="[]"?h.open({content:`Auto-cleared ${n(i.length,10)} logs.`,source:m.Settings.Toasts.Settings}):h.open({content:"NoDelete logs could not be cleared. Try again or report this issues to spin.",source:m.Failed})}))),t.createElement(t.Fragment,null,t.createElement(gt,{placeholder:"Search Logs",onChangeText:r=>_(r)}),t.createElement(c,{label:"Clear all NoDelete message logs",trailing:c.Arrow,onPress:()=>o()}),t.createElement(D,null),t.createElement(pe,null,t.createElement(p,{style:e.main_container},i.filter(r=>JSON.stringify(r).includes(w)).map(r=>t.createElement(t.Fragment,null,t.createElement(p,{style:e.item_container},t.createElement(T,{onPress:()=>{ut.fetchProfile(r.id).then(()=>{Ze.showUserProfile({userId:r.id})}).catch(S=>{h.open({content:"Error while fetching user. Check logs for more info.",source:m.Failed}),console.log("[NoDelete User Fetch Error]",S)})},style:e.avatar_container},t.createElement(be,{style:e.author_avatar,source:{uri:r.avatar}})),t.createElement(T,{onPress:()=>{dt.setString(`${r.author} (\`${r.id}\`):
>>> ${r.content.join(`
`)}`),K("log content")},style:e.text_container},t.createElement(p,{style:e.log_header},t.createElement(p,{style:e.log_sub_header},t.createElement(E,{style:[e.main_text,e.author_name]},r.author),t.createElement(E,{style:[e.main_text,e.log_time]},r.content[0])),t.createElement(E,{style:[e.main_text,e.log_type]},r.type==="edit"?t.createElement(c.Icon,{source:m.Pencil}):t.createElement(c.Icon,{source:m.Delete}))),t.createElement(p,null,r.content.length==3?t.createElement(t.Fragment,null,t.createElement(E,{style:e.old_message},r.content[1]),t.createElement(E,{style:e.message_content},r.content[2])):t.createElement(E,{style:e.message_content},r.content[1])))),t.createElement(D,null))))))},Me;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Me||(Me={}));var ee;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ee||(ee={}));var te;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(te||(te={}));var Pe;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(Pe||(Pe={}));var Be;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(Be||(Be={}));var Fe;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Fe||(Fe={}));function ht(e,n,o,l){window.enmity.clyde.sendReply(e,n,o,l)}const ft={id:"logs-command",name:"logs",displayName:"logs",description:"Open the NoDelete message logs page",displayDescription:"Open the NoDelete message logs page",type:ee.Chat,inputType:te.BuiltInText,execute:async function(e,n){var o;try{I.push(Ne,{component:Ie,name:"NoDelete Message Logs"})}catch(l){console.log("[ NoDelete Error ]",l),ht((o=n==null?void 0:n.channel.id)!=null?o:"0","An error occured while trying to open NoDelete message logs. Check debug logs for more info.")}}},Re=[ft];async function Ue(e,n,o,l,i){var u;if(n.split("#").pop()=="undefined"||o=="undefined"||l=="undefined"||i.original==null||H("_nodelete","_logSelf",!1)===!1&&o==((u=Ye("getCurrentUser").getCurrentUser())==null?void 0:u.id))return;const w={type:e,author:n,id:o,avatar:l?`https://cdn.discordapp.com/avatars/${o}/${l}.${l!=null&&l.startsWith("a_")?"gif":"png"}?size=1024`:"https://cdn.discordapp.com/embed/avatars/0.png",content:i.edited?[new Date(i.time).toLocaleString(),i.original,i.edited]:[new Date(i.time).toLocaleString(),i.original]};let _=await b.getItem("NoDeleteLogs");_=JSON.parse(_),w!==_[_.length-1]&&(_.push(w),await b.setItem("NoDeleteLogs",JSON.stringify(_)))}const ne=Oe("NoDelete"),yt={...f,patches:[],onStart(){b.getItem("NoDeleteLogs").then(l=>{l==null&&b.setItem("NoDeleteLogs","[]")}).catch(l=>{console.log(`[${f.name} Storage Error]`,l)});let e=0,n=3;const o=()=>{var l,i;let u=H(f.name,`${f.name}-toastEnable`,!1);try{e++;const w=W("_currentDispatchActionType","_subscriptions","_actionHandlers","_waitQueue"),_=W("getMessage","getMessages"),r=W("getChannel","getDMFromUserId");console.log(`${f.name} delayed start attempt ${e}/${n}.`),u&&h.open({content:`[${f.name}] start attempt ${e}/${n}.`,source:m.Debug});for(const L of["MESSAGE_UPDATE","MESSAGE_DELETE"])try{w.dispatch({type:L,message:{}})}catch(d){console.log(`[${f.name} Dispatch Error]`,d)}const S=(l=w._actionHandlers._orderedActionHandlers)==null?void 0:l.MESSAGE_DELETE.find(L=>L.name==="MessageStore"),v=(i=w._actionHandlers._orderedActionHandlers)==null?void 0:i.MESSAGE_UPDATE.find(L=>L.name==="MessageStore");ne.before(S,"actionHandler",(L,d)=>{var P,B,F,R,U,A,k,V;const s=_.getMessage(d[0].channelId,d[0].id);if(H("_nodelete","_storageLog",!1)==!1&&(d[0]={}),!((s==null?void 0:s.content)==""&&((P=s==null?void 0:s.attachments)==null?void 0:P.length)==0&&((B=s==null?void 0:s.embeds)==null?void 0:B.length)==0)){if(!(s!=null&&s.editedTimestamp)||(s==null?void 0:s.editedTimestamp._isValid)){const j={type:"MESSAGE_UPDATE",message:{...s,edited_timestamp:"invalid_timestamp",content:(s==null?void 0:s.content)+" `[deleted]`",guild_id:(F=r.getChannel(s==null?void 0:s.channel_id))==null?void 0:F.guild_id},log_edit:!1};w.dispatch(j)}Ue("delete",`${(R=s==null?void 0:s.author)==null?void 0:R.username}#${(U=s==null?void 0:s.author)==null?void 0:U.discriminator}`,(A=s==null?void 0:s.author)==null?void 0:A.id,(k=s==null?void 0:s.author)==null?void 0:k.avatar,{time:s==null?void 0:s.timestamp,original:(V=s==null?void 0:s.content)==null?void 0:V.replace("`[deleted]`","").trim()})}}),ne.before(v,"actionHandler",(L,d)=>{var P,B,F,R,U,A,k,V,s,j,oe,le,ae,ie,re,se,ce,me,de,ue,ge,he,fe,ye,we,_e,ve;try{if(d[0].log_edit==!1)return;const x=_.getMessage(d[0].message.channel_id,d[0].message.id);if(((B=(P=d[0])==null?void 0:P.message)==null?void 0:B.content)==""&&((U=(R=(F=d[0])==null?void 0:F.message)==null?void 0:R.attachments)==null?void 0:U.length)==0&&((V=(k=(A=d[0])==null?void 0:A.message)==null?void 0:k.embeds)==null?void 0:V.length))return;try{if(!d[0].edited_timestamp._isValid)return}catch{}const Ee=d[0].message.content;H("_nodelete","_storageLog",!1)==!1&&(d[0].message.content=(x==null?void 0:x.content)+" `[edited]`\n"+((j=(s=d[0])==null?void 0:s.message)==null?void 0:j.content)),Ue("edit",`${(ae=(le=(oe=d[0])==null?void 0:oe.message)==null?void 0:le.author)==null?void 0:ae.username}#${(se=(re=(ie=d[0])==null?void 0:ie.message)==null?void 0:re.author)==null?void 0:se.discriminator}`,(de=(me=(ce=d[0])==null?void 0:ce.message)==null?void 0:me.author)==null?void 0:de.id,(he=(ge=(ue=d[0])==null?void 0:ue.message)==null?void 0:ge.author)==null?void 0:he.avatar,{time:(ye=(fe=d[0])==null?void 0:fe.message)==null?void 0:ye.edited_timestamp,original:(_e=(we=x==null?void 0:x.content)==null?void 0:we.replace(/\`\[edited\]\`/gim,""))==null?void 0:_e.replace("`[deleted]`","").trim(),edited:`${(ve=Ee==null?void 0:Ee.replace(/\`\[edited\]\`/gim,""))==null?void 0:ve.replace("`[deleted]`","").trim()}`});return}catch(x){console.log(`[${f.name} Error]`,x)}}),console.log(`${f.name} delayed start successful.`),u&&h.open({content:`[${f.name}] start successful.`,source:m.Settings.Toasts.Settings})}catch(w){console.log(`[${f.name} Plugin Error]`,w),e<n?(console.warn(`${f.name} failed to start. Trying again in ${e}0s.`),u&&h.open({content:`[${f.name}] failed to start trying again in ${e}0s.`,source:m.Failed}),setTimeout(o,e*1e4)):(console.error(`${f.name} failed to start. Giving up.`),h.open({content:`${f.name} failed to start. Giving up.`,source:m.Failed}))}};setTimeout(()=>{o()},300),this.commands=Re},onStop(){ne.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){const n=Y.createThemedStyleSheet({icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED}});return t.createElement(mt,{manifest:f,settings:e,hasToasts:!1,section:t.createElement(t.Fragment,null,t.createElement(G,{title:"Message Logs"},t.createElement(c,{label:"View Message Logs",subLabel:"Tap on an item to copy to clipboard",leading:t.createElement(c.Icon,{style:n.icon,source:m.Settings.Debug}),onPress:()=>{I.push(Ne,{component:Ie,name:"NoDelete Message Logs"})}})),t.createElement(D,null),t.createElement(G,{title:"Plugin Settings"},t.createElement(c,{label:"Log my own messages",subLabel:"Whether or not your own edits and deleted messages will be logged",leading:t.createElement(c.Icon,{source:m.Settings.Self}),trailing:t.createElement(X,{value:e.getBoolean("_nodelete_logSelf",!1),onValueChange:()=>{try{e.toggle("_nodelete_logSelf",!1),e.getBoolean("_nodelete_logSelf",!1)?$("_nodelete","_logSelf",!0):$("_nodelete","_logSelf",!1),h.open({content:`Log self-events has been set to: ${O("_nodelete","_logSelf",!1)}.`,source:m.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}),t.createElement(D,null),t.createElement(c,{label:"Only log to Storage",subLabel:"Message logs will not show in chat, only in Storage",leading:t.createElement(c.Icon,{source:m.Pencil}),trailing:t.createElement(X,{value:e.getBoolean("_nodelete",!1),onValueChange:()=>{try{e.toggle("_nodelete",!1),e.getBoolean("_nodelete",!1)?$("_nodelete","_storageLog",!0):$("_nodelete","_storageLog",!1),h.open({content:`Storage-only log has been set to: ${O("_nodelete","_storageLog",!1)}.`,source:m.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}),t.createElement(D,null),t.createElement(ke,{value:O("_nodelete","maxLogs","1000"),onChange:o=>/^\d+$/.test(o)?$("_nodelete","maxLogs",o.trim()):$("_nodelete","maxLogs","1000"),title:"Max Logs to Store"}),t.createElement(c,{label:"Auto-clear logs",subLabel:"Message logs will automatically clear after they have exceeded your max logs limit",leading:t.createElement(c.Icon,{source:m.Clear}),trailing:t.createElement(X,{value:e.getBoolean("_nodelete_autoClear",!1),onValueChange:()=>{try{e.toggle("_nodelete_autoClear",!1),e.getBoolean("_nodelete_autoClear",!1)?$("_nodelete","autoClear",!0):$("_nodelete","autoClear",!1),h.open({content:`Logs auto-clearing has been set to: ${O("_nodelete","autoClear",!1)}.`,source:m.Settings.Toasts.Settings})}catch(o){console.log("[ NoDelete Toggle Error ]",o),h.open({content:"An error has occurred. Check debug logs for more info.",source:m.Failed})}}})}))),commands:Re})}};Ve(yt);

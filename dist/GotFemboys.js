function q(e){window.enmity.plugins.registerPlugin(e)}const u=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const y=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const f=window.enmity.modules.common.Storage,v=window.enmity.modules.common.Toasts,$=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const p=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const J=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const N=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const K=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const Q=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const g=o.Text;o.TextInput,o.TouchableHighlight;const w=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const b=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const x=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const l=o.FormRow,F=o.FormSection;o.FormSelect,o.FormSubLabel;const Z=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const _={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function M(...e){return window.enmity.modules.bulk(...e)}function A(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const U=e=>{let t=0;for(let r in e)t++;return t};function a(e){return window.enmity.assets.getIDByName(e)}const d={Debug:a("debug"),Retry:a("ic_message_retry"),Failed:a("Small"),Cancel:a("ic_megaphone_nsfw_16px"),Add:a("add_white"),Delete:a("ic_message_delete"),Clear:a("ic_clear_all_24px"),Pencil:a("ic_pencil_24px"),Success:a("ic_selection_checked_24px"),Copy:a("toast_copy_link"),Open:a("ic_leave_stage"),Clipboard:a("pending-alert"),Initial:a("coffee"),Debug_Command:{Sent:a("ic_application_command_24px"),Clock:a("clock")},Settings:{Toasts:{Context:a("toast_image_saved"),Settings:a("ic_selection_checked_24px")},Self:a("friends_toast_icon"),Share:a("share"),Robot:a("ic_robot_24px"),Commands:a("ic_profile_badge_bot_commands"),Debug:a("ic_rulebook_16px")}},P=e=>{v.open({content:`Copied ${e} to clipboard.`,source:d.Clipboard})},O=e=>{let t=e.split(`
`).map(r=>{if(r!="")return`"${r.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[U(t)]=`${t[U(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function ee(){try{let e=await f.getItem("device_list");if(e)return JSON.parse(e);let t=(await p.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,r=O(t);await f.setItem("device_list",r);let i=await f.getItem("device_list");return JSON.parse(i)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function te(e,t,r){let i=await ee();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${r.split("-")[1]}
> **Discord Build:** ${y.InfoDictionaryManager.Version} (${y.InfoDictionaryManager.Build})
> **Software Version:** ${y.DCDDeviceManager.systemVersion}
> **Device:** ${i[y.DCDDeviceManager.device]}`}const{native:h}=window.enmity;function ne(){h.reload()}h.version,h.build,h.device,h.version;const oe=A("transitionToGuild");async function ie({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,r=await(await p.get(t)).text;let i=r.match(/\d\.\d\.\d+/g),s=r.match(/patch\-\d\.\d\.\d+/g);return!i||!s?k(e.name,e.version):(i=i[0],s=s[0],i!=e.version?C(t,i,s.split("-")[1],e,!1):s!=e.build?C(t,i,s.split("-")[1],e,!0):k(e.name,e.version))}const C=(e,t,r,i,s)=>{const m=s?r:t;$.show({title:"Update found",body:`A newer ${s?"build":"version"} is available for ${i.name}. ${s?`
The version will remain at ${t}, but the build will update to ${r}.`:""}
Would you like to install ${s?`build \`${r}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>re(e,m,i,s)})},k=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),v.open({content:`${e} is on latest version (${t})`,source:d.Success})};async function re(e,t,r,i){window.enmity.plugins.installPlugin(e,({data:s})=>{s=="installed_plugin"||s=="overridden_plugin"?$.show({title:`Updated ${r.name}`,body:`Successfully updated to ${i?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ne()}}):$.show({title:"Error",body:`Something went wrong while updating ${r.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{oe.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${r.name}%20Update%20Error%3A%20${i?`b${t}`:`v${t}`}`)}})})}const S=window.enmity.modules.common.Components.General.Animated,[E,se]=M(_.byProps("transitionToGuild"),_.byProps("setString"));var ae=({manifest:e})=>{const t=N.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25,fontFamily:u.Fonts.DISPLAY_NORMAL},header:{color:u.ThemeColorMap.HEADER_PRIMARY,fontFamily:u.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:u.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),r=n.useRef(new S.Value(1)).current,i=()=>{S.spring(r,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},s=()=>{S.spring(r,{toValue:1,duration:250,useNativeDriver:!0}).start()},m=()=>{E.openURL("https://spin.rip/")},D={transform:[{scale:r}]};return n.createElement(n.Fragment,null,n.createElement(b,{style:t.container},n.createElement(w,{onPress:m,onPressIn:i,onPressOut:s},n.createElement(S.View,{style:[D]},n.createElement(K,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(b,{style:t.text_container},n.createElement(w,{onPress:()=>{E.openURL(e.sourceUrl)}},n.createElement(g,{style:[t.main_text,t.header]},e.name," ")),n.createElement(b,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(w,{onPress:()=>{E.openURL("https://spin.rip/")}},n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(b,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(w,{onPress:()=>{E.openURL("https://github.com/acquitelol/")}},n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},"Rosie<3"))),n.createElement(b,null,n.createElement(w,{style:{flexDirection:"row"},onPress:()=>{se.setString(`**${e.name}** v${e.version}`),P("plugin name and version")}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[le,V]=M(_.byProps("transitionToGuild"),_.byProps("setString"));var me=({manifest:e,settings:t,hasToasts:r,children:i,commands:s})=>{const m=N.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:u.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:u.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[D,W]=n.useState(),[R,X]=n.useState();return n.createElement(n.Fragment,null,n.createElement(Q,{onTouchStart:c=>{W(c.nativeEvent.pageX),X(c.nativeEvent.pageY)},onTouchEnd:c=>{D-c.nativeEvent.pageX<-100&&R-c.nativeEvent.pageY<40&&R-c.nativeEvent.pageY>-40&&J.pop()}},n.createElement(ae,{manifest:e}),i,s&&n.createElement(F,{title:"Plugin Commands"},s.map(c=>n.createElement(l,{label:`/${c.name}`,subLabel:c.description,leading:n.createElement(l.Icon,{style:m.icon,source:d.Settings.Commands}),trailing:l.Arrow,onPress:function(){V.setString(`/${c.name}`),P(`the command ${c.name}`)}}))),n.createElement(F,{title:"Utility"},r&&n.createElement(n.Fragment,null,n.createElement(l,{label:"Initialization Toasts",leading:n.createElement(l.Icon,{style:m.icon,source:d.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(Z,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),v.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:d.Success})}})}),n.createElement(x,null)),n.createElement(l,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(l.Icon,{style:m.icon,source:d.Settings.Debug}),trailing:l.Arrow,onPress:async function(){V.setString(await te(e.name,e.version,e.build)),P("plugin debug information")}}),n.createElement(x,null),n.createElement(l,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(l.Icon,{style:m.icon,source:d.Delete}),trailing:l.Arrow,onPress:async function(){await f.removeItem("device_list"),v.open({content:"Cleared device list storage.",source:d.Success})}})),n.createElement(F,{title:"Source"},n.createElement(l,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(l.Icon,{style:m.icon,source:d.Copy}),trailing:l.Arrow,onPress:()=>{ie({manifest:e})}}),n.createElement(x,null),n.createElement(l,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(l.Icon,{style:m.icon,source:d.Open}),trailing:l.Arrow,onPress:()=>{le.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(l,{style:m.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))},ce="GotFemboys",de="1.0.0",ue="patch-1.0.6",ge="Get a post of a femboy from r/femboy or r/femboys",we=[{name:"spin",id:"308440976723148800"}],be="#ff0069",he="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/GotFemboys.js",T={name:ce,version:de,build:ue,description:ge,authors:we,color:be,sourceUrl:he};function G(e,t,r,i){window.enmity.clyde.sendReply(e,t,r,i)}var Y;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Y||(Y={}));var I;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(I||(I={}));var L;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(L||(L={}));var j;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(j||(j={}));var B;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(B||(B={}));var z;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(z||(z={}));const ye={id:"femboy-command",name:"femboy",displayName:"femboy",description:"Get an image of a femboy",displayDescription:"Get an image of a femboy",type:I.Chat,inputType:L.BuiltInText,options:[{name:"whisper",displayName:"whisper",description:"Only you can see the result",displayDescription:"Only you can see the result",type:B.Boolean,required:!1}],execute:async function(e,t){const r=e[e.findIndex(i=>i.name==="whisper")];try{let i=await p.get("https://www.reddit.com/r/femboy.json");i=i.body?.data?.children?.[Math.floor(Math.random()*i.body?.data?.children?.length)]?.data;const s={type:"rich",title:i?.title,url:`https://reddit.com${i?.permalink}`,image:{proxy_url:i?.url_overridden_by_dest??i?.url,url:i?.url_overridden_by_dest??i?.url,width:i?.preview?.images?.[0]?.source?.width,height:i?.preview?.images?.[0]?.source?.height},footer:{text:`Posted by u/${i?.author} in r/femboy`},color:"0xff0069"};if(t?.guild?.id=="950850315601711176"&&r?.value===!1&&(r.value=!0),r?.value??!0){G(t?.channel.id??"0",{content:t?.guild?.id=="950850315601711176"?"i do not recommend sending femboy images here, most of them are too revealing - spin":"",embeds:[s]});return}else return{content:i?.url_overridden_by_dest??i?.url}}catch(i){console.log("[ GotFemboys Error ]",i),G(t?.channel.id??"0","An error occured while fetching and returning the femboy image. Check debug logs for more info.")}}},H=[ye],fe={...T,onStart(){this.commands=H},onStop(){this.commands=[]},patches:[],getSettingsPanel({settings:e}){return n.createElement(me,{manifest:T,settings:e,hasToasts:!1,commands:H})}};q(fe);

function J(e){window.enmity.plugins.registerPlugin(e)}var K="CustomSlowmode",Q="1.0.0",Z="patch-1.0.2",ee="Add custom values to the slowmode slider or remove values that you do not want!",te=[{name:"spin",id:"308440976723148800"}],ne="#ff0069",oe="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/CustomSlowmode.js",R={name:K,version:Q,build:Z,description:ee,authors:te,color:ne,sourceUrl:oe},T;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(T||(T={}));var S;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(S||(S={}));var b;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(b||(b={}));var C;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(C||(C={}));var E;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(E||(E={}));var O;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(O||(O={}));const r=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const L=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const $=window.enmity.modules.common.Storage,x=window.enmity.modules.common.Toasts,U=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const k=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const se=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const A=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function w(e,t,s,l){window.enmity.clyde.sendReply(e,t,s,l)}function F(e,t,s){window.enmity.settings.set(e,t,s)}function W(e,t,s){return window.enmity.settings.get(e,t,s)}const le={id:"add-slowmode-value",name:"slowmode add",displayName:"slowmode add",description:"Add a value to the slowmode list",displayDescription:"Add a value to the slowmode list",type:S.Chat,inputType:b.BuiltInText,options:[{name:"seconds",displayName:"seconds",description:"The new value (in seconds) that you want to add",displayDescription:"The new value (in seconds) that you want to add",type:E.Integer,required:!0}],execute:async function(e,t){var s,l,i,a;const c=parseInt(e[e.findIndex(u=>u.name==="seconds")].value);try{if(r.SLOWMODE_VALUES.includes(c)){w((s=t==null?void 0:t.channel.id)!=null?s:"0",`The value \`${c}\` already exists.`);return}else if(c<1){w((l=t==null?void 0:t.channel.id)!=null?l:"0",`The value \`${c}\` must be greater than 0.`);return}r.SLOWMODE_VALUES.push(c),r.SLOWMODE_VALUES.sort((u,h)=>u-h),w((i=t==null?void 0:t.channel.id)!=null?i:"0",`The value \`${c}\` has been added.`),F("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES)}catch(u){console.log("[ addSlowmodeValue Error ]",u),w((a=t==null?void 0:t.channel.id)!=null?a:"0","An error occured while adding a slowmode value. Check debug logs for more info.")}}},ie={id:"list-slowmode-values",name:"slowmode list",displayName:"slowmode list",description:"List the values that are currently in the slowmode list",displayDescription:"List the values that are currently in the slowmode list",type:S.Chat,inputType:b.BuiltInText,options:[{name:"whisper",displayName:"whisper",description:"Only you can see the response",displayDescription:"Only you can see the response",type:E.Boolean,required:!1}],execute:async function(e,t){var s,l,i,a,c;const u=e[e.findIndex(h=>h.name==="whisper")];try{const h={type:"rich",title:"Slowmode Values",description:((s=r.SLOWMODE_VALUES)==null?void 0:s.length)>0?r.SLOWMODE_VALUES.map(y=>`${y}s (${Math.floor(y/60)}m)`).join(`
`):"No values found",footer:{text:"Not every value will work. This is a limitation set by Discord."},color:"0xff0069"};if((l=u==null?void 0:u.value)==null||l){w((i=t==null?void 0:t.channel.id)!=null?i:"0",{embeds:[h]});return}else return{content:((a=r.SLOWMODE_VALUES)==null?void 0:a.length)>0?r.SLOWMODE_VALUES.map(y=>`${y}s (${Math.floor(y/60)}m)`).join(`
`):"No values found"}}catch(h){console.log("[ listSlowmodeValues Error ]",h),w((c=t==null?void 0:t.channel.id)!=null?c:"0","An error occured while fetching and listing the slowmode values. Check debug logs for more info.")}}},ae={id:"remove-slowmode-value",name:"slowmode remove",displayName:"slowmode remove",description:"Remove a value to the slowmode list",displayDescription:"Remove a value to the slowmode list",type:S.Chat,inputType:b.BuiltInText,options:[{name:"value",displayName:"value",description:"The value that you want to remove",displayDescription:"The value that you want to remove",type:E.Integer,required:!0}],execute:async function(e,t){var s,l,i;const a=parseInt(e[e.findIndex(c=>c.name==="value")].value);try{if(!r.SLOWMODE_VALUES.includes(a)){w((s=t==null?void 0:t.channel.id)!=null?s:"0",`The value \`${a}\` does not exist.`);return}r.SLOWMODE_VALUES.splice(r.SLOWMODE_VALUES.indexOf(a),1),r.SLOWMODE_VALUES.sort((c,u)=>c-u),F("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES),w((l=t==null?void 0:t.channel.id)!=null?l:"0",`The value \`${a}\` has been removed.`)}catch(c){console.log("[ removeSlowmodeValue Error ]",c),w((i=t==null?void 0:t.channel.id)!=null?i:"0","An error occured while removing a slowmode value. Check debug logs for more info.")}}},re={id:"reset-slowmode-values",name:"slowmode reset",displayName:"slowmode reset",description:"Reset the slowmode values to Discord's default values",displayDescription:"Reset the slowmode values to Discord's default values",type:S.Chat,inputType:b.BuiltInText,execute:async function(e,t){var s,l,i;try{const a=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600];if(r.SLOWMODE_VALUES=a,F("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES),r.SLOWMODE_VALUES===a&&W("_customSlowmode","slowmodeValues",null)===a){w((s=t==null?void 0:t.channel.id)!=null?s:"0","Slowmode values have been reset to Discord's default values.");return}else{w((l=t==null?void 0:t.channel.id)!=null?l:"0","An error occured while resetting the slowmode values.");return}}catch(a){console.log("[ resetSlowmodeValues Error ]",a),w((i=t==null?void 0:t.channel.id)!=null?i:"0","An error occured while resetting the slowmode values. Check debug logs for more info.")}}},G=[le,ae,ie,re],{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const ce=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const me=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const f=o.Text;o.TextInput,o.TouchableHighlight;const _=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const p=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const P=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const m=o.FormRow,B=o.FormSection;o.FormSelect,o.FormSubLabel;const de=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const V={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function Y(...e){return window.enmity.modules.bulk(...e)}function ue(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const j=e=>{let t=0;for(let s in e)t++;return t},we=e=>{let t=e.split(`
`).map(s=>{if(s!="")return`"${s.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[j(t)]=`${t[j(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function ge(){try{let e=await $.getItem("device_list");if(e)return JSON.parse(e);let t=(await k.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,s=we(t);await $.setItem("device_list",s);let l=await $.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function he(e,t,s){let l=await ge();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${s.split("-")[1]}
> **Discord Build:** ${L.InfoDictionaryManager.Version} (${L.InfoDictionaryManager.Build})
> **Software Version:** ${L.DCDDeviceManager.systemVersion}
> **Device:** ${l[L.DCDDeviceManager.device]}`}function d(e){return window.enmity.assets.getIDByName(e)}const v={Debug:d("debug"),Retry:d("ic_message_retry"),Failed:d("Small"),Cancel:d("ic_megaphone_nsfw_16px"),Add:d("add_white"),Delete:d("ic_message_delete"),Clear:d("ic_clear_all_24px"),Pencil:d("ic_pencil_24px"),Copy:d("toast_copy_link"),Open:d("ic_leave_stage"),Clipboard:d("pending-alert"),Debug_Command:{Sent:d("ic_application_command_24px"),Clock:d("clock")},Settings:{Toasts:{Context:d("toast_image_saved"),Settings:d("ic_selection_checked_24px")},Share:d("share"),Commands:d("ic_profile_badge_bot_commands"),Debug:d("ic_rulebook_16px")}},N=e=>{x.open({content:`Copied ${e} to clipboard.`,source:v.Clipboard})},{native:D}=window.enmity;function ve(){D.reload()}D.version,D.build,D.device,D.version;const ye=ue("transitionToGuild");async function fe({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,s=await(await k.get(t)).text;let l=s.match(/\d\.\d\.\d+/g),i=s.match(/patch\-\d\.\d\.\d+/g);return!l||!i?q(e.name,e.version):(l=l[0],i=i[0],l!=e.version?z(t,l,i.split("-")[1],e,!1):i!=e.build?z(t,l,i.split("-")[1],e,!0):q(e.name,e.version))}const z=(e,t,s,l,i)=>{const a=i?s:t;U.show({title:"Update found",body:`A newer ${i?"build":"version"} is available for ${l.name}. ${i?`
The version will remain at ${t}, but the build will update to ${s}.`:""}
Would you like to install ${i?`build \`${s}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>Se(e,a,l,i)})},q=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),x.open({content:`${e} is on latest version (${t})`,source:v.Settings.Toasts.Settings})};async function Se(e,t,s,l){window.enmity.plugins.installPlugin(e,({data:i})=>{i=="installed_plugin"||i=="overridden_plugin"?U.show({title:`Updated ${s.name}`,body:`Successfully updated to ${l?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ve()}}):U.show({title:"Error",body:`Something went wrong while updating ${s.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{ye.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${s.name}%20Update%20Error%3A%20${l?`b${t}`:`v${t}`}`)}})})}const I=window.enmity.modules.common.Components.General.Animated,[M,be]=Y(V.byProps("transitionToGuild"),V.byProps("setString"));var Ee=({manifest:e})=>{const t=A.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:r.ThemeColorMap.HEADER_PRIMARY,fontFamily:r.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:r.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),s=n.useRef(new I.Value(1)).current,l=()=>{I.spring(s,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},i=()=>{I.spring(s,{toValue:1,duration:250,useNativeDriver:!0}).start()},a=()=>{M.openURL("https://spin.rip/")},c={transform:[{scale:s}]};return n.createElement(n.Fragment,null,n.createElement(p,{style:t.container},n.createElement(_,{onPress:a,onPressIn:l,onPressOut:i},n.createElement(I.View,{style:[c]},n.createElement(ce,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(p,{style:t.text_container},n.createElement(_,{onPress:()=>{M.openURL(e.sourceUrl)}},n.createElement(f,{style:[t.main_text,t.header]},e.name," ")),n.createElement(p,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(_,{onPress:()=>{M.openURL("https://spin.rip/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(p,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(_,{onPress:()=>{M.openURL("https://github.com/acquitelol/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(p,null,n.createElement(_,{style:{flexDirection:"row"},onPress:()=>{be.setString(`**${e.name}** v${e.version}`),N("plugin name and version")}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[_e,H]=Y(V.byProps("transitionToGuild"),V.byProps("setString"));var pe=({manifest:e,settings:t,hasToasts:s,section:l,commands:i})=>{const a=A.createThemedStyleSheet({icon:{color:r.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:r.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[c,u]=n.useState(),[h,y]=n.useState();return n.createElement(n.Fragment,null,n.createElement(me,{onTouchStart:g=>{u(g.nativeEvent.pageX),y(g.nativeEvent.pageY)},onTouchEnd:g=>{c-g.nativeEvent.pageX<-100&&h-g.nativeEvent.pageY<40&&h-g.nativeEvent.pageY>-40&&se.pop()}},n.createElement(Ee,{manifest:e}),l,i&&n.createElement(B,{title:"Plugin Commands"},i.map(g=>n.createElement(m,{label:`/${g.name}`,subLabel:g.description,leading:n.createElement(m.Icon,{style:a.icon,source:v.Settings.Commands}),trailing:m.Arrow,onPress:function(){H.setString(`/${g.name}`),N(`the command ${g.name}`)}}))),n.createElement(B,{title:"Utility"},s&&n.createElement(n.Fragment,null,n.createElement(m,{label:"Initialization Toasts",leading:n.createElement(m.Icon,{style:a.icon,source:v.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(de,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),x.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:v.Settings.Toasts.Settings})}})}),n.createElement(P,null)),n.createElement(m,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(m.Icon,{style:a.icon,source:v.Settings.Debug}),trailing:m.Arrow,onPress:async function(){H.setString(await he(e.name,e.version,e.build)),N("plugin debug information")}}),n.createElement(P,null),n.createElement(m,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(m.Icon,{style:a.icon,source:v.Delete}),trailing:m.Arrow,onPress:async function(){await $.removeItem("device_list"),x.open({content:"Cleared device list storage.",source:v.Settings.Toasts.Settings})}})),n.createElement(B,{title:"Source"},n.createElement(m,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(m.Icon,{style:a.icon,source:v.Copy}),trailing:m.Arrow,onPress:()=>{fe({manifest:e})}}),n.createElement(P,null),n.createElement(m,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(m.Icon,{style:a.icon,source:v.Open}),trailing:m.Arrow,onPress:()=>{_e.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(m,{label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const X=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600],De={...R,onStart(){this.commands=G,r.SLOWMODE_VALUES=W("_customSlowmode","slowmodeValues",X)},onStop(){this.commands=[],r.SLOWMODE_VALUES=X},patches:[],getSettingsPanel({settings:e}){return n.createElement(pe,{manifest:R,settings:e,hasToasts:!1,section:null,commands:G})}};J(De);

function K(e){window.enmity.plugins.registerPlugin(e)}var Q="CustomSlowmode",Z="1.0.0",ee="patch-1.0.4",te="Add custom values to the slowmode slider or remove values that you do not want!",ne=[{name:"spin",id:"308440976723148800"}],oe="#ff0069",se="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/CustomSlowmode.js",P={name:Q,version:Z,build:ee,description:te,authors:ne,color:oe,sourceUrl:se},C;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(C||(C={}));var b;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(b||(b={}));var S;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(S||(S={}));var N;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(N||(N={}));var p;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(p||(p={}));var O;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(O||(O={}));const r=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const _=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const E=window.enmity.modules.common.Storage,x=window.enmity.modules.common.Toasts,I=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const k=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const le=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const A=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function w(e,t,o,l){window.enmity.clyde.sendReply(e,t,o,l)}function U(e,t,o){window.enmity.settings.set(e,t,o)}function W(e,t,o){return window.enmity.settings.get(e,t,o)}const ie={id:"add-slowmode-value",name:"slowmode add",displayName:"slowmode add",description:"Add a value to the slowmode list",displayDescription:"Add a value to the slowmode list",type:b.Chat,inputType:S.BuiltInText,options:[{name:"seconds",displayName:"seconds",description:"The new value (in seconds) that you want to add",displayDescription:"The new value (in seconds) that you want to add",type:p.Integer,required:!0}],execute:async function(e,t){var o,l,i,a;const m=parseInt(e[e.findIndex(u=>u.name==="seconds")].value);try{if(r.SLOWMODE_VALUES.includes(m)){w((o=t==null?void 0:t.channel.id)!=null?o:"0",`The value \`${m}\` already exists.`);return}else if(m<1){w((l=t==null?void 0:t.channel.id)!=null?l:"0",`The value \`${m}\` must be greater than 0.`);return}r.SLOWMODE_VALUES.push(m),r.SLOWMODE_VALUES.sort((u,h)=>u-h),w((i=t==null?void 0:t.channel.id)!=null?i:"0",`The value \`${m}\` has been added.`),U("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES)}catch(u){console.log("[ addSlowmodeValue Error ]",u),w((a=t==null?void 0:t.channel.id)!=null?a:"0","An error occured while adding a slowmode value. Check debug logs for more info.")}}},ae={id:"list-slowmode-values",name:"slowmode list",displayName:"slowmode list",description:"List the values that are currently in the slowmode list",displayDescription:"List the values that are currently in the slowmode list",type:b.Chat,inputType:S.BuiltInText,options:[{name:"whisper",displayName:"whisper",description:"Only you can see the response",displayDescription:"Only you can see the response",type:p.Boolean,required:!1}],execute:async function(e,t){var o,l,i,a,m;const u=e[e.findIndex(h=>h.name==="whisper")];try{const h={type:"rich",title:"Slowmode Values",description:((o=r.SLOWMODE_VALUES)==null?void 0:o.length)>0?r.SLOWMODE_VALUES.map(y=>`${y}s (${Math.floor(y/60)}m)`).join(`
`):"No values found",footer:{text:"Not every value will work. This is a limitation set by Discord."},color:"0xff0069"};if((l=u==null?void 0:u.value)==null||l){w((i=t==null?void 0:t.channel.id)!=null?i:"0",{embeds:[h]});return}else return{content:((a=r.SLOWMODE_VALUES)==null?void 0:a.length)>0?r.SLOWMODE_VALUES.map(y=>`${y}s (${Math.floor(y/60)}m)`).join(`
`):"No values found"}}catch(h){console.log("[ listSlowmodeValues Error ]",h),w((m=t==null?void 0:t.channel.id)!=null?m:"0","An error occured while fetching and listing the slowmode values. Check debug logs for more info.")}}},re={id:"remove-slowmode-value",name:"slowmode remove",displayName:"slowmode remove",description:"Remove a value to the slowmode list",displayDescription:"Remove a value to the slowmode list",type:b.Chat,inputType:S.BuiltInText,options:[{name:"value",displayName:"value",description:"The value that you want to remove",displayDescription:"The value that you want to remove",type:p.Integer,required:!0}],execute:async function(e,t){var o,l,i;const a=parseInt(e[e.findIndex(m=>m.name==="value")].value);try{if(!r.SLOWMODE_VALUES.includes(a)){w((o=t==null?void 0:t.channel.id)!=null?o:"0",`The value \`${a}\` does not exist.`);return}r.SLOWMODE_VALUES.splice(r.SLOWMODE_VALUES.indexOf(a),1),r.SLOWMODE_VALUES.sort((m,u)=>m-u),U("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES),w((l=t==null?void 0:t.channel.id)!=null?l:"0",`The value \`${a}\` has been removed.`)}catch(m){console.log("[ removeSlowmodeValue Error ]",m),w((i=t==null?void 0:t.channel.id)!=null?i:"0","An error occured while removing a slowmode value. Check debug logs for more info.")}}},ce={id:"reset-slowmode-values",name:"slowmode reset",displayName:"slowmode reset",description:"Reset the slowmode values to Discord's default values",displayDescription:"Reset the slowmode values to Discord's default values",type:b.Chat,inputType:S.BuiltInText,execute:async function(e,t){var o,l,i;try{const a=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600];if(r.SLOWMODE_VALUES=a,U("_customSlowmode","slowmodeValues",r.SLOWMODE_VALUES),r.SLOWMODE_VALUES===a&&W("_customSlowmode","slowmodeValues",null)===a){w((o=t==null?void 0:t.channel.id)!=null?o:"0","Slowmode values have been reset to Discord's default values.");return}else{w((l=t==null?void 0:t.channel.id)!=null?l:"0","An error occured while resetting the slowmode values.");return}}catch(a){console.log("[ resetSlowmodeValues Error ]",a),w((i=t==null?void 0:t.channel.id)!=null?i:"0","An error occured while resetting the slowmode values. Check debug logs for more info.")}}},G=[ie,re,ae,ce],{components:s}=window.enmity;s.Alert,s.Button,s.FlatList;const me=s.Image;s.ImageBackground,s.KeyboardAvoidingView,s.Modal,s.Pressable,s.RefreshControl;const de=s.ScrollView;s.SectionList,s.StatusBar,s.StyleSheet,s.Switch;const f=s.Text;s.TextInput,s.TouchableHighlight;const D=s.TouchableOpacity;s.TouchableWithoutFeedback,s.Touchable;const L=s.View;s.VirtualizedList,s.Form,s.FormArrow,s.FormCTA,s.FormCTAButton,s.FormCardSection,s.FormCheckbox;const B=s.FormDivider;s.FormHint,s.FormIcon,s.FormInput,s.FormLabel,s.FormRadio;const d=s.FormRow,T=s.FormSection;s.FormSelect,s.FormSubLabel;const ue=s.FormSwitch;s.FormTernaryCheckBox,s.FormText,s.FormTextColors,s.FormTextSizes;const V={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function Y(...e){return window.enmity.modules.bulk(...e)}function we(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const j=e=>{let t=0;for(let o in e)t++;return t},ge=e=>{let t=e.split(`
`).map(o=>{if(o!="")return`"${o.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[j(t)]=`${t[j(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function z(){try{let e=await E.getItem("device_list");if(e)return JSON.parse(e);let t=(await k.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,o=ge(t);await E.setItem("device_list",o);let l=await E.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function he(e,t,o){let l=await z();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${o.split("-")[1]}
> **Discord Build:** ${_.InfoDictionaryManager.Version} (${_.InfoDictionaryManager.Build})
> **Software Version:** ${_.DCDDeviceManager.systemVersion}
> **Device:** ${l[_.DCDDeviceManager.device]}`}function c(e){return window.enmity.assets.getIDByName(e)}const v={Debug:c("debug"),Retry:c("ic_message_retry"),Failed:c("Small"),Cancel:c("ic_megaphone_nsfw_16px"),Add:c("add_white"),Delete:c("ic_message_delete"),Clear:c("ic_clear_all_24px"),Pencil:c("ic_pencil_24px"),Copy:c("toast_copy_link"),Open:c("ic_leave_stage"),Clipboard:c("pending-alert"),Debug_Command:{Sent:c("ic_application_command_24px"),Clock:c("clock")},Settings:{Toasts:{Context:c("toast_image_saved"),Settings:c("ic_selection_checked_24px")},Self:c("friends_toast_icon"),Share:c("share"),Robot:c("ic_robot_24px"),Commands:c("ic_profile_badge_bot_commands"),Debug:c("ic_rulebook_16px")}},R=e=>{x.open({content:`Copied ${e} to clipboard.`,source:v.Clipboard})},{native:$}=window.enmity;function ve(){$.reload()}$.version,$.build,$.device,$.version;const ye=we("transitionToGuild");async function fe({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,o=await(await k.get(t)).text;let l=o.match(/\d\.\d\.\d+/g),i=o.match(/patch\-\d\.\d\.\d+/g);return!l||!i?H(e.name,e.version):(l=l[0],i=i[0],l!=e.version?q(t,l,i.split("-")[1],e,!1):i!=e.build?q(t,l,i.split("-")[1],e,!0):H(e.name,e.version))}const q=(e,t,o,l,i)=>{const a=i?o:t;I.show({title:"Update found",body:`A newer ${i?"build":"version"} is available for ${l.name}. ${i?`
The version will remain at ${t}, but the build will update to ${o}.`:""}
Would you like to install ${i?`build \`${o}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>be(e,a,l,i)})},H=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),x.open({content:`${e} is on latest version (${t})`,source:v.Settings.Toasts.Settings})};async function be(e,t,o,l){window.enmity.plugins.installPlugin(e,({data:i})=>{i=="installed_plugin"||i=="overridden_plugin"?I.show({title:`Updated ${o.name}`,body:`Successfully updated to ${l?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ve()}}):I.show({title:"Error",body:`Something went wrong while updating ${o.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{ye.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${o.name}%20Update%20Error%3A%20${l?`b${t}`:`v${t}`}`)}})})}async function Se(e){let t=_.DCDDeviceManager.device,o=await z();t.includes("iPhone")&&(t=t.replace("iPhone",""),t=t.replace(",","."),(parseFloat(t)<10.6&&parseFloat(t)!=10.3||parseFloat(t)==14.6||parseFloat(t)==12.8)&&E.getItem(`__${e.name}_incompatible_dialog__`).then(l=>{l!=null||I.show({title:"Incompatible iPhone",body:`Please note that you're on an${o[_.DCDDeviceManager.device]}.
Some features in ${e.name} may behave in an unexpected manner.`,confirmText:"Don't show again",cancelText:"Close",onConfirm:()=>E.setItem(`__${e.name}_incompatible_dialog__`,"true")})}))}const M=window.enmity.modules.common.Components.General.Animated,[F,_e]=Y(V.byProps("transitionToGuild"),V.byProps("setString"));var Ee=({manifest:e})=>{const t=A.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:r.ThemeColorMap.HEADER_PRIMARY,fontFamily:r.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:r.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),o=n.useRef(new M.Value(1)).current,l=()=>{M.spring(o,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},i=()=>{M.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start()},a=()=>{F.openURL("https://spin.rip/")},m={transform:[{scale:o}]};return n.createElement(n.Fragment,null,n.createElement(L,{style:t.container},n.createElement(D,{onPress:a,onPressIn:l,onPressOut:i},n.createElement(M.View,{style:[m]},n.createElement(me,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(L,{style:t.text_container},n.createElement(D,{onPress:()=>{F.openURL(e.sourceUrl)}},n.createElement(f,{style:[t.main_text,t.header]},e.name," ")),n.createElement(L,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(D,{onPress:()=>{F.openURL("https://spin.rip/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(L,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(D,{onPress:()=>{F.openURL("https://github.com/acquitelol/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(L,null,n.createElement(D,{style:{flexDirection:"row"},onPress:()=>{_e.setString(`**${e.name}** v${e.version}`),R("plugin name and version")}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:r.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[pe,X]=Y(V.byProps("transitionToGuild"),V.byProps("setString"));var De=({manifest:e,settings:t,hasToasts:o,section:l,commands:i})=>{const a=A.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:r.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:r.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[m,u]=n.useState(),[h,y]=n.useState();return n.createElement(n.Fragment,null,n.createElement(de,{onTouchStart:g=>{u(g.nativeEvent.pageX),y(g.nativeEvent.pageY)},onTouchEnd:g=>{m-g.nativeEvent.pageX<-100&&h-g.nativeEvent.pageY<40&&h-g.nativeEvent.pageY>-40&&le.pop()}},n.createElement(Ee,{manifest:e}),l,i&&n.createElement(T,{title:"Plugin Commands"},i.map(g=>n.createElement(d,{label:`/${g.name}`,subLabel:g.description,leading:n.createElement(d.Icon,{style:a.icon,source:v.Settings.Commands}),trailing:d.Arrow,onPress:function(){X.setString(`/${g.name}`),R(`the command ${g.name}`)}}))),n.createElement(T,{title:"Utility"},o&&n.createElement(n.Fragment,null,n.createElement(d,{label:"Initialization Toasts",leading:n.createElement(d.Icon,{style:a.icon,source:v.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(ue,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),x.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:v.Settings.Toasts.Settings})}})}),n.createElement(B,null)),n.createElement(d,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(d.Icon,{style:a.icon,source:v.Settings.Debug}),trailing:d.Arrow,onPress:async function(){X.setString(await he(e.name,e.version,e.build)),R("plugin debug information")}}),n.createElement(B,null),n.createElement(d,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(d.Icon,{style:a.icon,source:v.Delete}),trailing:d.Arrow,onPress:async function(){await E.removeItem("device_list"),x.open({content:"Cleared device list storage.",source:v.Settings.Toasts.Settings})}})),n.createElement(T,{title:"Source"},n.createElement(d,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(d.Icon,{style:a.icon,source:v.Copy}),trailing:d.Arrow,onPress:()=>{fe({manifest:e})}}),n.createElement(B,null),n.createElement(d,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(d.Icon,{style:a.icon,source:v.Open}),trailing:d.Arrow,onPress:()=>{pe.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(d,{style:a.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const J=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600],Le={...P,onStart(){async function e(){await Se(P)}this.commands=G,r.SLOWMODE_VALUES=W("_customSlowmode","slowmodeValues",J),e()},onStop(){this.commands=[],r.SLOWMODE_VALUES=J},patches:[],getSettingsPanel({settings:e}){return n.createElement(De,{manifest:P,settings:e,hasToasts:!1,section:null,commands:G})}};K(Le);

function X(e){window.enmity.plugins.registerPlugin(e)}const D={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function N(...e){return window.enmity.modules.bulk(...e)}function f(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const u=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const L=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const g=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const w=window.enmity.modules.common.Storage,T=window.enmity.modules.common.Toasts,C=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const k=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const q=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const B=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function J(e){return window.enmity.patcher.create(e)}function l(e){return window.enmity.assets.getIDByName(e)}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const K=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const Q=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const p=o.Text;o.TextInput,o.TouchableHighlight;const _=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const v=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const A=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const m=o.FormRow,I=o.FormSection;o.FormSelect,o.FormSubLabel;const Z=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const U=e=>{let t=0;for(let a in e)t++;return t},ee=e=>{let t=e.split(`
`).map(a=>{if(a!="")return`"${a.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[U(t)]=`${t[U(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function V(){try{let e=await w.getItem("device_list");if(e)return JSON.parse(e);let t=(await k.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,a=ee(t);await w.setItem("device_list",a);let i=await w.getItem("device_list");return JSON.parse(i)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function te(e,t,a){let i=await V();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${a.split("-")[1]}
> **Discord Build:** ${g.InfoDictionaryManager.Version} (${g.InfoDictionaryManager.Build})
> **Software Version:** ${g.DCDDeviceManager.systemVersion}
> **Device:** ${i[g.DCDDeviceManager.device]}`}const d={Debug:l("debug"),Retry:l("ic_message_retry"),Failed:l("Small"),Cancel:l("ic_megaphone_nsfw_16px"),Add:l("add_white"),Delete:l("ic_message_delete"),Clear:l("ic_clear_all_24px"),Pencil:l("ic_pencil_24px"),Copy:l("toast_copy_link"),Open:l("ic_leave_stage"),Clipboard:l("pending-alert"),Debug_Command:{Sent:l("ic_application_command_24px"),Clock:l("clock")},Settings:{Toasts:{Context:l("toast_image_saved"),Settings:l("ic_selection_checked_24px")},Share:l("share"),Commands:l("ic_profile_badge_bot_commands"),Debug:l("ic_rulebook_16px")}},M=e=>{T.open({content:`Copied ${e} to clipboard.`,source:d.Clipboard})},{native:S}=window.enmity;function ne(){S.reload()}S.version,S.build,S.device,S.version;const oe=f("transitionToGuild");async function ie({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,a=await(await k.get(t)).text;let i=a.match(/\d\.\d\.\d+/g),s=a.match(/patch\-\d\.\d\.\d+/g);return!i||!s?Y(e.name,e.version):(i=i[0],s=s[0],i!=e.version?O(t,i,s.split("-")[1],e,!1):s!=e.build?O(t,i,s.split("-")[1],e,!0):Y(e.name,e.version))}const O=(e,t,a,i,s)=>{const r=s?a:t;C.show({title:"Update found",body:`A newer ${s?"build":"version"} is available for ${i.name}. ${s?`
The version will remain at ${t}, but the build will update to ${a}.`:""}
Would you like to install ${s?`build \`${a}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ae(e,r,i,s)})},Y=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),T.open({content:`${e} is on latest version (${t})`,source:d.Settings.Toasts.Settings})};async function ae(e,t,a,i){window.enmity.plugins.installPlugin(e,({data:s})=>{s=="installed_plugin"||s=="overridden_plugin"?C.show({title:`Updated ${a.name}`,body:`Successfully updated to ${i?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ne()}}):C.show({title:"Error",body:`Something went wrong while updating ${a.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{oe.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${a.name}%20Update%20Error%3A%20${i?`b${t}`:`v${t}`}`)}})})}async function se(e){let t=g.DCDDeviceManager.device,a=await V();t.includes("iPhone")&&(t=t.replace("iPhone",""),t=t.replace(",","."),(parseFloat(t)<10.6&&parseFloat(t)!=10.3||parseFloat(t)==14.6||parseFloat(t)==12.8)&&w.getItem(`__${e.name}_incompatible_dialog__`).then(i=>{i!=null||C.show({title:"Incompatible iPhone",body:`Please note that you're on an${a[g.DCDDeviceManager.device]}.
Some features in ${e.name} may behave in an unexpected manner.`,confirmText:"Don't show again",cancelText:"Close",onConfirm:()=>w.setItem(`__${e.name}_incompatible_dialog__`,"true")})}))}const x=window.enmity.modules.common.Components.General.Animated,[P,re]=N(D.byProps("transitionToGuild"),D.byProps("setString"));var le=({manifest:e})=>{const t=B.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:u.ThemeColorMap.HEADER_PRIMARY,fontFamily:u.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:u.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),a=n.useRef(new x.Value(1)).current,i=()=>{x.spring(a,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},s=()=>{x.spring(a,{toValue:1,duration:250,useNativeDriver:!0}).start()},r=()=>{P.openURL("https://spin.rip/")},y={transform:[{scale:a}]};return n.createElement(n.Fragment,null,n.createElement(v,{style:t.container},n.createElement(_,{onPress:r,onPressIn:i,onPressOut:s},n.createElement(x.View,{style:[y]},n.createElement(K,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(v,{style:t.text_container},n.createElement(_,{onPress:()=>{P.openURL(e.sourceUrl)}},n.createElement(p,{style:[t.main_text,t.header]},e.name," ")),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(p,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(_,{onPress:()=>{P.openURL("https://spin.rip/")}},n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(p,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(_,{onPress:()=>{P.openURL("https://github.com/acquitelol/")}},n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(v,null,n.createElement(_,{style:{flexDirection:"row"},onPress:()=>{re.setString(`**${e.name}** v${e.version}`),M("plugin name and version")}},n.createElement(p,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[me,z]=N(D.byProps("transitionToGuild"),D.byProps("setString"));var ce=({manifest:e,settings:t,hasToasts:a,section:i,commands:s})=>{const r=B.createThemedStyleSheet({icon:{color:u.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:u.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[y,h]=n.useState(),[E,$]=n.useState();return n.createElement(n.Fragment,null,n.createElement(Q,{onTouchStart:c=>{h(c.nativeEvent.pageX),$(c.nativeEvent.pageY)},onTouchEnd:c=>{y-c.nativeEvent.pageX<-100&&E-c.nativeEvent.pageY<40&&E-c.nativeEvent.pageY>-40&&q.pop()}},n.createElement(le,{manifest:e}),i,s&&n.createElement(I,{title:"Plugin Commands"},s.map(c=>n.createElement(m,{label:`/${c.name}`,subLabel:c.description,leading:n.createElement(m.Icon,{style:r.icon,source:d.Settings.Commands}),trailing:m.Arrow,onPress:function(){z.setString(`/${c.name}`),M(`the command ${c.name}`)}}))),n.createElement(I,{title:"Utility"},a&&n.createElement(n.Fragment,null,n.createElement(m,{label:"Initialization Toasts",leading:n.createElement(m.Icon,{style:r.icon,source:d.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(Z,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),T.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:d.Settings.Toasts.Settings})}})}),n.createElement(A,null)),n.createElement(m,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(m.Icon,{style:r.icon,source:d.Settings.Debug}),trailing:m.Arrow,onPress:async function(){z.setString(await te(e.name,e.version,e.build)),M("plugin debug information")}}),n.createElement(A,null),n.createElement(m,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(m.Icon,{style:r.icon,source:d.Delete}),trailing:m.Arrow,onPress:async function(){await w.removeItem("device_list"),T.open({content:"Cleared device list storage.",source:d.Settings.Toasts.Settings})}})),n.createElement(I,{title:"Source"},n.createElement(m,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(m.Icon,{style:r.icon,source:d.Copy}),trailing:m.Arrow,onPress:()=>{ie({manifest:e})}}),n.createElement(A,null),n.createElement(m,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(m.Icon,{style:r.icon,source:d.Open}),trailing:m.Arrow,onPress:()=>{me.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(m,{label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))},de="MessageSpoofer",ue="1.1.8",pe="patch-1.0.10",ge="Change what people say.",we=[{name:"Marek (modified by spin)",id:"308440976723148800"}],ye="#ff0069",he="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/MessageSpoofer.js",R={name:de,version:ue,build:pe,description:ge,authors:we,color:ye,sourceUrl:he};const be=f("getMessage","getMessages"),fe=f("getChannel","getDMFromUserId"),F=J("message-spoofer"),G=f("openLazy"),_e=f("_currentDispatchActionType","_subscriptions","_waitQueue"),ve={...R,patches:[],onStart(){async function e(){await se(R)}let t=!1;F.before(G,"openLazy",(a,[i,s])=>{s==="MessageLongPressActionSheet"&&i.then(r=>{let y=r.default;return r.default=function({message:h,user:E,channel:$,canAddNewReactions:c},j){let b=y({message:h,user:E,channel:$,canAddNewReactions:c},j);if(b.props.children.props.children.props.children[1][0].key=="69")return b;let W=b.props.children.props.children.props.children[1][0].type,H=n.createElement(W,{key:"69",onPressRow:Se=>{G.hideActionSheet(),L.startEditMessage(`dirty-${$.id}`,h.id,h.content)},message:"Spoof edit",iconSource:l("ic_message_retry")});return b.props.children.props.children.props.children[1].unshift(H),b},r})}),F.before(L,"startEditMessage",(a,i,s)=>{i[0].startsWith("dirty-")?(i[0]=i[0].replace("dirty-",""),t=!0):t=!1}),F.before(L,"editMessage",(a,i,s)=>{if(t){const r=be.getMessage(i[0],i[1]);_e.dispatch({type:"MESSAGE_UPDATE",message:{...r,...i[2],edited_timestamp:r.editedTimestamp,mention_roles:r.mentionRoles,mention_everyone:r.mentionEveryone,member:r.author,guild_id:fe.getChannel(r.channel_id).guild_id},log_edit:!1}),i={}}}),e()},onStop(){F.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(ce,{manifest:R,settings:e,hasToasts:!1,section:null,commands:null})}};X(ve);

function G(e){window.enmity.plugins.registerPlugin(e)}const v={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function R(...e){return window.enmity.modules.bulk(...e)}function S(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const u=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const L=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const M=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const E=window.enmity.modules.common.Storage,_=window.enmity.modules.common.Toasts,T=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const N=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const W=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const k=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function H(e){return window.enmity.patcher.create(e)}function m(e){return window.enmity.assets.getIDByName(e)}const{components:o}=window.enmity;o.Alert;const X=o.Button;o.FlatList;const q=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const J=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const g=o.Text;o.TextInput,o.TouchableHighlight;const b=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const w=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const P=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const r=o.FormRow,A=o.FormSection;o.FormSelect,o.FormSubLabel;const K=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const U=e=>{let t=0;for(let i in e)t++;return t},Q=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[U(t)]=`${t[U(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function Z(){try{let e=await E.getItem("device_list");if(e)return JSON.parse(e);let t=(await N.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=Q(t);await E.setItem("device_list",i);let a=await E.getItem("device_list");return JSON.parse(a)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function ee(e,t){let i=await Z();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${M.DCDDeviceManager.systemVersion}
> **Device:** ${i[M.DCDDeviceManager.device]}`}const d={Debug:m("debug"),Retry:m("ic_message_retry"),Failed:m("Small"),Cancel:m("ic_megaphone_nsfw_16px"),Delete:m("ic_message_delete"),Copy:m("toast_copy_link"),Open:m("ic_leave_stage"),Clipboard:m("pending-alert"),Debug_Command:{Sent:m("ic_application_command_24px"),Clock:m("clock")},Settings:{Toasts:{Context:m("toast_image_saved"),Settings:m("ic_selection_checked_24px")},Debug:m("ic_rulebook_16px")}},I=e=>{_.open({content:`Copied ${e} to clipboard.`,source:d.Clipboard})},{native:f}=window.enmity;function te(){f.reload()}f.version,f.build,f.device,f.version;async function ne({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,i=await(await N.get(t)).text;let a=i.match(/\d\.\d\.\d+/g),s=i.match(/patch\-\d\.\d\.\d+/g);if(!(!a||!s))return a=a[0],s=s[0],a!=e.verson?B(t,a,s.split("-")[1],e,!1):s!=e.build?B(t,a,s.split("-")[1],e,!0):oe(e.name,e.verson)}const B=(e,t,i,a,s)=>{const c=s?i:t;T.show({title:"Update found",body:`A newer ${s?"build":"version"} is available for ${a.name}. ${s?`
The version will remain at ${t}, but the build will update to ${i}.`:""}
Would you like to install ${s?`build \`${i}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ie(e,c,s,a)})},oe=(e,t)=>{console.log(`[${e}] is on the latest version (${t})`),_.open({content:`${e} is on the latest version (${t})`,source:d.Settings.Toasts.Settings})};async function ie(e,t,i,a){window.enmity.plugins.installPlugin(e,({data:s})=>{console.log(`${a.name} Update Error`,s),s=="installed_plugin"||s=="overridden_plugin"?T.show({title:`Updated ${a.name}`,body:`Successfully updated to ${i?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Later",onConfirm:()=>{te()}}):T.show({title:"Error",body:`Something went wrong while updating ${a.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{T.close()},onCancel:()=>{Router.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${a.name}%20Update%20Error%3A%20${i?`b${version}`:`v${version}`}`)}})})}const D=window.enmity.modules.common.Components.General.Animated,[$,se]=R(v.byProps("transitionToGuild"),v.byProps("setString"));var ae=({manifest:e})=>{const t=k.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:u.ThemeColorMap.HEADER_PRIMARY,fontFamily:u.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:u.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new D.Value(1)).current,a=()=>{D.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},s=()=>{D.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},c=()=>{$.openURL("https://spin.rip/")},p={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(w,{style:t.container},n.createElement(b,{onPress:c,onPressIn:a,onPressOut:s},n.createElement(D.View,{style:[p]},n.createElement(q,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(w,{style:t.text_container},n.createElement(b,{onPress:()=>{$.openURL(e.sourceUrl)}},n.createElement(g,{style:[t.main_text,t.header]},e.name," ")),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(b,{onPress:()=>{$.openURL("https://spin.rip/")}},n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(b,{onPress:()=>{$.openURL("https://github.com/acquitelol/")}},n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(w,null,n.createElement(b,{style:{flexDirection:"row"},onPress:()=>{se.setString(`**${e.name}** v${e.version}`),I("plugin name and version")}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[re,V]=R(v.byProps("transitionToGuild"),v.byProps("setString"));var le=({manifest:e,settings:t,hasToasts:i,section:a,commands:s})=>{const c=k.createThemedStyleSheet({icon:{color:u.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:u.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[p,x]=n.useState(),[y,F]=n.useState();return n.createElement(n.Fragment,null,n.createElement(J,{onTouchStart:l=>{x(l.nativeEvent.pageX),F(l.nativeEvent.pageY)},onTouchEnd:l=>{p-l.nativeEvent.pageX<-100&&y-l.nativeEvent.pageY<40&&y-l.nativeEvent.pageY>-40&&W.pop()}},n.createElement(ae,{manifest:e}),a,s&&n.createElement(A,{title:"Plugin Commands"},n.createElement(w,{style:c.text_container},s.map(l=>n.createElement(X,{style:c.command,key:l,onPress:function(){V.setString(`/${l}`),I(`the command ${l}`)},title:`/${l}`},"/",l)))),n.createElement(A,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(r,{label:"Initialization Toasts",leading:n.createElement(r.Icon,{style:c.icon,source:d.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(K,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),_.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:d.Settings.Toasts.Settings})}})}),n.createElement(P,null)),n.createElement(r,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(r.Icon,{style:c.icon,source:d.Settings.Debug}),trailing:r.Arrow,onPress:async function(){V.setString(await ee(e.name,e.version)),I("plugin debug information")}}),n.createElement(P,null),n.createElement(r,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(r.Icon,{style:c.icon,source:d.Delete}),trailing:r.Arrow,onPress:async function(){await E.removeItem("device_list"),_.open({content:"Cleared device list storage.",source:d.Settings.Toasts.Settings})}})),n.createElement(A,{title:"Source"},n.createElement(r,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(r.Icon,{style:c.icon,source:d.Copy}),trailing:r.Arrow,onPress:()=>{ne({manifest:e})}}),n.createElement(P,null),n.createElement(r,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(r.Icon,{style:c.icon,source:d.Open}),trailing:r.Arrow,onPress:()=>{re.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(r,{label:`Plugin Version: ${e.version}`})))},me="MessageSpoofer",ce="1.1.8",de="patch-1.0.0",ue="Change what people say.",pe=[{name:"Marek (modified by spin)",id:"308440976723148800"}],ge="#ff0069",we="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/MessageSpoofer.js",O={name:me,version:ce,build:de,description:ue,authors:pe,color:ge,sourceUrl:we};const ye=S("getMessage","getMessages"),he=S("getChannel","getDMFromUserId"),C=H("message-spoofer"),Y=S("openLazy"),be=S("_currentDispatchActionType","_subscriptions","_waitQueue"),fe={...O,patches:[],onStart(){let e=!1;C.before(Y,"openLazy",(t,[i,a])=>{a==="MessageLongPressActionSheet"&&i.then(s=>{let c=s.default;return s.default=function({message:p,user:x,channel:y,canAddNewReactions:F},l){let h=c({message:p,user:x,channel:y,canAddNewReactions:F},l);if(h.props.children.props.children.props.children[1][0].key=="69")return h;let z=h.props.children.props.children.props.children[1][0].type,j=n.createElement(z,{key:"69",onPressRow:ve=>{Y.hideActionSheet(),L.startEditMessage(`dirty-${y.id}`,p.id,p.content)},message:"Spoof edit",iconSource:m("ic_message_retry")});return h.props.children.props.children.props.children[1].unshift(j),h},s})}),C.before(L,"startEditMessage",(t,i,a)=>{i[0].startsWith("dirty-")?(i[0]=i[0].replace("dirty-",""),e=!0):e=!1}),C.before(L,"editMessage",(t,i,a)=>{if(e){const s=ye.getMessage(i[0],i[1]);be.dispatch({type:"MESSAGE_UPDATE",message:{...s,...i[2],edited_timestamp:s.editedTimestamp,mention_roles:s.mentionRoles,mention_everyone:s.mentionEveryone,member:s.author,guild_id:he.getChannel(s.channel_id).guild_id},log_edit:!1}),i={}}})},onStop(){C.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(le,{manifest:O,settings:e,hasToasts:!1,section:null,commands:null})}};G(fe);

function z(e){window.enmity.plugins.registerPlugin(e)}const S={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function A(...e){return window.enmity.modules.bulk(...e)}function E(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const x=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const P=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const _=window.enmity.modules.common.Storage,T=window.enmity.modules.common.Toasts,D=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const I=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const j=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const R=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function G(e){return window.enmity.patcher.create(e)}function r(e){return window.enmity.assets.getIDByName(e)}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const W=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const H=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const p=o.Text;o.TextInput,o.TouchableHighlight;const y=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const h=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const $=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const a=o.FormRow,M=o.FormSection;o.FormSelect,o.FormSubLabel;const X=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const N=e=>{let t=0;for(let i in e)t++;return t},q=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[N(t)]=`${t[N(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function J(){try{let e=await _.getItem("device_list");if(e)return JSON.parse(e);let t=(await I.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=q(t);await _.setItem("device_list",i);let l=await _.getItem("device_list");return JSON.parse(l)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function K(e,t){let i=await J();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${P.DCDDeviceManager.systemVersion}
> **Device:** ${i[P.DCDDeviceManager.device]}`}const m={Debug:r("debug"),Retry:r("ic_message_retry"),Failed:r("Small"),Cancel:r("ic_megaphone_nsfw_16px"),Delete:r("ic_message_delete"),Copy:r("toast_copy_link"),Open:r("ic_leave_stage"),Clipboard:r("pending-alert"),Debug_Command:{Sent:r("ic_application_command_24px"),Clock:r("clock")},Settings:{Toasts:{Context:r("toast_image_saved"),Settings:r("ic_selection_checked_24px")},Debug:r("ic_rulebook_16px")}},U=e=>{T.open({content:`Copied ${e} to clipboard.`,source:m.Clipboard})},{native:f}=window.enmity;function Q(){f.reload()}f.version,f.build,f.device,f.version;async function Z({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`;let i=(await(await I.get(t)).text).match(/[0-9].[0-9].[0-9]/g);!i||(i=i[0].replaceAll('"',""),i!=e.version?ee(t,i,e):te(e.name,e.version))}const ee=(e,t,i)=>{D.show({title:"Update found",body:`A newer version is available for ${i.name}.
Would you like to install version ${t} now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ne(e,t,i)})},te=(e,t)=>{console.log(`[${e}] is on the latest version (${t})`),T.open({content:`${e} is on the latest version (${t})`,source:m.Delete})};async function ne(e,t,i){window.enmity.plugins.installPlugin(pluginUrl,({data:l})=>{console.log(`${i.name} Update Error`,l),l=="installed-plugin"||l=="overriden-plugin"?D.show({title:`Updated ${i.name}`,body:`Successfully updated to version ${i.version}. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Later",onConfirm:()=>{Q()}}):D.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{D.close()},onCancel:()=>{Router.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error`)}})})}const C=window.enmity.modules.common.Components.General.Animated,[F,oe]=A(S.byProps("transitionToGuild"),S.byProps("setString"));var ie=({manifest:e})=>{const t=R.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:d.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new C.Value(1)).current,l=()=>{C.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},s=()=>{C.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},g=()=>{F.openURL("https://spin.rip/")},u={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(h,{style:t.container},n.createElement(y,{onPress:g,onPressIn:l,onPressOut:s},n.createElement(C.View,{style:[u]},n.createElement(W,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(h,{style:t.text_container},n.createElement(y,{onPress:()=>{F.openURL(e.sourceUrl)}},n.createElement(p,{style:[t.main_text,t.header]},e.name," ")),n.createElement(h,{style:{flexDirection:"row"}},n.createElement(p,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(y,{onPress:()=>{F.openURL("https://spin.rip/")}},n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(h,{style:{flexDirection:"row"}},n.createElement(p,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(y,{onPress:()=>{F.openURL("https://github.com/acquitelol/")}},n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(h,null,n.createElement(y,{style:{flexDirection:"row"},onPress:()=>{oe.setString(`**${e.name}** v${e.version}`),U("plugin name and version")}},n.createElement(p,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(p,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[se,ae]=A(S.byProps("transitionToGuild"),S.byProps("setString"));var re=({manifest:e,settings:t,hasToasts:i,section:l})=>{const s=R.createThemedStyleSheet({icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:d.ThemeColorMap.TEXT_MUTED}}),[g,u]=n.useState(),[b,v]=n.useState();return n.createElement(n.Fragment,null,n.createElement(H,{onTouchStart:c=>{u(c.nativeEvent.pageX),v(c.nativeEvent.pageY)},onTouchEnd:c=>{g-c.nativeEvent.pageX<-100&&b-c.nativeEvent.pageY<40&&b-c.nativeEvent.pageY>-40&&j.pop()}},n.createElement(ie,{manifest:e}),l,n.createElement(M,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(a,{label:"Initialization Toasts",leading:n.createElement(a.Icon,{style:s.icon,source:m.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(X,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),T.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} Initialization Toasts.`,source:m.Settings.Toasts.Settings})}})}),n.createElement($,null)),n.createElement(a,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(a.Icon,{style:s.icon,source:m.Settings.Debug}),trailing:a.Arrow,onPress:async function(){ae.setString(await K(e.name,e.version)),U("plugin debug information")}}),n.createElement($,null),n.createElement(a,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(a.Icon,{style:s.icon,source:m.Delete}),trailing:a.Arrow,onPress:async function(){await _.removeItem("device_list"),T.open({content:"Cleared device list storage.",source:m.Settings.Toasts.Settings})}})),n.createElement(M,{title:"Source"},n.createElement(a,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(a.Icon,{style:s.icon,source:m.Copy}),trailing:a.Arrow,onPress:()=>{Z({manifest:e})}}),n.createElement($,null),n.createElement(a,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(a.Icon,{style:s.icon,source:m.Open}),trailing:a.Arrow,onPress:()=>{se.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(a,{label:`Plugin Version: ${e.version}`})))},le="MessageSpoofer",me="1.1.7",ce="Change what people say.",de=[{name:"Marek (modified by spin)",id:"308440976723148800"}],ue="#ff0069",pe="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/MessageSpoofer.js",k={name:le,version:me,description:ce,authors:de,color:ue,sourceUrl:pe};const ge=E("getMessage","getMessages"),we=E("getChannel","getDMFromUserId"),L=G("message-spoofer"),B=E("openLazy"),ye=E("_currentDispatchActionType","_subscriptions","_waitQueue"),he={...k,patches:[],onStart(){let e=!1;L.before(B,"openLazy",(t,[i,l])=>{l==="MessageLongPressActionSheet"&&i.then(s=>{let g=s.default;return s.default=function({message:u,user:b,channel:v,canAddNewReactions:c},V){let w=g({message:u,user:b,channel:v,canAddNewReactions:c},V);if(w.props.children.props.children.props.children[1][0].key=="69")return w;let O=w.props.children.props.children.props.children[1][0].type,Y=n.createElement(O,{key:"69",onPressRow:fe=>{B.hideActionSheet(),x.startEditMessage(`dirty-${v.id}`,u.id,u.content)},message:"Spoof edit",iconSource:r("ic_message_retry")});return w.props.children.props.children.props.children[1].unshift(Y),w},s})}),L.before(x,"startEditMessage",(t,i,l)=>{i[0].startsWith("dirty-")?(i[0]=i[0].replace("dirty-",""),e=!0):e=!1}),L.before(x,"editMessage",(t,i,l)=>{if(e){const s=ge.getMessage(i[0],i[1]);ye.dispatch({type:"MESSAGE_UPDATE",message:{...s,...i[2],edited_timestamp:s.editedTimestamp,mention_roles:s.mentionRoles,mention_everyone:s.mentionEveryone,member:s.author,guild_id:we.getChannel(s.channel_id).guild_id},log_edit:!1}),i={}}})},onStop(){L.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(re,{manifest:k,settings:e,hasToasts:!1,section:[]})}};z(he);

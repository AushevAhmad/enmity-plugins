const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const V=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const M=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const d=o.Text;o.TextInput,o.TouchableHighlight;const g=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const p=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const T=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const s=o.FormRow,D=o.FormSection;o.FormSelect,o.FormSubLabel;const $=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;function O(e){window.enmity.plugins.registerPlugin(e)}function x(e,t,i){window.enmity.settings.set(e,t,i)}function C(e,t,i){return window.enmity.settings.get(e,t,i)}function Y(e){return window.enmity.patcher.create(e)}var j="BetterTwitterEmbeds",z="1.1.3",G="Convert Twitter links to FxTwitter links so the tweet embed is better.",H=[{name:"spin",id:"308440976723148800"}],W="#ff0069",X="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/BetterTwitterEmbeds.js",L={name:j,version:z,description:G,authors:H,color:W,sourceUrl:X};const m=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const q=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const I=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const h=window.enmity.modules.common.Storage,w=window.enmity.modules.common.Toasts,b=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const P=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const J=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const A=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const R=e=>{let t=0;for(let i in e)t++;return t},K=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[R(t)]=`${t[R(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function Q(){try{let e=await h.getItem("device_list");if(e)return JSON.parse(e);let t=(await P.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=K(t);await h.setItem("device_list",i);let r=await h.getItem("device_list");return JSON.parse(r)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function Z(e,t){let i=await Q();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${I.DCDDeviceManager.systemVersion}
> **Device:** ${i[I.DCDDeviceManager.device]}`}function a(e){return window.enmity.assets.getIDByName(e)}const l={Debug:a("debug"),Retry:a("ic_message_retry"),Failed:a("Small"),Cancel:a("ic_megaphone_nsfw_16px"),Delete:a("ic_message_delete"),Copy:a("toast_copy_link"),Open:a("ic_leave_stage"),Clipboard:a("pending-alert"),Debug_Command:{Sent:a("ic_application_command_24px"),Clock:a("clock")},Settings:{Toasts:{Context:a("toast_image_saved"),Settings:a("ic_selection_checked_24px")},Debug:a("ic_rulebook_16px")}},B=e=>{w.open({content:`Copied ${e} to clipboard.`,source:l.Clipboard})},{native:y}=window.enmity;function ee(){y.reload()}y.version,y.build,y.device,y.version;async function te({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`;let i=(await(await P.get(t)).text).match(/[0-9].[0-9].[0-9]/g);!i||(i=i[0].replaceAll('"',""),i!=e.version?ne(t,i,e):oe(e.name,e.version))}const ne=(e,t,i)=>{b.show({title:"Update found",body:`A newer version is available for ${i.name}.
Would you like to install version ${t} now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ie(e,t,i)})},oe=(e,t)=>{console.log(`[${e}] is on the latest version (${t})`),w.open({content:`${e} is on the latest version (${t})`,source:l.Delete})};async function ie(e,t,i){window.enmity.plugins.installPlugin(pluginUrl,({data:r})=>{console.log(`${i.name} Update Error`,r),r=="installed-plugin"||r=="overriden-plugin"?b.show({title:`Updated ${i.name}`,body:`Successfully updated to version ${i.version}. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Later",onConfirm:()=>{ee()}}):b.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{b.close()},onCancel:()=>{Router.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error`)}})})}const f={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function N(...e){return window.enmity.modules.bulk(...e)}window.enmity.modules.common;const v=window.enmity.modules.common.Components.General.Animated,[E,se]=N(f.byProps("transitionToGuild"),f.byProps("setString"));var ae=({manifest:e})=>{const t=A.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:m.ThemeColorMap.HEADER_PRIMARY,fontFamily:m.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:m.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new v.Value(1)).current,r=()=>{v.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},c=()=>{v.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},S=()=>{E.openURL("https://spin.rip/")},_={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(p,{style:t.container},n.createElement(g,{onPress:S,onPressIn:r,onPressOut:c},n.createElement(v.View,{style:[_]},n.createElement(V,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(p,{style:t.text_container},n.createElement(g,{onPress:()=>{E.openURL(e.sourceUrl)}},n.createElement(d,{style:[t.main_text,t.header]},e.name," ")),n.createElement(p,{style:{flexDirection:"row"}},n.createElement(d,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(g,{onPress:()=>{E.openURL("https://spin.rip/")}},n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(p,{style:{flexDirection:"row"}},n.createElement(d,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(g,{onPress:()=>{E.openURL("https://github.com/acquitelol/")}},n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(p,null,n.createElement(g,{style:{flexDirection:"row"},onPress:()=>{se.setString(`**${e.name}** v${e.version}`),B("plugin name and version")}},n.createElement(d,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[re,le]=N(f.byProps("transitionToGuild"),f.byProps("setString"));var me=({manifest:e,settings:t,hasToasts:i,section:r})=>{const c=A.createThemedStyleSheet({icon:{color:m.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:m.ThemeColorMap.TEXT_MUTED}}),[S,_]=n.useState(),[F,k]=n.useState();return n.createElement(n.Fragment,null,n.createElement(M,{onTouchStart:u=>{_(u.nativeEvent.pageX),k(u.nativeEvent.pageY)},onTouchEnd:u=>{S-u.nativeEvent.pageX<-100&&F-u.nativeEvent.pageY<40&&F-u.nativeEvent.pageY>-40&&J.pop()}},n.createElement(ae,{manifest:e}),r,n.createElement(D,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(s,{label:"Initialization Toasts",leading:n.createElement(s.Icon,{style:c.icon,source:l.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement($,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),w.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} Initialization Toasts.`,source:l.Settings.Toasts.Settings})}})}),n.createElement(T,null)),n.createElement(s,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(s.Icon,{style:c.icon,source:l.Settings.Debug}),trailing:s.Arrow,onPress:async function(){le.setString(await Z(e.name,e.version)),B("plugin debug information")}}),n.createElement(T,null),n.createElement(s,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(s.Icon,{style:c.icon,source:l.Delete}),trailing:s.Arrow,onPress:async function(){await h.removeItem("device_list"),w.open({content:"Cleared device list storage.",source:l.Settings.Toasts.Settings})}})),n.createElement(D,{title:"Source"},n.createElement(s,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(s.Icon,{style:c.icon,source:l.Copy}),trailing:s.Arrow,onPress:()=>{te({manifest:e})}}),n.createElement(T,null),n.createElement(s,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(s.Icon,{style:c.icon,source:l.Open}),trailing:s.Arrow,onPress:()=>{re.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(s,{label:`Plugin Version: ${e.version}`})))};const U=Y("BTE"),ce={...L,onStart(){try{C("_twitter","_type",!1)||x("_twitter","_type","fxtwitter"),U.before(q,"sendMessage",(e,t,i)=>{const r=t[1].content;!r.match(/http(s)?:\/\/twitter.com\/\w{4,15}\/status\/\d+/gim)||(t[1].content=r.replace(/http(s)?:\/\/twitter.com/gim,`https://${C("_twitter","_type",!1)}.com`))})}catch(e){console.log("[ BetterTwitterEmbeds Error ]",e)}},onStop(){U.unpatchAll()},patches:[],getSettingsPanel({settings:e}){return n.createElement(me,{manifest:L,settings:e,hasToasts:!1,section:n.createElement(D,{title:"Plugin Settings"},n.createElement(s,{label:"Use vxtwitter.com instead of fxtwitter.com",leading:n.createElement(s.Icon,{source:l.Open}),trailing:n.createElement($,{value:e.getBoolean("_vxtwitter",!1),onValueChange:()=>{try{e.toggle("_vxtwitter",!1),e.getBoolean("_vxtwitter",!1)?x("_twitter","_type","vxtwitter"):x("_twitter","_type","fxtwitter"),w.open({content:`Switched to ${C("_twitter","_type",!1)}.`,source:l.Delete})}catch(t){console.log("[ BetterTwitterEmbeds Error ]",t),w.open({content:"An error has occurred. Check debug logs for more info.",source:l.Failed})}}})}))})}};O(ce);

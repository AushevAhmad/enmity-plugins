function w(o){window.enmity.plugins.registerPlugin(o)}function r(...o){return window.enmity.modules.getByProps(...o)}window.enmity.modules.common;function y(o){return window.enmity.patcher.create(o)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native,window.enmity.modules.common.React,window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const n=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var g="Amongus",p="1.sus",S="sus",A=[{name:"NotMarek",id:"206299359007080450"}],h="#ff0069",f="https://raw.githubusercontent.com/notmarek/enmity-plugins/master/dist/HideBlockedMessages.js",v={name:g,version:p,description:S,authors:A,color:h,sourceUrl:f};function M(o){return window.enmity.settings.makeStore(o)}const u=y("Amongus"),s=r("_currentDispatchActionType","_subscriptions","_waitQueue");r("isBlocked","isFriend");const t="https://assets-prd.ignimgs.com/2020/09/15/among-us-button-1600131255112.jpg",k={...v,onStart(){const o=M(this.name);s.dispatch({type:"LOAD_MESSAGES"}),o.set("test","test"),s.dispatch({type:"LOAD_MESSAGES_SUCCESS",channelId:0,messages:[],isBefore:!1,isAfter:!1,hasMoreBefore:!1,hasMoreAfter:!1,limit:25,jump:void 0,isStale:!1,truncate:void 0});let e=0,m=3;const i=()=>{try{e++,console.log(`Amongus delayed start attempt ${e}/${m}.`),n.open({content:`Amongus start attempt ${e}/${m}.`,source:{uri:t}});const l=s._orderedActionHandlers.LOAD_MESSAGES_SUCCESS.find(d=>d.name==="MessageStore");u.before(l,"actionHandler",(d,a)=>{a[0].messages=a[0].messages.map(c=>(c.content="sus",c))}),console.log("Amongus delayed start successful."),n.open({content:"Amongus delayed start successful.",source:{uri:t}})}catch{e<m?(console.warn(`Amongus failed to start. Trying again in ${e}0s.`),n.open({content:`Amongus failed to start trying again in ${e}0s.`,source:{uri:t}}),setTimeout(i,e*1e4)):(console.error("Amongus failed to start. Giving up."),n.open({content:"Amongus failed to start. Giving up.",source:{uri:t}}))}};setTimeout(i,300)},onStop(){u.unpatchAll()},patches:[]};w(k);

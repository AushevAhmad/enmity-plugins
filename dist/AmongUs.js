function G(e){window.enmity.plugins.registerPlugin(e)}const _={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function I(...e){return window.enmity.modules.bulk(...e)}function R(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function H(e){return window.enmity.patcher.create(e)}const w=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const M=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const $=window.enmity.modules.common.Storage,y=window.enmity.modules.common.Toasts,T=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const N=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const Y=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const U=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var j="AmongUs",z="1.0.3",W="patch-1.0.4",X="sus",q=[{name:"amogus",id:"308440976723148800"}],J="#ff0069",K="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/AmongUs.js",g={name:j,version:z,build:W,description:X,authors:q,color:J,sourceUrl:K};function Q(e,t,i){return window.enmity.settings.getBoolean(e,t,i)}function Z(e){return window.enmity.settings.makeStore(e)}const B=e=>{let t=0;for(let i in e)t++;return t},ee=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[B(t)]=`${t[B(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function te(){try{let e=await $.getItem("device_list");if(e)return JSON.parse(e);let t=(await N.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=ee(t);await $.setItem("device_list",i);let a=await $.getItem("device_list");return JSON.parse(a)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function ne(e,t){let i=await te();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${M.DCDDeviceManager.systemVersion}
> **Device:** ${i[M.DCDDeviceManager.device]}`}function l(e){return window.enmity.assets.getIDByName(e)}const c={Debug:l("debug"),Retry:l("ic_message_retry"),Failed:l("Small"),Cancel:l("ic_megaphone_nsfw_16px"),Delete:l("ic_message_delete"),Copy:l("toast_copy_link"),Open:l("ic_leave_stage"),Clipboard:l("pending-alert"),Debug_Command:{Sent:l("ic_application_command_24px"),Clock:l("clock")},Settings:{Toasts:{Context:l("toast_image_saved"),Settings:l("ic_selection_checked_24px")},Share:l("share"),Commands:l("ic_profile_badge_bot_commands"),Debug:l("ic_rulebook_16px")}},F=e=>{y.open({content:`Copied ${e} to clipboard.`,source:c.Clipboard})},{native:h}=window.enmity;function oe(){h.reload()}h.version,h.build,h.device,h.version;const ie=R("transitionToGuild");async function se({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,i=await(await N.get(t)).text;let a=i.match(/\d\.\d\.\d+/g),s=i.match(/patch\-\d\.\d\.\d+/g);return!a||!s?V(e.name,e.version):(a=a[0],s=s[0],a!=e.version?k(t,a,s.split("-")[1],e,!1):s!=e.build?k(t,a,s.split("-")[1],e,!0):V(e.name,e.version))}const k=(e,t,i,a,s)=>{const d=s?i:t;T.show({title:"Update found",body:`A newer ${s?"build":"version"} is available for ${a.name}. ${s?`
The version will remain at ${t}, but the build will update to ${i}.`:""}
Would you like to install ${s?`build \`${i}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ae(e,d,a,s)})},V=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),y.open({content:`${e} is on latest version (${t})`,source:c.Settings.Toasts.Settings})};async function ae(e,t,i,a){window.enmity.plugins.installPlugin(e,({data:s})=>{s=="installed_plugin"||s=="overridden_plugin"?T.show({title:`Updated ${i.name}`,body:`Successfully updated to ${a?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{oe()}}):T.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{ie.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error%3A%20${a?`b${version}`:`v${version}`}`)},onCancel:()=>{T.close()}})})}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const re=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const le=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const b=o.Text;o.TextInput,o.TouchableHighlight;const S=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const v=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const L=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const r=o.FormRow,P=o.FormSection;o.FormSelect,o.FormSubLabel;const me=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const D=window.enmity.modules.common.Components.General.Animated,[C,ce]=I(_.byProps("transitionToGuild"),_.byProps("setString"));var de=({manifest:e})=>{const t=U.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:w.ThemeColorMap.HEADER_PRIMARY,fontFamily:w.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:w.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new D.Value(1)).current,a=()=>{D.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},s=()=>{D.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},d=()=>{C.openURL("https://spin.rip/")},f={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(v,{style:t.container},n.createElement(S,{onPress:d,onPressIn:a,onPressOut:s},n.createElement(D.View,{style:[f]},n.createElement(re,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(v,{style:t.text_container},n.createElement(S,{onPress:()=>{C.openURL(e.sourceUrl)}},n.createElement(b,{style:[t.main_text,t.header]},e.name," ")),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(b,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(S,{onPress:()=>{C.openURL("https://spin.rip/")}},n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:w.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(b,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(S,{onPress:()=>{C.openURL("https://github.com/acquitelol/")}},n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:w.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(v,null,n.createElement(S,{style:{flexDirection:"row"},onPress:()=>{ce.setString(`**${e.name}** v${e.version}`),F("plugin name and version")}},n.createElement(b,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:w.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[ue,O]=I(_.byProps("transitionToGuild"),_.byProps("setString"));var ge=({manifest:e,settings:t,hasToasts:i,section:a,commands:s})=>{const d=U.createThemedStyleSheet({icon:{color:w.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:w.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[f,x]=n.useState(),[u,p]=n.useState();return n.createElement(n.Fragment,null,n.createElement(le,{onTouchStart:m=>{x(m.nativeEvent.pageX),p(m.nativeEvent.pageY)},onTouchEnd:m=>{f-m.nativeEvent.pageX<-100&&u-m.nativeEvent.pageY<40&&u-m.nativeEvent.pageY>-40&&Y.pop()}},n.createElement(de,{manifest:e}),a,s&&n.createElement(P,{title:"Plugin Commands"},s.map(m=>n.createElement(r,{label:`/${m.name}`,subLabel:m.description,leading:n.createElement(r.Icon,{style:d.icon,source:c.Settings.Commands}),trailing:r.Arrow,onPress:function(){O.setString(`/${m.name}`),F(`the command ${m.name}`)}}))),n.createElement(P,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(r,{label:"Initialization Toasts",leading:n.createElement(r.Icon,{style:d.icon,source:c.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(me,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),y.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:c.Settings.Toasts.Settings})}})}),n.createElement(L,null)),n.createElement(r,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(r.Icon,{style:d.icon,source:c.Settings.Debug}),trailing:r.Arrow,onPress:async function(){O.setString(await ne(e.name,e.version)),F("plugin debug information")}}),n.createElement(L,null),n.createElement(r,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(r.Icon,{style:d.icon,source:c.Delete}),trailing:r.Arrow,onPress:async function(){await $.removeItem("device_list"),y.open({content:"Cleared device list storage.",source:c.Settings.Toasts.Settings})}})),n.createElement(P,{title:"Source"},n.createElement(r,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(r.Icon,{style:d.icon,source:c.Copy}),trailing:r.Arrow,onPress:()=>{se({manifest:e})}}),n.createElement(L,null),n.createElement(r,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(r.Icon,{style:d.icon,source:c.Open}),trailing:r.Arrow,onPress:()=>{ue.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(r,{label:`Plugin Version: ${e.version}`})))};const A=H("Amongus"),E=R("_currentDispatchActionType","_subscriptions","_waitQueue"),pe={...g,onStart(){const e=Z(this.name);E.dispatch({type:"LOAD_MESSAGES"}),e.set("test","test"),E.dispatch({type:"LOAD_MESSAGES_SUCCESS",channelId:0,messages:[],isBefore:!1,isAfter:!1,hasMoreBefore:!1,hasMoreAfter:!1,limit:25,jump:void 0,isStale:!1,truncate:void 0});let t=0,i=3;const a=()=>{let s=Q(g.name,`${g.name}-toastEnable`,!1);try{t++,console.log(`Amongus delayed start attempt ${t}/${i}.`),s&&y.open({content:`[${g.name}] start attempt ${t}/${i}.`,source:c.Debug});const d=E._actionHandlers._orderedActionHandlers.MESSAGE_CREATE.find(u=>u.name==="MessageStore"),f=E._actionHandlers._orderedActionHandlers.MESSAGE_UPDATE.find(u=>u.name==="MessageStore"),x=E._actionHandlers._orderedActionHandlers.LOAD_MESSAGES_SUCCESS.find(u=>u.name==="MessageStore");A.before(d,"actionHandler",(u,p)=>{p[0].message.content="sus"}),A.before(f,"actionHandler",(u,p)=>{p[0].message.content="sus"}),A.before(x,"actionHandler",(u,p)=>{p[0].messages=p[0].messages.map(m=>(m.content="sus",m))}),console.log(`${g.name} delayed start successful.`),s&&y.open({content:`${g.name} start successful.`,source:c.Settings.Toasts.Settings})}catch{t<i?(console.warn(`${g.name} failed to start. Trying again in ${t}0s.`),s&&y.open({content:`${g.name} failed to start trying again in ${t}0s.`,source:c.Failed}),setTimeout(a,t*1e4)):(console.error(`${g.name} failed to start. Giving up.`),y.open({content:`${g.name} failed to start. Giving up.`,source:c.Failed}))}};setTimeout(a,300)},onStop(){A.unpatchAll()},patches:[],getSettingsPanel({settings:e}){return n.createElement(ge,{manifest:g,settings:e,hasToasts:!0,section:null,commands:null})}};G(pe);

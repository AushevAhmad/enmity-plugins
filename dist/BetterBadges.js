function g(o){return window.enmity.patcher.create(o)}function f(o){window.enmity.plugins.registerPlugin(o)}function p(...o){return window.enmity.modules.getByDisplayName(...o)}window.enmity.modules.common,window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const m=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const S=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack;const d=window.enmity.modules.common.Theme;window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var b="BetterBadges",F="0.0.1",C="Custom badges for anyone and everyone :)",T=[{name:"spinfal",id:"308440976723148800"}],v="#ff0069",E="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/BetterBadges.js",B={name:b,version:F,description:C,authors:T,color:v,sourceUrl:E};const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList;const k=e.Image;e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl,e.ScrollView,e.SectionList,e.StatusBar,e.StyleSheet,e.Switch,e.Text,e.TextInput,e.TouchableHighlight;const L=e.TouchableOpacity;e.TouchableWithoutFeedback,e.Touchable;const R=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio,e.FormRow,e.FormSection,e.FormSelect,e.FormSubLabel,e.FormSwitch,e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;const u={useMemo:o=>o(),useState:o=>[o,()=>{}],useReducer:o=>[o,()=>{}],useEffect:()=>{},useLayoutEffect:()=>{},useRef:()=>({current:null}),useCallback:o=>o},_=Object.keys(u);var j=o=>(...n)=>{const r=m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher.current,s=_.map(i=>[i,r[i]]);Object.assign(r,u);const t={rendered:null,error:null};try{t.rendered=o(...n)}catch(i){t.error=i}if(Object.assign(r,Object.fromEntries(s)),t.error)throw t.error;return t.rendered};const l="https://raw.githubusercontent.com/spinfal/enmitybadges/main/",w=g("BetterBadges"),y=p("ProfileBadges",{default:!1}),x={...B,onStart(){},onStop(){(void 0)("badges"),w.after(y,"default",(o,[{user:n,isEnmity:r,...s}],t)=>{if(r)return;const[i,h]=m.useState([]);return m.useEffect(()=>{try{I(n.id).then(h)}catch{console.error(`Failed to request/parse badges for ${n.id}`)}},[]),i.length&&(t||(t=j(y.default)({user:new Proxy({},{get:(a,c)=>c==="flags"?-1:n[c]}),isEnmity:!0,...s}),t.props.badges=[]),t.props.badges.push(...i.map(a=>m.createElement(R,{key:a,__enmity:!0,style:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"}},m.createElement(N,{type:a}))))),t}),w.unpatchAll()},patches:[]};function N({type:o}){const[n,r]=m.useState(null);return m.useEffect(()=>{try{O(o).then(r)}catch(s){console.error(`Failed to get badge data for ${o}.`,s.message)}},[]),n!=null&&n.url?m.createElement(L,{onPress:()=>{S.open({content:n.name,source:{uri:n.url[d.theme]}})}},m.createElement(k,{source:{uri:n.url[d.theme]},style:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}})):null}async function I(o){return await fetch(`${l}${o}.json`,{headers:{"Cache-Control":"no-cache"}}).then(n=>n.json()).catch(()=>[])}async function O(o){return await fetch(`${l}data/${o}.json`,{headers:{"Cache-Control":"no-cache"}}).then(n=>n.json()).catch(()=>{})}f(x);

const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const V=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const M=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const d=o.Text;o.TextInput,o.TouchableHighlight;const p=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const w=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const k=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const a=o.FormRow,T=o.FormSection;o.FormSelect,o.FormSubLabel;const F=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;function O(e){window.enmity.plugins.registerPlugin(e)}function D(e,t,i){window.enmity.settings.set(e,t,i)}function C(e,t,i){return window.enmity.settings.get(e,t,i)}function Y(e){return window.enmity.patcher.create(e)}var z="BetterTiktokEmbeds",j="1.1.5",G="Convert TikTok links to tiktxk.com links so the TikTok embed is better and can be played.",H=[{name:"spin",id:"308440976723148800"}],W="#ff0069",X="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/BetterTiktokEmbeds.js",$={name:z,version:j,description:G,authors:H,color:W,sourceUrl:X};const m=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const q=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const L=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const h=window.enmity.modules.common.Storage,g=window.enmity.modules.common.Toasts,b=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const A=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const J=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const I=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const P=e=>{let t=0;for(let i in e)t++;return t},Z=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[P(t)]=`${t[P(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function K(){try{let e=await h.getItem("device_list");if(e)return JSON.parse(e);let t=(await A.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=Z(t);await h.setItem("device_list",i);let r=await h.getItem("device_list");return JSON.parse(r)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function Q(e,t){let i=await K();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${L.DCDDeviceManager.systemVersion}
> **Device:** ${i[L.DCDDeviceManager.device]}`}function s(e){return window.enmity.assets.getIDByName(e)}const l={Debug:s("debug"),Retry:s("ic_message_retry"),Failed:s("Small"),Cancel:s("ic_megaphone_nsfw_16px"),Delete:s("ic_message_delete"),Copy:s("toast_copy_link"),Open:s("ic_leave_stage"),Clipboard:s("pending-alert"),Debug_Command:{Sent:s("ic_application_command_24px"),Clock:s("clock")},Settings:{Toasts:{Context:s("toast_image_saved"),Settings:s("ic_selection_checked_24px")},Debug:s("ic_rulebook_16px")}},R=e=>{g.open({content:`Copied ${e} to clipboard.`,source:l.Clipboard})},{native:y}=window.enmity;function ee(){y.reload()}y.version,y.build,y.device,y.version;async function te({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`;let i=(await(await A.get(t)).text).match(/[0-9].[0-9].[0-9]/g);!i||(i=i[0].replaceAll('"',""),i!=e.version?ne(t,i,e):oe(e.name,e.version))}const ne=(e,t,i)=>{b.show({title:"Update found",body:`A newer version is available for ${i.name}.
Would you like to install version ${t} now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ie(e,t,i)})},oe=(e,t)=>{console.log(`[${e}] is on the latest version (${t})`),g.open({content:`${e} is on the latest version (${t})`,source:l.Delete})};async function ie(e,t,i){window.enmity.plugins.installPlugin(pluginUrl,({data:r})=>{console.log(`${i.name} Update Error`,r),r=="installed-plugin"||r=="overriden-plugin"?b.show({title:`Updated ${i.name}`,body:`Successfully updated to version ${i.version}. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Later",onConfirm:()=>{ee()}}):b.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{b.close()},onCancel:()=>{Router.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error`)}})})}const f={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function B(...e){return window.enmity.modules.bulk(...e)}window.enmity.modules.common;const v=window.enmity.modules.common.Components.General.Animated,[E,ae]=B(f.byProps("transitionToGuild"),f.byProps("setString"));var se=({manifest:e})=>{const t=I.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:m.ThemeColorMap.HEADER_PRIMARY,fontFamily:m.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:m.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new v.Value(1)).current,r=()=>{v.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},c=()=>{v.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},S=()=>{E.openURL("https://spin.rip/")},_={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(w,{style:t.container},n.createElement(p,{onPress:S,onPressIn:r,onPressOut:c},n.createElement(v.View,{style:[_]},n.createElement(V,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(w,{style:t.text_container},n.createElement(p,{onPress:()=>{E.openURL(e.sourceUrl)}},n.createElement(d,{style:[t.main_text,t.header]},e.name," ")),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(d,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(p,{onPress:()=>{E.openURL("https://spin.rip/")}},n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(d,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(p,{onPress:()=>{E.openURL("https://github.com/acquitelol/")}},n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(w,null,n.createElement(p,{style:{flexDirection:"row"},onPress:()=>{ae.setString(`**${e.name}** v${e.version}`),R("plugin name and version")}},n.createElement(d,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(d,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:m.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[re,le]=B(f.byProps("transitionToGuild"),f.byProps("setString"));var me=({manifest:e,settings:t,hasToasts:i,section:r})=>{const c=I.createThemedStyleSheet({icon:{color:m.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:m.ThemeColorMap.TEXT_MUTED}}),[S,_]=n.useState(),[x,U]=n.useState();return n.createElement(n.Fragment,null,n.createElement(M,{onTouchStart:u=>{_(u.nativeEvent.pageX),U(u.nativeEvent.pageY)},onTouchEnd:u=>{S-u.nativeEvent.pageX<-100&&x-u.nativeEvent.pageY<40&&x-u.nativeEvent.pageY>-40&&J.pop()}},n.createElement(se,{manifest:e}),r,n.createElement(T,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(a,{label:"Initialization Toasts",leading:n.createElement(a.Icon,{style:c.icon,source:l.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(F,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),g.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} Initialization Toasts.`,source:l.Settings.Toasts.Settings})}})}),n.createElement(k,null)),n.createElement(a,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(a.Icon,{style:c.icon,source:l.Settings.Debug}),trailing:a.Arrow,onPress:async function(){le.setString(await Q(e.name,e.version)),R("plugin debug information")}}),n.createElement(k,null),n.createElement(a,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(a.Icon,{style:c.icon,source:l.Delete}),trailing:a.Arrow,onPress:async function(){await h.removeItem("device_list"),g.open({content:"Cleared device list storage.",source:l.Settings.Toasts.Settings})}})),n.createElement(T,{title:"Source"},n.createElement(a,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(a.Icon,{style:c.icon,source:l.Copy}),trailing:a.Arrow,onPress:()=>{te({manifest:e})}}),n.createElement(k,null),n.createElement(a,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(a.Icon,{style:c.icon,source:l.Open}),trailing:a.Arrow,onPress:()=>{re.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(a,{label:`Plugin Version: ${e.version}`})))};const N=Y("BTE"),ce={...$,onStart(){try{C("_tiktok","_type",!1)||D("_tiktok","_type","tiktxk.com"),N.before(q,"sendMessage",(e,t,i)=>{const r=t[1].content;!r.match(/http(s)?:\/\/(\w+.)?tiktok.com\/(@[a-zA-Z0-9_.]{2,24}\/video\/\d+|(\w{1}\/)?[a-zA-Z0-9_.-]{8,12})(\/)?/gim)||(t[1].content=r.replace(/http(s)?:\/\/(\w+.)?tiktok.com/gim,`https://${C("_tiktok","_type",!1)}`))})}catch(e){console.log("[ BetterTiktokEmbeds Error ]",e)}},onStop(){N.unpatchAll()},patches:[],getSettingsPanel({settings:e}){return n.createElement(me,{manifest:$,settings:e,hasToasts:!1,section:n.createElement(T,{title:"Plugin Settings"},n.createElement(a,{label:"Use vm.dstn.to instead of tiktxk.com",leading:n.createElement(a.Icon,{source:l.Open}),trailing:n.createElement(F,{value:e.getBoolean("_tiktxk",!1),onValueChange:()=>{try{e.toggle("_tiktxk",!1),e.getBoolean("_tiktxk",!1)?D("_tiktok","_type","vm.dstn.to"):D("_tiktok","_type","tiktxk.com"),g.open({content:`Switched to ${C("_tiktok","_type",!1)}.`,source:l.Delete})}catch(t){console.log("[ BetterTiktokEmbeds Error ]",t),g.open({content:"An error has occurred. Check debug logs for more info.",source:l.Failed})}}})}))})}};O(ce);

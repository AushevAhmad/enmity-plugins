function Z(e){window.enmity.plugins.registerPlugin(e)}var O="PetPet",ee="1.0.6",te="patch-1.0.9",ne="Generate a petpet gif from a given image",oe=[{name:"spin",id:"308440976723148800"}],ie="#ff0069",se="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/PetPet.js",k={name:O,version:ee,build:te,description:ne,authors:oe,color:ie,sourceUrl:se},G;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(G||(G={}));var R;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(R||(R={}));var N;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(N||(N={}));var z;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(z||(z={}));var f;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(f||(f={}));var Y;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(Y||(Y={}));const D={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function q(...e){return window.enmity.modules.bulk(...e)}function j(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function $(e,t,i,s){window.enmity.clyde.sendReply(e,t,i,s)}const y=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const x=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const P=window.enmity.modules.common.Storage,F=window.enmity.modules.common.Toasts,U=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const C=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const ae=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const H=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const re={id:"petpet-command",name:"petpet",displayName:"petpet",description:"Generate a petpet gif from a given image",displayDescription:"Generate a petpet gif from a given image",type:R.Chat,inputType:N.BuiltInText,options:[{name:"url",displayName:"url",description:"The URL of the image to petpet",displayDescription:"The URL of the image to petpet",type:f.String,required:!1},{name:"user",displayName:"user",description:"Grab a user's avatar to petpet",displayDescription:"Grab a user's avatar to petpet",type:f.User,required:!1},{name:"size",displayName:"size",description:"Change the size of the petpet gif. Max is 512. Defaults to 100, higher values equal larger files and potentially no Discord embeds",displayDescription:"Change the size of the petpet gif. Max is 512. Defaults to 100, higher values equal larger files and potentially no Discord embeds",type:f.Integer,required:!1},{name:"delay",displayName:"delay",description:"The delay between each frame, defaults to 20",displayDescription:"The delay between each frame, defaults to 20",type:f.Integer,required:!1},{name:"whisper",displayName:"whisper",description:"Only you can see the result",displayDescription:"Only you can see the result",type:f.Boolean,required:!1}],execute:async function(e,t){var i,s,r,u,v;const w=e[e.findIndex(a=>a.name==="url")],h=e[e.findIndex(a=>a.name==="user")],d=e[e.findIndex(a=>a.name==="size")],c=e[e.findIndex(a=>a.name==="delay")],_=e[e.findIndex(a=>a.name==="whisper")],Q="v2";if(!w&&!h)return $((i=t==null?void 0:t.channel.id)!=null?i:"0","No argument provided, nothing will happen. Here's a banana instead \u{1F34C}");try{const a=await C.get(`https://petpet-api.clit.repl.co/petpet?url=${w!=null&&w.value?w.value:j("getUser").getUser(h==null?void 0:h.value).getAvatarURL().split("?")[0].replace(/gif|webp/,"png")}&size=${d?d.value:100}&delay=${c?c.value:20}&version=${Q}`).then(B=>B.body);if(a.status==!0){const B={type:"rich",image:{proxy_url:a==null?void 0:a.result,url:a==null?void 0:a.result,width:d?d.value:100,height:d?d.value:100},footer:{text:`Files are purged every 24 hours \u2022 Powered by ${a==null?void 0:a.github}`},color:"0xff0069"};if((s=_==null?void 0:_.value)==null||s){$((r=t==null?void 0:t.channel.id)!=null?r:"0",{embeds:[B]});return}else return{content:a==null?void 0:a.result}}else console.log("[ PetPet Fetch Response ]",a,a==null?void 0:a.status),console.log("[ PetPet Arguments ]",w,h,d,c,_),$((u=t==null?void 0:t.channel.id)!=null?u:"0","Something went wrong, please try again later. Fetch response and PetPet arguments sent to console.")}catch(a){console.log("[ PetPet Error ]",a),console.log("[ PetPet Arguments ]",w,h,d,c,_),$((v=t==null?void 0:t.channel.id)!=null?v:"0","An error occured while fetching and preparing the petpet image. Check debug logs for more info.")}}},W=[re],{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const le=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const ce=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const b=o.Text;o.TextInput,o.TouchableHighlight;const p=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const S=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const M=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const l=o.FormRow,T=o.FormSection;o.FormSelect,o.FormSubLabel;const me=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const X=e=>{let t=0;for(let i in e)t++;return t},ue=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[X(t)]=`${t[X(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function de(){try{let e=await P.getItem("device_list");if(e)return JSON.parse(e);let t=(await C.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=ue(t);await P.setItem("device_list",i);let s=await P.getItem("device_list");return JSON.parse(s)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function ge(e,t,i){let s=await de();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${i.split("-")[1]}
> **Discord Build:** ${x.InfoDictionaryManager.Version} (${x.InfoDictionaryManager.Build})
> **Software Version:** ${x.DCDDeviceManager.systemVersion}
> **Device:** ${s[x.DCDDeviceManager.device]}`}function m(e){return window.enmity.assets.getIDByName(e)}const g={Debug:m("debug"),Retry:m("ic_message_retry"),Failed:m("Small"),Cancel:m("ic_megaphone_nsfw_16px"),Add:m("add_white"),Delete:m("ic_message_delete"),Copy:m("toast_copy_link"),Open:m("ic_leave_stage"),Clipboard:m("pending-alert"),Debug_Command:{Sent:m("ic_application_command_24px"),Clock:m("clock")},Settings:{Toasts:{Context:m("toast_image_saved"),Settings:m("ic_selection_checked_24px")},Share:m("share"),Commands:m("ic_profile_badge_bot_commands"),Debug:m("ic_rulebook_16px")}},V=e=>{F.open({content:`Copied ${e} to clipboard.`,source:g.Clipboard})},{native:E}=window.enmity;function we(){E.reload()}E.version,E.build,E.device,E.version;const he=j("transitionToGuild");async function ye({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,i=await(await C.get(t)).text;let s=i.match(/\d\.\d\.\d+/g),r=i.match(/patch\-\d\.\d\.\d+/g);return!s||!r?A(e.name,e.version):(s=s[0],r=r[0],s!=e.version?J(t,s,r.split("-")[1],e,!1):r!=e.build?J(t,s,r.split("-")[1],e,!0):A(e.name,e.version))}const J=(e,t,i,s,r)=>{const u=r?i:t;U.show({title:"Update found",body:`A newer ${r?"build":"version"} is available for ${s.name}. ${r?`
The version will remain at ${t}, but the build will update to ${i}.`:""}
Would you like to install ${r?`build \`${i}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>fe(e,u,s,r)})},A=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),F.open({content:`${e} is on latest version (${t})`,source:g.Settings.Toasts.Settings})};async function fe(e,t,i,s){window.enmity.plugins.installPlugin(e,({data:r})=>{r=="installed_plugin"||r=="overridden_plugin"?U.show({title:`Updated ${i.name}`,body:`Successfully updated to ${s?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{we()}}):U.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{he.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error%3A%20${s?`b${t}`:`v${t}`}`)}})})}const I=window.enmity.modules.common.Components.General.Animated,[L,be]=q(D.byProps("transitionToGuild"),D.byProps("setString"));var ve=({manifest:e})=>{const t=H.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:y.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new I.Value(1)).current,s=()=>{I.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},r=()=>{I.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},u=()=>{L.openURL("https://spin.rip/")},v={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(S,{style:t.container},n.createElement(p,{onPress:u,onPressIn:s,onPressOut:r},n.createElement(I.View,{style:[v]},n.createElement(le,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(S,{style:t.text_container},n.createElement(p,{onPress:()=>{L.openURL(e.sourceUrl)}},n.createElement(b,{style:[t.main_text,t.header]},e.name," ")),n.createElement(S,{style:{flexDirection:"row"}},n.createElement(b,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(p,{onPress:()=>{L.openURL("https://spin.rip/")}},n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(S,{style:{flexDirection:"row"}},n.createElement(b,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(p,{onPress:()=>{L.openURL("https://github.com/acquitelol/")}},n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(S,null,n.createElement(p,{style:{flexDirection:"row"},onPress:()=>{be.setString(`**${e.name}** v${e.version}`),V("plugin name and version")}},n.createElement(b,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(b,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[pe,K]=q(D.byProps("transitionToGuild"),D.byProps("setString"));var Se=({manifest:e,settings:t,hasToasts:i,section:s,commands:r})=>{const u=H.createThemedStyleSheet({icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[v,w]=n.useState(),[h,d]=n.useState();return n.createElement(n.Fragment,null,n.createElement(ce,{onTouchStart:c=>{w(c.nativeEvent.pageX),d(c.nativeEvent.pageY)},onTouchEnd:c=>{v-c.nativeEvent.pageX<-100&&h-c.nativeEvent.pageY<40&&h-c.nativeEvent.pageY>-40&&ae.pop()}},n.createElement(ve,{manifest:e}),s,r&&n.createElement(T,{title:"Plugin Commands"},r.map(c=>n.createElement(l,{label:`/${c.name}`,subLabel:c.description,leading:n.createElement(l.Icon,{style:u.icon,source:g.Settings.Commands}),trailing:l.Arrow,onPress:function(){K.setString(`/${c.name}`),V(`the command ${c.name}`)}}))),n.createElement(T,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(l,{label:"Initialization Toasts",leading:n.createElement(l.Icon,{style:u.icon,source:g.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(me,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),F.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:g.Settings.Toasts.Settings})}})}),n.createElement(M,null)),n.createElement(l,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(l.Icon,{style:u.icon,source:g.Settings.Debug}),trailing:l.Arrow,onPress:async function(){K.setString(await ge(e.name,e.version,e.build)),V("plugin debug information")}}),n.createElement(M,null),n.createElement(l,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(l.Icon,{style:u.icon,source:g.Delete}),trailing:l.Arrow,onPress:async function(){await P.removeItem("device_list"),F.open({content:"Cleared device list storage.",source:g.Settings.Toasts.Settings})}})),n.createElement(T,{title:"Source"},n.createElement(l,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(l.Icon,{style:u.icon,source:g.Copy}),trailing:l.Arrow,onPress:()=>{ye({manifest:e})}}),n.createElement(M,null),n.createElement(l,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(l.Icon,{style:u.icon,source:g.Open}),trailing:l.Arrow,onPress:()=>{pe.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(l,{label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))};const Ee={...k,onStart(){this.commands=W},onStop(){this.commands=[]},patches:[],getSettingsPanel({settings:e}){return n.createElement(Se,{manifest:k,settings:e,hasToasts:!1,section:null,commands:W})}};Z(Ee);

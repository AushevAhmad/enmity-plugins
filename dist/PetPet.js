function R(e){window.enmity.plugins.registerPlugin(e)}function I(e){return window.enmity.plugins.installPlugin(e)}var M="PetPet",N="1.0.2",L="Generate a petpet gif from a given image",G=[{name:"spin",id:"308440976723148800"}],k="#ff0069",q="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/PetPet.js",S={name:M,version:N,description:L,authors:G,color:k,sourceUrl:q},P;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(P||(P={}));var h;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(h||(h={}));var v;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(v||(v={}));var x;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(x||(x={}));var s;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(s||(s={}));var B;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(B||(B={}));function z(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function w(e,n,a,m){window.enmity.clyde.sendReply(e,n,a,m)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const f=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts;const $=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const E=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const V={id:"petpet-command",name:"petpet",displayName:"petpet",description:"Generate a petpet gif from a given image",displayDescription:"Generate a petpet gif from a given image",type:h.Chat,inputType:v.BuiltInText,options:[{name:"url",displayName:"url",description:"The URL of the image to petpet",displayDescription:"The URL of the image to petpet",type:s.String,required:!1},{name:"user",displayName:"user",description:"Grab a user's avatar to petpet",displayDescription:"Grab a user's avatar to petpet",type:s.User,required:!1},{name:"size",displayName:"size",description:"Change the size of the petpet gif. Max is 512. Defaults to 100, higher values equal larger files and potentially no Discord embeds",displayDescription:"Change the size of the petpet gif. Max is 512. Defaults to 100, higher values equal larger files and potentially no Discord embeds",type:s.Integer,required:!1},{name:"delay",displayName:"delay",description:"The delay between each frame, defaults to 20",displayDescription:"The delay between each frame, defaults to 20",type:s.Integer,required:!1},{name:"whisper",displayName:"whisper",description:"Only you can see the result",displayDescription:"Only you can see the result",type:s.Boolean,required:!1}],execute:async function(e,n){var a,m,y,b,F;const l=e[e.findIndex(t=>t.name==="url")],i=e[e.findIndex(t=>t.name==="user")],r=e[e.findIndex(t=>t.name==="size")],d=e[e.findIndex(t=>t.name==="delay")],c=e[e.findIndex(t=>t.name==="whisper")],D="v2";if(!l&&!i)return w((a=n==null?void 0:n.channel.id)!=null?a:"0","No argument provided, nothing will happen. Here's a banana instead \u{1F34C}");try{const t=await E.get(`https://petpet-api.clit.repl.co/petpet?url=${l!=null&&l.value?l.value:z("getUser").getUser(i==null?void 0:i.value).getAvatarURL().split("?")[0].replace(/gif|webp/,"png")}&size=${r?r.value:100}&delay=${d?d.value:20}&version=${D}`).then(g=>g.body);if(t.status==!0){const g={type:"rich",image:{proxy_url:t==null?void 0:t.result,url:t==null?void 0:t.result,width:r?r.value:100,height:r?r.value:100},footer:{text:`Files are purged every 24 hours \u2022 Powered by ${t==null?void 0:t.github}`},color:"0xff0069"};if((m=c==null?void 0:c.value)==null||m){w((y=n==null?void 0:n.channel.id)!=null?y:"0",{embeds:[g]});return}else return{content:t==null?void 0:t.result}}else console.log("[ PetPet Fetch Response ]",t,t==null?void 0:t.status),console.log("[ PetPet Arguments ]",l,i,r,d,c),w((b=n==null?void 0:n.channel.id)!=null?b:"0","Something went wrong, please try again later. Fetch response and PetPet arguments sent to console.")}catch(t){console.log("[ PetPet Error ]",t),console.log("[ PetPet Arguments ]",l,i,r,d,c),w((F=n==null?void 0:n.channel.id)!=null?F:"0","An error occured while fetching and preparing the petpet image. Check debug logs for more info.")}}},H=[V],{components:o}=window.enmity;o.Alert,o.Button,o.FlatList,o.Image,o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const j=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch,o.Text,o.TextInput,o.TouchableHighlight,o.TouchableOpacity,o.TouchableWithoutFeedback,o.Touchable,o.View,o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox,o.FormDivider,o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const U=o.FormRow;o.FormSection,o.FormSelect,o.FormSubLabel,o.FormSwitch,o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const{native:u}=window.enmity;function W(){u.reload()}u.version,u.build,u.device,u.version;var K=({pluginUrl:e})=>f.createElement(U,{label:"Update Plugin",trailing:U.Arrow,onPress:()=>{console.log(e),I(`${e}?${Math.floor(Math.random()*1001)}.js`),$.show({title:"Plugin Update",body:"Updating the plugin using this button will require you to reload Discord. Would you like to reload Discord now?",confirmText:"Yep!",cancelText:"Later",onConfirm:W})}});const Y={...S,onStart(){this.commands=H},onStop(){this.commands=[]},patches:[],getSettingsPanel({settings:e}){return f.createElement(j,{settings:e},f.createElement(K,{pluginUrl:S.sourceUrl}))}};R(Y);

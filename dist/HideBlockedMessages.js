function G(e){window.enmity.plugins.registerPlugin(e)}const _={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function R(...e){return window.enmity.modules.bulk(...e)}function x(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function Y(e){return window.enmity.patcher.create(e)}const y=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const k=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const $=window.enmity.modules.common.Storage,b=window.enmity.modules.common.Toasts,T=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const M=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const j=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const N=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var z="HideBlockedMessages",W="1.3.6",X="patch-1.0.4",q="For when you really need to shut someone the f*** up.",J=[{name:"Marek (modified by spin)",id:"308440976723148800"}],K="#ff0069",Q="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/HideBlockedMessages.js",d={name:z,version:W,build:X,description:q,authors:J,color:K,sourceUrl:Q};function Z(e,t,i){return window.enmity.settings.getBoolean(e,t,i)}const U=e=>{let t=0;for(let i in e)t++;return t},ee=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[U(t)]=`${t[U(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function te(){try{let e=await $.getItem("device_list");if(e)return JSON.parse(e);let t=(await M.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=ee(t);await $.setItem("device_list",i);let s=await $.getItem("device_list");return JSON.parse(s)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function ne(e,t){let i=await te();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Software Version:** ${k.DCDDeviceManager.systemVersion}
> **Device:** ${i[k.DCDDeviceManager.device]}`}function m(e){return window.enmity.assets.getIDByName(e)}const c={Debug:m("debug"),Retry:m("ic_message_retry"),Failed:m("Small"),Cancel:m("ic_megaphone_nsfw_16px"),Delete:m("ic_message_delete"),Copy:m("toast_copy_link"),Open:m("ic_leave_stage"),Clipboard:m("pending-alert"),Debug_Command:{Sent:m("ic_application_command_24px"),Clock:m("clock")},Settings:{Toasts:{Context:m("toast_image_saved"),Settings:m("ic_selection_checked_24px")},Share:m("share"),Commands:m("ic_profile_badge_bot_commands"),Debug:m("ic_rulebook_16px")}},A=e=>{b.open({content:`Copied ${e} to clipboard.`,source:c.Clipboard})},{native:v}=window.enmity;function oe(){v.reload()}v.version,v.build,v.device,v.version;const ie=x("transitionToGuild");async function ae({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,i=await(await M.get(t)).text;let s=i.match(/\d\.\d\.\d+/g),a=i.match(/patch\-\d\.\d\.\d+/g);return!s||!a?H(e.name,e.version):(s=s[0],a=a[0],s!=e.version?V(t,s,a.split("-")[1],e,!1):a!=e.build?V(t,s,a.split("-")[1],e,!0):H(e.name,e.version))}const V=(e,t,i,s,a)=>{const u=a?i:t;T.show({title:"Update found",body:`A newer ${a?"build":"version"} is available for ${s.name}. ${a?`
The version will remain at ${t}, but the build will update to ${i}.`:""}
Would you like to install ${a?`build \`${i}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>se(e,u,s,a)})},H=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),b.open({content:`${e} is on latest version (${t})`,source:c.Settings.Toasts.Settings})};async function se(e,t,i,s){window.enmity.plugins.installPlugin(e,({data:a})=>{a=="installed_plugin"||a=="overridden_plugin"?T.show({title:`Updated ${i.name}`,body:`Successfully updated to ${s?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{oe()}}):T.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{ie.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error%3A%20${s?`b${version}`:`v${version}`}`)},onCancel:()=>{T.close()}})})}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const re=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const le=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const f=o.Text;o.TextInput,o.TouchableHighlight;const S=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const E=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const L=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const l=o.FormRow,P=o.FormSection;o.FormSelect,o.FormSubLabel;const me=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const D=window.enmity.modules.common.Components.General.Animated,[C,ce]=R(_.byProps("transitionToGuild"),_.byProps("setString"));var de=({manifest:e})=>{const t=N.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25},header:{color:y.ThemeColorMap.HEADER_PRIMARY,fontFamily:y.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:y.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),i=n.useRef(new D.Value(1)).current,s=()=>{D.spring(i,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},a=()=>{D.spring(i,{toValue:1,duration:250,useNativeDriver:!0}).start()},u=()=>{C.openURL("https://spin.rip/")},h={transform:[{scale:i}]};return n.createElement(n.Fragment,null,n.createElement(E,{style:t.container},n.createElement(S,{onPress:u,onPressIn:s,onPressOut:a},n.createElement(D.View,{style:[h]},n.createElement(re,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(E,{style:t.text_container},n.createElement(S,{onPress:()=>{C.openURL(e.sourceUrl)}},n.createElement(f,{style:[t.main_text,t.header]},e.name," ")),n.createElement(E,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"A plugin by"),n.createElement(S,{onPress:()=>{C.openURL("https://spin.rip/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(E,{style:{flexDirection:"row"}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Settings page by"),n.createElement(S,{onPress:()=>{C.openURL("https://github.com/acquitelol/")}},n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},"Acquite <3"))),n.createElement(E,null,n.createElement(S,{style:{flexDirection:"row"},onPress:()=>{ce.setString(`**${e.name}** v${e.version}`),A("plugin name and version")}},n.createElement(f,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(f,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:y.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[ue,O]=R(_.byProps("transitionToGuild"),_.byProps("setString"));var ge=({manifest:e,settings:t,hasToasts:i,section:s,commands:a})=>{const u=N.createThemedStyleSheet({icon:{color:y.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:y.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[h,p]=n.useState(),[g,w]=n.useState();return n.createElement(n.Fragment,null,n.createElement(le,{onTouchStart:r=>{p(r.nativeEvent.pageX),w(r.nativeEvent.pageY)},onTouchEnd:r=>{h-r.nativeEvent.pageX<-100&&g-r.nativeEvent.pageY<40&&g-r.nativeEvent.pageY>-40&&j.pop()}},n.createElement(de,{manifest:e}),s,a&&n.createElement(P,{title:"Plugin Commands"},a.map(r=>n.createElement(l,{label:`/${r.name}`,subLabel:r.description,leading:n.createElement(l.Icon,{style:u.icon,source:c.Settings.Commands}),trailing:l.Arrow,onPress:function(){O.setString(`/${r.name}`),A(`the command ${r.name}`)}}))),n.createElement(P,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(l,{label:"Initialization Toasts",leading:n.createElement(l.Icon,{style:u.icon,source:c.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(me,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),b.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:c.Settings.Toasts.Settings})}})}),n.createElement(L,null)),n.createElement(l,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(l.Icon,{style:u.icon,source:c.Settings.Debug}),trailing:l.Arrow,onPress:async function(){O.setString(await ne(e.name,e.version)),A("plugin debug information")}}),n.createElement(L,null),n.createElement(l,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(l.Icon,{style:u.icon,source:c.Delete}),trailing:l.Arrow,onPress:async function(){await $.removeItem("device_list"),b.open({content:"Cleared device list storage.",source:c.Settings.Toasts.Settings})}})),n.createElement(P,{title:"Source"},n.createElement(l,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(l.Icon,{style:u.icon,source:c.Copy}),trailing:l.Arrow,onPress:()=>{ae({manifest:e})}}),n.createElement(L,null),n.createElement(l,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(l.Icon,{style:u.icon,source:c.Open}),trailing:l.Arrow,onPress:()=>{ue.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(l,{label:`Plugin Version: ${e.version}`})))};const F=Y("HideBlockedMessages"),I=x("_currentDispatchActionType","_subscriptions","_waitQueue"),B=x("isBlocked","isFriend"),pe={...d,onStart(){let e=0,t=3;const i=()=>{let s=Z(d.name,`${d.name}-toastEnable`,!1);try{e++,console.log(`${d.name} delayed start attempt ${e}/${t}.`),s&&b.open({content:`${d.name} start attempt ${e}/${t}.`,source:c.Debug});const a=I._actionHandlers._orderedActionHandlers.LOAD_MESSAGES_SUCCESS.find(p=>p.name==="MessageStore"),u=I._actionHandlers._orderedActionHandlers.MESSAGE_CREATE.find(p=>p.name==="MessageStore"),h=I._actionHandlers._orderedActionHandlers.MESSAGE_UPDATE.find(p=>p.name==="MessageStore");F.before(u,"actionHandler",(p,g)=>{var w;const r=g[0].message;g[0].message=B.isBlocked((w=r==null?void 0:r.author)==null?void 0:w.id)?null:r}),F.before(h,"actionHandler",(p,g)=>{var w;const r=g[0].message;g[0].message=B.isBlocked((w=r==null?void 0:r.author)==null?void 0:w.id)?null:r}),F.before(a,"actionHandler",(p,g)=>{g[0].messages=g[0].messages.filter(w=>!B.isBlocked(w.author.id))}),console.log(`${d.name} delayed start successful.`),s&&b.open({content:`${d.name} start successful.`,source:c.Settings.Toasts.Settings})}catch(a){console.log(`[${d.name} Error]`,a),e<t?(console.warn(`${d.name} failed to start. Trying again in ${e}0s.`),s&&b.open({content:`${d.name} failed to start trying again in ${e}0s.`,source:c.Failed}),setTimeout(i,e*1e4)):(console.error(`${d.name} failed to start. Giving up.`),b.open({content:`${d.name} failed to start. Giving up.`,source:c.Failed}))}};setTimeout(i,300)},onStop(){F.unpatchAll()},patches:[],getSettingsPanel({settings:e}){return n.createElement(ge,{manifest:d,settings:e,hasToasts:!0,section:null,commands:null})}};G(pe);

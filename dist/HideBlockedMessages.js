function B(o){window.enmity.plugins.registerPlugin(o)}function F(o){return window.enmity.plugins.installPlugin(o)}function g(...o){return window.enmity.modules.getByProps(...o)}window.enmity.modules.common;function v(o){return window.enmity.patcher.create(o)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const y=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const d=window.enmity.modules.common.Toasts,A=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;var T="HideBlockedMessages",b="1.3.2",H="For when you really need to shut someone the f*** up.",E=[{name:"Marek (modified by spin)",id:"308440976723148800"}],C="#ff0069",_="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/HideBlockedMessages.js",h={name:T,version:b,description:H,authors:E,color:C,sourceUrl:_};function l(o){return window.enmity.assets.getIDByName(o)}function D(o){return window.enmity.settings.makeStore(o)}const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const L=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch,e.Text,e.TextInput,e.TouchableHighlight,e.TouchableOpacity,e.TouchableWithoutFeedback,e.Touchable,e.View,e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const p=e.FormRow;e.FormSection,e.FormSelect,e.FormSubLabel,e.FormSwitch,e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;const{native:m}=window.enmity;function P(){m.reload()}m.version,m.build,m.device,m.version;var U=({pluginUrl:o})=>y.createElement(p,{label:"Update Plugin",trailing:p.Arrow,onPress:()=>{console.log(o),F(`${o}?${Math.floor(Math.random()*1001)}.js`),A.show({title:"Plugin Update",body:"Updating the plugin using this button will require you to reload Discord. Would you like to reload Discord now?",confirmText:"Yep!",cancelText:"Later",onConfirm:P})}});const r=v("HideBlockedMessages"),a=g("_currentDispatchActionType","_subscriptions","_waitQueue"),c=g("isBlocked","isFriend"),x={...h,onStart(){const o=D(this.name);a.dispatch({type:"LOAD_MESSAGES"}),o.set("test","test"),a.dispatch({type:"LOAD_MESSAGES_SUCCESS",channelId:0,messages:[],isBefore:!1,isAfter:!1,hasMoreBefore:!1,hasMoreAfter:!1,limit:25,jump:void 0,isStale:!1,truncate:void 0});let i=0,u=3;const S=()=>{try{i++,console.log(`HideBlockedMessages delayed start attempt ${i}/${u}.`),d.open({content:`HideBlockedMessages start attempt ${i}/${u}.`,source:l("debug")});const w=a._actionHandlers._orderedActionHandlers.LOAD_MESSAGES_SUCCESS.find(t=>t.name==="MessageStore"),f=a._actionHandlers._orderedActionHandlers.MESSAGE_CREATE.find(t=>t.name==="MessageStore"),M=a._actionHandlers._orderedActionHandlers.MESSAGE_UPDATE.find(t=>t.name==="MessageStore"),k=g("getMessage","getMessages");r.before(f,"actionHandler",(t,s)=>{const n=s[0].message;s[0].message=c.isBlocked(n.author.id)?null:n}),r.before(M,"actionHandler",(t,s)=>{const n=s[0].message;s[0].message=c.isBlocked(n.author.id)?null:n}),r.after(k,"getMessage",(t,s,n)=>{n=c.isBlocked(n.author.id)?null:n}),r.before(w,"actionHandler",(t,s)=>{s[0].messages=s[0].messages.filter(n=>!c.isBlocked(n.author.id))}),console.log("HideBlockedMessages delayed start successful."),d.open({content:"HideBlockedMessages delayed start successful.",source:l("Check")})}catch(w){console.log("[HideBlockedMessages Error]",w),i<u?(console.warn(`HideBlockedMessages failed to start. Trying again in ${i}0s.`),d.open({content:`HideBlockedMessages failed to start trying again in ${i}0s.`,source:l("ic_message_retry")}),setTimeout(S,i*1e4)):(console.error("HideBlockedMessages failed to start. Giving up."),d.open({content:"HideBlockedMessages failed to start. Giving up.",source:l("Small")}))}};setTimeout(S,300)},onStop(){r.unpatchAll()},patches:[],getSettingsPanel({settings:o}){return y.createElement(L,{settings:o},y.createElement(U,{pluginUrl:h.sourceUrl}))}};B(x);
